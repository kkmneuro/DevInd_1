#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAcessLogic.DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="BOExchange_NG")]
	public partial class dbMan_Report_ClientCommissionReport_MTMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public dbMan_Report_ClientCommissionReport_MTMDataContext() : 
				base(global::DataAcessLogic.Properties.Settings.Default.BOExchange_NGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientCommissionReport_MTMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientCommissionReport_MTMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientCommissionReport_MTMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientCommissionReport_MTMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[Function(Name="dbo.Report_ClientCommissionReport_MTM")]
		public ISingleResult<Report_ClientCommissionReport_MTMResult> Report_ClientCommissionReport_MTM([Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID, [Parameter(Name="FromDatetime", DbType="DateTime")] System.Nullable<System.DateTime> fromDatetime, [Parameter(Name="Symbol", DbType="VarChar(20)")] string symbol, [Parameter(Name="BrokerID", DbType="Int")] System.Nullable<int> brokerID, [Parameter(Name="ParentBrokerID", DbType="Int")] System.Nullable<int> parentBrokerID, [Parameter(Name="ToDatetime", DbType="DateTime")] System.Nullable<System.DateTime> toDatetime)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountID, fromDatetime, symbol, brokerID, parentBrokerID, toDatetime);
			return ((ISingleResult<Report_ClientCommissionReport_MTMResult>)(result.ReturnValue));
		}
	}
	
	public partial class Report_ClientCommissionReport_MTMResult
	{
		
		private int _FK_AccountID;
		
		private string _Symbol;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private int _BuyQty;
		
		private decimal _BuyValue;
		
		private decimal _BuyAvg;
		
		private System.Nullable<int> _SellQty;
		
		private System.Nullable<decimal> _SellValue;
		
		private decimal _SellAvg;
		
		private System.Nullable<int> _NetQty;
		
		private System.Nullable<int> _SqrQty;
		
		private System.Nullable<decimal> _NetValue;
		
		private System.Nullable<decimal> _NetAvgPrice;
		
		private System.Nullable<decimal> _MarketCapitaliz;
		
		private System.Nullable<decimal> _GrossPL;
		
		private decimal _Commission;
		
		private decimal _Tax;
		
		private System.Nullable<decimal> _NetPL;
		
		private System.Nullable<int> _BrokerId;
		
		public Report_ClientCommissionReport_MTMResult()
		{
		}
		
		[Column(Storage="_FK_AccountID", DbType="Int NOT NULL")]
		public int FK_AccountID
		{
			get
			{
				return this._FK_AccountID;
			}
			set
			{
				if ((this._FK_AccountID != value))
				{
					this._FK_AccountID = value;
				}
			}
		}
		
		[Column(Storage="_Symbol", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this._Symbol = value;
				}
			}
		}
		
		[Column(Storage="_DateTime", DbType="Date")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[Column(Storage="_BuyQty", DbType="Int NOT NULL")]
		public int BuyQty
		{
			get
			{
				return this._BuyQty;
			}
			set
			{
				if ((this._BuyQty != value))
				{
					this._BuyQty = value;
				}
			}
		}
		
		[Column(Storage="_BuyValue", DbType="Decimal(0,0) NOT NULL")]
		public decimal BuyValue
		{
			get
			{
				return this._BuyValue;
			}
			set
			{
				if ((this._BuyValue != value))
				{
					this._BuyValue = value;
				}
			}
		}
		
		[Column(Storage="_BuyAvg", DbType="Decimal(0,0) NOT NULL")]
		public decimal BuyAvg
		{
			get
			{
				return this._BuyAvg;
			}
			set
			{
				if ((this._BuyAvg != value))
				{
					this._BuyAvg = value;
				}
			}
		}
		
		[Column(Storage="_SellQty", DbType="Int")]
		public System.Nullable<int> SellQty
		{
			get
			{
				return this._SellQty;
			}
			set
			{
				if ((this._SellQty != value))
				{
					this._SellQty = value;
				}
			}
		}
		
		[Column(Storage="_SellValue", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> SellValue
		{
			get
			{
				return this._SellValue;
			}
			set
			{
				if ((this._SellValue != value))
				{
					this._SellValue = value;
				}
			}
		}
		
		[Column(Storage="_SellAvg", DbType="Decimal(0,0) NOT NULL")]
		public decimal SellAvg
		{
			get
			{
				return this._SellAvg;
			}
			set
			{
				if ((this._SellAvg != value))
				{
					this._SellAvg = value;
				}
			}
		}
		
		[Column(Storage="_NetQty", DbType="Int")]
		public System.Nullable<int> NetQty
		{
			get
			{
				return this._NetQty;
			}
			set
			{
				if ((this._NetQty != value))
				{
					this._NetQty = value;
				}
			}
		}
		
		[Column(Storage="_SqrQty", DbType="Int")]
		public System.Nullable<int> SqrQty
		{
			get
			{
				return this._SqrQty;
			}
			set
			{
				if ((this._SqrQty != value))
				{
					this._SqrQty = value;
				}
			}
		}
		
		[Column(Storage="_NetValue", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> NetValue
		{
			get
			{
				return this._NetValue;
			}
			set
			{
				if ((this._NetValue != value))
				{
					this._NetValue = value;
				}
			}
		}
		
		[Column(Storage="_NetAvgPrice", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> NetAvgPrice
		{
			get
			{
				return this._NetAvgPrice;
			}
			set
			{
				if ((this._NetAvgPrice != value))
				{
					this._NetAvgPrice = value;
				}
			}
		}
		
		[Column(Storage="_MarketCapitaliz", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> MarketCapitaliz
		{
			get
			{
				return this._MarketCapitaliz;
			}
			set
			{
				if ((this._MarketCapitaliz != value))
				{
					this._MarketCapitaliz = value;
				}
			}
		}
		
		[Column(Storage="_GrossPL", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> GrossPL
		{
			get
			{
				return this._GrossPL;
			}
			set
			{
				if ((this._GrossPL != value))
				{
					this._GrossPL = value;
				}
			}
		}
		
		[Column(Storage="_Commission", DbType="Decimal(0,0) NOT NULL")]
		public decimal Commission
		{
			get
			{
				return this._Commission;
			}
			set
			{
				if ((this._Commission != value))
				{
					this._Commission = value;
				}
			}
		}
		
		[Column(Storage="_Tax", DbType="Decimal(0,0) NOT NULL")]
		public decimal Tax
		{
			get
			{
				return this._Tax;
			}
			set
			{
				if ((this._Tax != value))
				{
					this._Tax = value;
				}
			}
		}
		
		[Column(Storage="_NetPL", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> NetPL
		{
			get
			{
				return this._NetPL;
			}
			set
			{
				if ((this._NetPL != value))
				{
					this._NetPL = value;
				}
			}
		}
		
		[Column(Storage="_BrokerId", DbType="Int")]
		public System.Nullable<int> BrokerId
		{
			get
			{
				return this._BrokerId;
			}
			set
			{
				if ((this._BrokerId != value))
				{
					this._BrokerId = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
