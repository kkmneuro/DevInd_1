#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataAcessLogic.DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="BOExchange_NG")]
	public partial class dbMan_Report_ClientHoldingStocklDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public dbMan_Report_ClientHoldingStocklDataContext() : 
				base(global::DataAcessLogic.Properties.Settings.Default.BOExchange_NGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientHoldingStocklDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientHoldingStocklDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientHoldingStocklDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_Report_ClientHoldingStocklDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[Function(Name="dbo.Report_ClientHoldingStock")]
		public ISingleResult<Report_ClientHoldingStockResult> Report_ClientHoldingStock([Parameter(Name="Symbol", DbType="VarChar(20)")] string symbol, [Parameter(DbType="DateTime")] System.Nullable<System.DateTime> datetime, [Parameter(Name="BrokerID", DbType="Int")] System.Nullable<int> brokerID, [Parameter(Name="ParentBrokerID", DbType="Int")] System.Nullable<int> parentBrokerID, [Parameter(Name="AccountID", DbType="Int")] System.Nullable<int> accountID)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), symbol, datetime, brokerID, parentBrokerID, accountID);
			return ((ISingleResult<Report_ClientHoldingStockResult>)(result.ReturnValue));
		}
	}
	
	public partial class Report_ClientHoldingStockResult
	{
		
		private int _FK_AccountID;
		
		private System.Nullable<int> _SecurityTypeID;
		
		private string _ProductType;
		
		private int _FK_Symbol;
		
		private string _Symbol;
		
		private System.Nullable<int> _BuyUnit;
		
		private System.Nullable<int> _SellUnit;
		
		private System.Nullable<decimal> _Capital;
		
		private System.Nullable<System.DateTime> _DateTime;
		
		private int _BrokerID;
		
		private string _BrokerCompany;
		
		private string _ClintName;
		
		public Report_ClientHoldingStockResult()
		{
		}
		
		[Column(Storage="_FK_AccountID", DbType="Int NOT NULL")]
		public int FK_AccountID
		{
			get
			{
				return this._FK_AccountID;
			}
			set
			{
				if ((this._FK_AccountID != value))
				{
					this._FK_AccountID = value;
				}
			}
		}
		
		[Column(Storage="_SecurityTypeID", DbType="Int")]
		public System.Nullable<int> SecurityTypeID
		{
			get
			{
				return this._SecurityTypeID;
			}
			set
			{
				if ((this._SecurityTypeID != value))
				{
					this._SecurityTypeID = value;
				}
			}
		}
		
		[Column(Storage="_ProductType", DbType="VarChar(10)")]
		public string ProductType
		{
			get
			{
				return this._ProductType;
			}
			set
			{
				if ((this._ProductType != value))
				{
					this._ProductType = value;
				}
			}
		}
		
		[Column(Storage="_FK_Symbol", DbType="Int NOT NULL")]
		public int FK_Symbol
		{
			get
			{
				return this._FK_Symbol;
			}
			set
			{
				if ((this._FK_Symbol != value))
				{
					this._FK_Symbol = value;
				}
			}
		}
		
		[Column(Storage="_Symbol", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Symbol
		{
			get
			{
				return this._Symbol;
			}
			set
			{
				if ((this._Symbol != value))
				{
					this._Symbol = value;
				}
			}
		}
		
		[Column(Storage="_BuyUnit", DbType="Int")]
		public System.Nullable<int> BuyUnit
		{
			get
			{
				return this._BuyUnit;
			}
			set
			{
				if ((this._BuyUnit != value))
				{
					this._BuyUnit = value;
				}
			}
		}
		
		[Column(Storage="_SellUnit", DbType="Int")]
		public System.Nullable<int> SellUnit
		{
			get
			{
				return this._SellUnit;
			}
			set
			{
				if ((this._SellUnit != value))
				{
					this._SellUnit = value;
				}
			}
		}
		
		[Column(Storage="_Capital", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> Capital
		{
			get
			{
				return this._Capital;
			}
			set
			{
				if ((this._Capital != value))
				{
					this._Capital = value;
				}
			}
		}
		
		[Column(Storage="_DateTime", DbType="Date")]
		public System.Nullable<System.DateTime> DateTime
		{
			get
			{
				return this._DateTime;
			}
			set
			{
				if ((this._DateTime != value))
				{
					this._DateTime = value;
				}
			}
		}
		
		[Column(Storage="_BrokerID", DbType="Int NOT NULL")]
		public int BrokerID
		{
			get
			{
				return this._BrokerID;
			}
			set
			{
				if ((this._BrokerID != value))
				{
					this._BrokerID = value;
				}
			}
		}
		
		[Column(Storage="_BrokerCompany", DbType="VarChar(50)")]
		public string BrokerCompany
		{
			get
			{
				return this._BrokerCompany;
			}
			set
			{
				if ((this._BrokerCompany != value))
				{
					this._BrokerCompany = value;
				}
			}
		}
		
		[Column(Storage="_ClintName", DbType="VarChar(152)")]
		public string ClintName
		{
			get
			{
				return this._ClintName;
			}
			set
			{
				if ((this._ClintName != value))
				{
					this._ClintName = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
