#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LtechIndia.BackOffice.BOEngine.DAL.DB_New
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="BOExchange")]
	public partial class dbMan_BO_GetBrokerSymbolSettingDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    #endregion
		
		public dbMan_BO_GetBrokerSymbolSettingDataContext() : 
				base(global::LtechIndia.BackOffice.BOEngine.DAL.Properties.Settings.Default.BOExchangeConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_BO_GetBrokerSymbolSettingDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_BO_GetBrokerSymbolSettingDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_BO_GetBrokerSymbolSettingDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbMan_BO_GetBrokerSymbolSettingDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GetBrokerSymbolSetting")]
		public ISingleResult<GetBrokerSymbolSettingResult> GetBrokerSymbolSetting([global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrokersGroupID", DbType="Int")] System.Nullable<int> brokersGroupID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Instrument", DbType="VarChar(20)")] string instrument, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BrokerType", DbType="VarChar(20)")] string brokerType)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brokersGroupID, instrument, brokerType);
			return ((ISingleResult<GetBrokerSymbolSettingResult>)(result.ReturnValue));
		}
	}
	
	public partial class GetBrokerSymbolSettingResult
	{
		
		private int _FK_AccountGroupId;
		
		private int _FK_SecurityTypeID;
		
		private int _FK_InstruementID;
		
		private System.Nullable<decimal> _LongPositionSwap;
		
		private System.Nullable<decimal> _ShortPositionSwap;
		
		private System.Nullable<decimal> _MarginPercentage;
		
		private bool _IsActive;
		
		public GetBrokerSymbolSettingResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_AccountGroupId", DbType="Int NOT NULL")]
		public int FK_AccountGroupId
		{
			get
			{
				return this._FK_AccountGroupId;
			}
			set
			{
				if ((this._FK_AccountGroupId != value))
				{
					this._FK_AccountGroupId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_SecurityTypeID", DbType="Int NOT NULL")]
		public int FK_SecurityTypeID
		{
			get
			{
				return this._FK_SecurityTypeID;
			}
			set
			{
				if ((this._FK_SecurityTypeID != value))
				{
					this._FK_SecurityTypeID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FK_InstruementID", DbType="Int NOT NULL")]
		public int FK_InstruementID
		{
			get
			{
				return this._FK_InstruementID;
			}
			set
			{
				if ((this._FK_InstruementID != value))
				{
					this._FK_InstruementID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongPositionSwap", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> LongPositionSwap
		{
			get
			{
				return this._LongPositionSwap;
			}
			set
			{
				if ((this._LongPositionSwap != value))
				{
					this._LongPositionSwap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortPositionSwap", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> ShortPositionSwap
		{
			get
			{
				return this._ShortPositionSwap;
			}
			set
			{
				if ((this._ShortPositionSwap != value))
				{
					this._ShortPositionSwap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MarginPercentage", DbType="Decimal(0,0)")]
		public System.Nullable<decimal> MarginPercentage
		{
			get
			{
				return this._MarginPercentage;
			}
			set
			{
				if ((this._MarginPercentage != value))
				{
					this._MarginPercentage = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="Bit NOT NULL")]
		public bool IsActive
		{
			get
			{
				return this._IsActive;
			}
			set
			{
				if ((this._IsActive != value))
				{
					this._IsActive = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
