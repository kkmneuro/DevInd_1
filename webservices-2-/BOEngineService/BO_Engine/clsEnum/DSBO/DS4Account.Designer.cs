//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace clsInterface4OME.DSBO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS4Account")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS4Account : global::System.Data.DataSet {
        
        private dtBankInformationDataTable tabledtBankInformation;
        
        private dtAccountsDataTable tabledtAccounts;
        
        private dtClientInfoDataTable tabledtClientInfo;
        
        private dtCountryMasterDataTable tabledtCountryMaster;
        
        private global::System.Data.DataRelation relationdtClientInfo_BankInformation;
        
        private global::System.Data.DataRelation relationdtClientInfo_Accounts;
        
        private global::System.Data.DataRelation relationCountryMaster_dtClientInfo1;
        
        private global::System.Data.DataRelation relationCountryMaster_dtClientInfo;
        
        private global::System.Data.DataRelation relationCountryMaster_BankInformation;
        
        private global::System.Data.DataRelation relationdtBankInformation_dtAccounts;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DS4Account() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DS4Account(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtBankInformation"] != null)) {
                    base.Tables.Add(new dtBankInformationDataTable(ds.Tables["dtBankInformation"]));
                }
                if ((ds.Tables["dtAccounts"] != null)) {
                    base.Tables.Add(new dtAccountsDataTable(ds.Tables["dtAccounts"]));
                }
                if ((ds.Tables["dtClientInfo"] != null)) {
                    base.Tables.Add(new dtClientInfoDataTable(ds.Tables["dtClientInfo"]));
                }
                if ((ds.Tables["dtCountryMaster"] != null)) {
                    base.Tables.Add(new dtCountryMasterDataTable(ds.Tables["dtCountryMaster"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtBankInformationDataTable dtBankInformation {
            get {
                return this.tabledtBankInformation;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtAccountsDataTable dtAccounts {
            get {
                return this.tabledtAccounts;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtClientInfoDataTable dtClientInfo {
            get {
                return this.tabledtClientInfo;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtCountryMasterDataTable dtCountryMaster {
            get {
                return this.tabledtCountryMaster;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DS4Account cln = ((DS4Account)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtBankInformation"] != null)) {
                    base.Tables.Add(new dtBankInformationDataTable(ds.Tables["dtBankInformation"]));
                }
                if ((ds.Tables["dtAccounts"] != null)) {
                    base.Tables.Add(new dtAccountsDataTable(ds.Tables["dtAccounts"]));
                }
                if ((ds.Tables["dtClientInfo"] != null)) {
                    base.Tables.Add(new dtClientInfoDataTable(ds.Tables["dtClientInfo"]));
                }
                if ((ds.Tables["dtCountryMaster"] != null)) {
                    base.Tables.Add(new dtCountryMasterDataTable(ds.Tables["dtCountryMaster"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabledtBankInformation = ((dtBankInformationDataTable)(base.Tables["dtBankInformation"]));
            if ((initTable == true)) {
                if ((this.tabledtBankInformation != null)) {
                    this.tabledtBankInformation.InitVars();
                }
            }
            this.tabledtAccounts = ((dtAccountsDataTable)(base.Tables["dtAccounts"]));
            if ((initTable == true)) {
                if ((this.tabledtAccounts != null)) {
                    this.tabledtAccounts.InitVars();
                }
            }
            this.tabledtClientInfo = ((dtClientInfoDataTable)(base.Tables["dtClientInfo"]));
            if ((initTable == true)) {
                if ((this.tabledtClientInfo != null)) {
                    this.tabledtClientInfo.InitVars();
                }
            }
            this.tabledtCountryMaster = ((dtCountryMasterDataTable)(base.Tables["dtCountryMaster"]));
            if ((initTable == true)) {
                if ((this.tabledtCountryMaster != null)) {
                    this.tabledtCountryMaster.InitVars();
                }
            }
            this.relationdtClientInfo_BankInformation = this.Relations["dtClientInfo_BankInformation"];
            this.relationdtClientInfo_Accounts = this.Relations["dtClientInfo_Accounts"];
            this.relationCountryMaster_dtClientInfo1 = this.Relations["CountryMaster_dtClientInfo1"];
            this.relationCountryMaster_dtClientInfo = this.Relations["CountryMaster_dtClientInfo"];
            this.relationCountryMaster_BankInformation = this.Relations["CountryMaster_BankInformation"];
            this.relationdtBankInformation_dtAccounts = this.Relations["dtBankInformation_dtAccounts"];
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DS4Account";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS4Account.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtBankInformation = new dtBankInformationDataTable();
            base.Tables.Add(this.tabledtBankInformation);
            this.tabledtAccounts = new dtAccountsDataTable();
            base.Tables.Add(this.tabledtAccounts);
            this.tabledtClientInfo = new dtClientInfoDataTable();
            base.Tables.Add(this.tabledtClientInfo);
            this.tabledtCountryMaster = new dtCountryMasterDataTable();
            base.Tables.Add(this.tabledtCountryMaster);
            this.relationdtClientInfo_BankInformation = new global::System.Data.DataRelation("dtClientInfo_BankInformation", new global::System.Data.DataColumn[] {
                        this.tabledtClientInfo.ClientIdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtBankInformation.ClientIDColumn}, false);
            this.Relations.Add(this.relationdtClientInfo_BankInformation);
            this.relationdtClientInfo_Accounts = new global::System.Data.DataRelation("dtClientInfo_Accounts", new global::System.Data.DataColumn[] {
                        this.tabledtClientInfo.ClientIdColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtAccounts.ClientIDColumn}, false);
            this.Relations.Add(this.relationdtClientInfo_Accounts);
            this.relationCountryMaster_dtClientInfo1 = new global::System.Data.DataRelation("CountryMaster_dtClientInfo1", new global::System.Data.DataColumn[] {
                        this.tabledtCountryMaster.PK_CountryIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtClientInfo.FK_NationalityIDColumn}, false);
            this.Relations.Add(this.relationCountryMaster_dtClientInfo1);
            this.relationCountryMaster_dtClientInfo = new global::System.Data.DataRelation("CountryMaster_dtClientInfo", new global::System.Data.DataColumn[] {
                        this.tabledtCountryMaster.PK_CountryIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtClientInfo.FK_CountryIDColumn}, false);
            this.Relations.Add(this.relationCountryMaster_dtClientInfo);
            this.relationCountryMaster_BankInformation = new global::System.Data.DataRelation("CountryMaster_BankInformation", new global::System.Data.DataColumn[] {
                        this.tabledtCountryMaster.PK_CountryIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtBankInformation.FK_BankCountryIDColumn}, false);
            this.Relations.Add(this.relationCountryMaster_BankInformation);
            this.relationdtBankInformation_dtAccounts = new global::System.Data.DataRelation("dtBankInformation_dtAccounts", new global::System.Data.DataColumn[] {
                        this.tabledtBankInformation.PK_BankIDColumn}, new global::System.Data.DataColumn[] {
                        this.tabledtAccounts.FK_BankIDColumn}, false);
            this.Relations.Add(this.relationdtBankInformation_dtAccounts);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtBankInformation() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtAccounts() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtClientInfo() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtCountryMaster() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS4Account ds = new DS4Account();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtBankInformationRowChangeEventHandler(object sender, dtBankInformationRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtAccountsRowChangeEventHandler(object sender, dtAccountsRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtClientInfoRowChangeEventHandler(object sender, dtClientInfoRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtCountryMasterRowChangeEventHandler(object sender, dtCountryMasterRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtBankInformationDataTable : global::System.Data.TypedTableBase<dtBankInformationRow> {
            
            private global::System.Data.DataColumn columnPK_BankID;
            
            private global::System.Data.DataColumn columnAccountHolderName;
            
            private global::System.Data.DataColumn columnBankAccountID;
            
            private global::System.Data.DataColumn columnBankName;
            
            private global::System.Data.DataColumn columnFK_BankCountryID;
            
            private global::System.Data.DataColumn columnBankCity;
            
            private global::System.Data.DataColumn columnBankZipCode;
            
            private global::System.Data.DataColumn columnBankAddress1;
            
            private global::System.Data.DataColumn columnBankAddress2;
            
            private global::System.Data.DataColumn columnBankPhone;
            
            private global::System.Data.DataColumn columnBankFax;
            
            private global::System.Data.DataColumn columnBankSwiftCode;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnBankAccountType;
            
            private global::System.Data.DataColumn columnBankIFSCCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationDataTable() {
                this.TableName = "dtBankInformation";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtBankInformationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtBankInformationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PK_BankIDColumn {
                get {
                    return this.columnPK_BankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountHolderNameColumn {
                get {
                    return this.columnAccountHolderName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccountIDColumn {
                get {
                    return this.columnBankAccountID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankNameColumn {
                get {
                    return this.columnBankName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_BankCountryIDColumn {
                get {
                    return this.columnFK_BankCountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankCityColumn {
                get {
                    return this.columnBankCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankZipCodeColumn {
                get {
                    return this.columnBankZipCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAddress1Column {
                get {
                    return this.columnBankAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAddress2Column {
                get {
                    return this.columnBankAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankPhoneColumn {
                get {
                    return this.columnBankPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankFaxColumn {
                get {
                    return this.columnBankFax;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankSwiftCodeColumn {
                get {
                    return this.columnBankSwiftCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankAccountTypeColumn {
                get {
                    return this.columnBankAccountType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BankIFSCCodeColumn {
                get {
                    return this.columnBankIFSCCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow this[int index] {
                get {
                    return ((dtBankInformationRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtBankInformationRowChangeEventHandler dtBankInformationRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtBankInformationRowChangeEventHandler dtBankInformationRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtBankInformationRowChangeEventHandler dtBankInformationRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtBankInformationRowChangeEventHandler dtBankInformationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtBankInformationRow(dtBankInformationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow AdddtBankInformationRow(string AccountHolderName, string BankAccountID, string BankName, dtCountryMasterRow parentdtCountryMasterRowByCountryMaster_BankInformation, string BankCity, string BankZipCode, string BankAddress1, string BankAddress2, string BankPhone, string BankFax, string BankSwiftCode, dtClientInfoRow parentdtClientInfoRowBydtClientInfo_BankInformation, string BankAccountType, string BankIFSCCode) {
                dtBankInformationRow rowdtBankInformationRow = ((dtBankInformationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        AccountHolderName,
                        BankAccountID,
                        BankName,
                        null,
                        BankCity,
                        BankZipCode,
                        BankAddress1,
                        BankAddress2,
                        BankPhone,
                        BankFax,
                        BankSwiftCode,
                        null,
                        BankAccountType,
                        BankIFSCCode};
                if ((parentdtCountryMasterRowByCountryMaster_BankInformation != null)) {
                    columnValuesArray[4] = parentdtCountryMasterRowByCountryMaster_BankInformation[0];
                }
                if ((parentdtClientInfoRowBydtClientInfo_BankInformation != null)) {
                    columnValuesArray[12] = parentdtClientInfoRowBydtClientInfo_BankInformation[0];
                }
                rowdtBankInformationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtBankInformationRow);
                return rowdtBankInformationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow FindByPK_BankID(int PK_BankID) {
                return ((dtBankInformationRow)(this.Rows.Find(new object[] {
                            PK_BankID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtBankInformationDataTable cln = ((dtBankInformationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtBankInformationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPK_BankID = base.Columns["PK_BankID"];
                this.columnAccountHolderName = base.Columns["AccountHolderName"];
                this.columnBankAccountID = base.Columns["BankAccountID"];
                this.columnBankName = base.Columns["BankName"];
                this.columnFK_BankCountryID = base.Columns["FK_BankCountryID"];
                this.columnBankCity = base.Columns["BankCity"];
                this.columnBankZipCode = base.Columns["BankZipCode"];
                this.columnBankAddress1 = base.Columns["BankAddress1"];
                this.columnBankAddress2 = base.Columns["BankAddress2"];
                this.columnBankPhone = base.Columns["BankPhone"];
                this.columnBankFax = base.Columns["BankFax"];
                this.columnBankSwiftCode = base.Columns["BankSwiftCode"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnBankAccountType = base.Columns["BankAccountType"];
                this.columnBankIFSCCode = base.Columns["BankIFSCCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPK_BankID = new global::System.Data.DataColumn("PK_BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_BankID);
                this.columnAccountHolderName = new global::System.Data.DataColumn("AccountHolderName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountHolderName);
                this.columnBankAccountID = new global::System.Data.DataColumn("BankAccountID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountID);
                this.columnBankName = new global::System.Data.DataColumn("BankName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankName);
                this.columnFK_BankCountryID = new global::System.Data.DataColumn("FK_BankCountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_BankCountryID);
                this.columnBankCity = new global::System.Data.DataColumn("BankCity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankCity);
                this.columnBankZipCode = new global::System.Data.DataColumn("BankZipCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankZipCode);
                this.columnBankAddress1 = new global::System.Data.DataColumn("BankAddress1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAddress1);
                this.columnBankAddress2 = new global::System.Data.DataColumn("BankAddress2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAddress2);
                this.columnBankPhone = new global::System.Data.DataColumn("BankPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankPhone);
                this.columnBankFax = new global::System.Data.DataColumn("BankFax", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankFax);
                this.columnBankSwiftCode = new global::System.Data.DataColumn("BankSwiftCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankSwiftCode);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnBankAccountType = new global::System.Data.DataColumn("BankAccountType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankAccountType);
                this.columnBankIFSCCode = new global::System.Data.DataColumn("BankIFSCCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBankIFSCCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_BankID}, true));
                this.columnPK_BankID.AutoIncrement = true;
                this.columnPK_BankID.AutoIncrementSeed = -1;
                this.columnPK_BankID.AutoIncrementStep = -1;
                this.columnPK_BankID.AllowDBNull = false;
                this.columnPK_BankID.ReadOnly = true;
                this.columnPK_BankID.Unique = true;
                this.columnAccountHolderName.MaxLength = 50;
                this.columnBankAccountID.AllowDBNull = false;
                this.columnBankName.MaxLength = 50;
                this.columnBankCity.MaxLength = 50;
                this.columnBankZipCode.MaxLength = 50;
                this.columnBankAddress1.MaxLength = 50;
                this.columnBankAddress2.MaxLength = 50;
                this.columnBankPhone.MaxLength = 50;
                this.columnBankFax.MaxLength = 50;
                this.columnBankSwiftCode.MaxLength = 50;
                this.columnClientID.Caption = "FK_ParticipantID";
                this.columnBankAccountType.MaxLength = 50;
                this.columnBankIFSCCode.MaxLength = 20;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow NewdtBankInformationRow() {
                return ((dtBankInformationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtBankInformationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtBankInformationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtBankInformationRowChanged != null)) {
                    this.dtBankInformationRowChanged(this, new dtBankInformationRowChangeEvent(((dtBankInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtBankInformationRowChanging != null)) {
                    this.dtBankInformationRowChanging(this, new dtBankInformationRowChangeEvent(((dtBankInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtBankInformationRowDeleted != null)) {
                    this.dtBankInformationRowDeleted(this, new dtBankInformationRowChangeEvent(((dtBankInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtBankInformationRowDeleting != null)) {
                    this.dtBankInformationRowDeleting(this, new dtBankInformationRowChangeEvent(((dtBankInformationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtBankInformationRow(dtBankInformationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS4Account ds = new DS4Account();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtBankInformationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtAccountsDataTable : global::System.Data.TypedTableBase<dtAccountsRow> {
            
            private global::System.Data.DataColumn columnPK_AccountId;
            
            private global::System.Data.DataColumn columnClientID;
            
            private global::System.Data.DataColumn columnFK_AccountGroupID;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnEquity;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnUsedMargin;
            
            private global::System.Data.DataColumn columnFK_Leverage;
            
            private global::System.Data.DataColumn columnIsHedgingAllowed;
            
            private global::System.Data.DataColumn columnIsTradeEnable;
            
            private global::System.Data.DataColumn columnFK_Currency;
            
            private global::System.Data.DataColumn columnBuySideTurnOver;
            
            private global::System.Data.DataColumn columnSellSideTurnOver;
            
            private global::System.Data.DataColumn columnFK_BankID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsDataTable() {
                this.TableName = "dtAccounts";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtAccountsDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtAccountsDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PK_AccountIdColumn {
                get {
                    return this.columnPK_AccountId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIDColumn {
                get {
                    return this.columnClientID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_AccountGroupIDColumn {
                get {
                    return this.columnFK_AccountGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquityColumn {
                get {
                    return this.columnEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn UsedMarginColumn {
                get {
                    return this.columnUsedMargin;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_LeverageColumn {
                get {
                    return this.columnFK_Leverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsHedgingAllowedColumn {
                get {
                    return this.columnIsHedgingAllowed;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IsTradeEnableColumn {
                get {
                    return this.columnIsTradeEnable;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_CurrencyColumn {
                get {
                    return this.columnFK_Currency;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BuySideTurnOverColumn {
                get {
                    return this.columnBuySideTurnOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SellSideTurnOverColumn {
                get {
                    return this.columnSellSideTurnOver;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_BankIDColumn {
                get {
                    return this.columnFK_BankID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow this[int index] {
                get {
                    return ((dtAccountsRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtAccountsRowChangeEventHandler dtAccountsRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtAccountsRowChangeEventHandler dtAccountsRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtAccountsRowChangeEventHandler dtAccountsRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtAccountsRowChangeEventHandler dtAccountsRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtAccountsRow(dtAccountsRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow AdddtAccountsRow(dtClientInfoRow parentdtClientInfoRowBydtClientInfo_Accounts, int FK_AccountGroupID, decimal Balance, decimal Equity, bool Deleted, decimal UsedMargin, int FK_Leverage, bool IsHedgingAllowed, bool IsTradeEnable, int FK_Currency, decimal BuySideTurnOver, decimal SellSideTurnOver, dtBankInformationRow parentdtBankInformationRowBydtBankInformation_dtAccounts) {
                dtAccountsRow rowdtAccountsRow = ((dtAccountsRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        null,
                        FK_AccountGroupID,
                        Balance,
                        Equity,
                        Deleted,
                        UsedMargin,
                        FK_Leverage,
                        IsHedgingAllowed,
                        IsTradeEnable,
                        FK_Currency,
                        BuySideTurnOver,
                        SellSideTurnOver,
                        null};
                if ((parentdtClientInfoRowBydtClientInfo_Accounts != null)) {
                    columnValuesArray[1] = parentdtClientInfoRowBydtClientInfo_Accounts[0];
                }
                if ((parentdtBankInformationRowBydtBankInformation_dtAccounts != null)) {
                    columnValuesArray[13] = parentdtBankInformationRowBydtBankInformation_dtAccounts[0];
                }
                rowdtAccountsRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtAccountsRow);
                return rowdtAccountsRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow FindByPK_AccountId(int PK_AccountId) {
                return ((dtAccountsRow)(this.Rows.Find(new object[] {
                            PK_AccountId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtAccountsDataTable cln = ((dtAccountsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtAccountsDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPK_AccountId = base.Columns["PK_AccountId"];
                this.columnClientID = base.Columns["ClientID"];
                this.columnFK_AccountGroupID = base.Columns["FK_AccountGroupID"];
                this.columnBalance = base.Columns["Balance"];
                this.columnEquity = base.Columns["Equity"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnUsedMargin = base.Columns["UsedMargin"];
                this.columnFK_Leverage = base.Columns["FK_Leverage"];
                this.columnIsHedgingAllowed = base.Columns["IsHedgingAllowed"];
                this.columnIsTradeEnable = base.Columns["IsTradeEnable"];
                this.columnFK_Currency = base.Columns["FK_Currency"];
                this.columnBuySideTurnOver = base.Columns["BuySideTurnOver"];
                this.columnSellSideTurnOver = base.Columns["SellSideTurnOver"];
                this.columnFK_BankID = base.Columns["FK_BankID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPK_AccountId = new global::System.Data.DataColumn("PK_AccountId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_AccountId);
                this.columnClientID = new global::System.Data.DataColumn("ClientID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientID);
                this.columnFK_AccountGroupID = new global::System.Data.DataColumn("FK_AccountGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_AccountGroupID);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnEquity = new global::System.Data.DataColumn("Equity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquity);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnUsedMargin = new global::System.Data.DataColumn("UsedMargin", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnUsedMargin);
                this.columnFK_Leverage = new global::System.Data.DataColumn("FK_Leverage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_Leverage);
                this.columnIsHedgingAllowed = new global::System.Data.DataColumn("IsHedgingAllowed", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHedgingAllowed);
                this.columnIsTradeEnable = new global::System.Data.DataColumn("IsTradeEnable", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsTradeEnable);
                this.columnFK_Currency = new global::System.Data.DataColumn("FK_Currency", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_Currency);
                this.columnBuySideTurnOver = new global::System.Data.DataColumn("BuySideTurnOver", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBuySideTurnOver);
                this.columnSellSideTurnOver = new global::System.Data.DataColumn("SellSideTurnOver", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSellSideTurnOver);
                this.columnFK_BankID = new global::System.Data.DataColumn("FK_BankID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_BankID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_AccountId}, true));
                this.columnPK_AccountId.AutoIncrement = true;
                this.columnPK_AccountId.AutoIncrementSeed = -1;
                this.columnPK_AccountId.AutoIncrementStep = -1;
                this.columnPK_AccountId.AllowDBNull = false;
                this.columnPK_AccountId.ReadOnly = true;
                this.columnPK_AccountId.Unique = true;
                this.columnClientID.AllowDBNull = false;
                this.columnClientID.Caption = "FK_ParticipantID";
                this.columnBalance.AllowDBNull = false;
                this.columnEquity.AllowDBNull = false;
                this.columnUsedMargin.AllowDBNull = false;
                this.columnFK_Leverage.AllowDBNull = false;
                this.columnBuySideTurnOver.Caption = "Buy Side TurnOver";
                this.columnSellSideTurnOver.Caption = "Sell Side TurnOver";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow NewdtAccountsRow() {
                return ((dtAccountsRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtAccountsRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtAccountsRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtAccountsRowChanged != null)) {
                    this.dtAccountsRowChanged(this, new dtAccountsRowChangeEvent(((dtAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtAccountsRowChanging != null)) {
                    this.dtAccountsRowChanging(this, new dtAccountsRowChangeEvent(((dtAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtAccountsRowDeleted != null)) {
                    this.dtAccountsRowDeleted(this, new dtAccountsRowChangeEvent(((dtAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtAccountsRowDeleting != null)) {
                    this.dtAccountsRowDeleting(this, new dtAccountsRowChangeEvent(((dtAccountsRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtAccountsRow(dtAccountsRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS4Account ds = new DS4Account();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtAccountsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtClientInfoDataTable : global::System.Data.TypedTableBase<dtClientInfoRow> {
            
            private global::System.Data.DataColumn columnClientId;
            
            private global::System.Data.DataColumn columnFirstName;
            
            private global::System.Data.DataColumn columnMidleName;
            
            private global::System.Data.DataColumn columnLastName;
            
            private global::System.Data.DataColumn columnAddress1;
            
            private global::System.Data.DataColumn columnAddress2;
            
            private global::System.Data.DataColumn columnCity;
            
            private global::System.Data.DataColumn columnState;
            
            private global::System.Data.DataColumn columnZip;
            
            private global::System.Data.DataColumn columnFaxNumber;
            
            private global::System.Data.DataColumn columnMobile;
            
            private global::System.Data.DataColumn columnPassportId;
            
            private global::System.Data.DataColumn columnSSN;
            
            private global::System.Data.DataColumn columnDOB;
            
            private global::System.Data.DataColumn columnGender;
            
            private global::System.Data.DataColumn columnStatus;
            
            private global::System.Data.DataColumn columnCountry;
            
            private global::System.Data.DataColumn columnFK_CountryID;
            
            private global::System.Data.DataColumn columnFK_NationalityID;
            
            private global::System.Data.DataColumn columnGroupName;
            
            private global::System.Data.DataColumn columnAccountGroupID;
            
            private global::System.Data.DataColumn columnParticipantType;
            
            private global::System.Data.DataColumn columnAccountType;
            
            private global::System.Data.DataColumn columnAccountTypeID;
            
            private global::System.Data.DataColumn columnDeleted;
            
            private global::System.Data.DataColumn columnBalance;
            
            private global::System.Data.DataColumn columnEquity;
            
            private global::System.Data.DataColumn columnMasterPassword;
            
            private global::System.Data.DataColumn columnTradingPassword;
            
            private global::System.Data.DataColumn columnPrimaryPhone;
            
            private global::System.Data.DataColumn columnSecondaryPhone;
            
            private global::System.Data.DataColumn columnRegistrationDate;
            
            private global::System.Data.DataColumn columnPrimaryEmailAddress;
            
            private global::System.Data.DataColumn columnSecondaryEmailAddress;
            
            private global::System.Data.DataColumn columnPAN;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnLoginID;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoDataTable() {
                this.TableName = "dtClientInfo";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtClientInfoDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtClientInfoDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ClientIdColumn {
                get {
                    return this.columnClientId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FirstNameColumn {
                get {
                    return this.columnFirstName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MidleNameColumn {
                get {
                    return this.columnMidleName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LastNameColumn {
                get {
                    return this.columnLastName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address1Column {
                get {
                    return this.columnAddress1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Address2Column {
                get {
                    return this.columnAddress2;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CityColumn {
                get {
                    return this.columnCity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StateColumn {
                get {
                    return this.columnState;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ZipColumn {
                get {
                    return this.columnZip;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FaxNumberColumn {
                get {
                    return this.columnFaxNumber;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MobileColumn {
                get {
                    return this.columnMobile;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PassportIdColumn {
                get {
                    return this.columnPassportId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SSNColumn {
                get {
                    return this.columnSSN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DOBColumn {
                get {
                    return this.columnDOB;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GenderColumn {
                get {
                    return this.columnGender;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StatusColumn {
                get {
                    return this.columnStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryColumn {
                get {
                    return this.columnCountry;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_CountryIDColumn {
                get {
                    return this.columnFK_CountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FK_NationalityIDColumn {
                get {
                    return this.columnFK_NationalityID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GroupNameColumn {
                get {
                    return this.columnGroupName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountGroupIDColumn {
                get {
                    return this.columnAccountGroupID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ParticipantTypeColumn {
                get {
                    return this.columnParticipantType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeColumn {
                get {
                    return this.columnAccountType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AccountTypeIDColumn {
                get {
                    return this.columnAccountTypeID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DeletedColumn {
                get {
                    return this.columnDeleted;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn BalanceColumn {
                get {
                    return this.columnBalance;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn EquityColumn {
                get {
                    return this.columnEquity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MasterPasswordColumn {
                get {
                    return this.columnMasterPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TradingPasswordColumn {
                get {
                    return this.columnTradingPassword;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrimaryPhoneColumn {
                get {
                    return this.columnPrimaryPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondaryPhoneColumn {
                get {
                    return this.columnSecondaryPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RegistrationDateColumn {
                get {
                    return this.columnRegistrationDate;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PrimaryEmailAddressColumn {
                get {
                    return this.columnPrimaryEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SecondaryEmailAddressColumn {
                get {
                    return this.columnSecondaryEmailAddress;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PANColumn {
                get {
                    return this.columnPAN;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn LoginIDColumn {
                get {
                    return this.columnLoginID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow this[int index] {
                get {
                    return ((dtClientInfoRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtClientInfoRowChangeEventHandler dtClientInfoRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtClientInfoRowChangeEventHandler dtClientInfoRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtClientInfoRowChangeEventHandler dtClientInfoRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtClientInfoRowChangeEventHandler dtClientInfoRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtClientInfoRow(dtClientInfoRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow AdddtClientInfoRow(
                        int ClientId, 
                        string FirstName, 
                        string MidleName, 
                        string LastName, 
                        string Address1, 
                        string Address2, 
                        string City, 
                        string State, 
                        string Zip, 
                        string FaxNumber, 
                        string Mobile, 
                        string PassportId, 
                        string SSN, 
                        System.DateTime DOB, 
                        string Gender, 
                        bool Status, 
                        string Country, 
                        dtCountryMasterRow parentdtCountryMasterRowByCountryMaster_dtClientInfo, 
                        dtCountryMasterRow parentdtCountryMasterRowByCountryMaster_dtClientInfo1, 
                        string GroupName, 
                        int AccountGroupID, 
                        int ParticipantType, 
                        string AccountType, 
                        int AccountTypeID, 
                        bool Deleted, 
                        decimal Balance, 
                        decimal Equity, 
                        string MasterPassword, 
                        string TradingPassword, 
                        string PrimaryPhone, 
                        string SecondaryPhone, 
                        System.DateTime RegistrationDate, 
                        string PrimaryEmailAddress, 
                        string SecondaryEmailAddress, 
                        string PAN, 
                        string Age, 
                        string LoginID) {
                dtClientInfoRow rowdtClientInfoRow = ((dtClientInfoRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ClientId,
                        FirstName,
                        MidleName,
                        LastName,
                        Address1,
                        Address2,
                        City,
                        State,
                        Zip,
                        FaxNumber,
                        Mobile,
                        PassportId,
                        SSN,
                        DOB,
                        Gender,
                        Status,
                        Country,
                        null,
                        null,
                        GroupName,
                        AccountGroupID,
                        ParticipantType,
                        AccountType,
                        AccountTypeID,
                        Deleted,
                        Balance,
                        Equity,
                        MasterPassword,
                        TradingPassword,
                        PrimaryPhone,
                        SecondaryPhone,
                        RegistrationDate,
                        PrimaryEmailAddress,
                        SecondaryEmailAddress,
                        PAN,
                        Age,
                        LoginID};
                if ((parentdtCountryMasterRowByCountryMaster_dtClientInfo != null)) {
                    columnValuesArray[17] = parentdtCountryMasterRowByCountryMaster_dtClientInfo[0];
                }
                if ((parentdtCountryMasterRowByCountryMaster_dtClientInfo1 != null)) {
                    columnValuesArray[18] = parentdtCountryMasterRowByCountryMaster_dtClientInfo1[0];
                }
                rowdtClientInfoRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtClientInfoRow);
                return rowdtClientInfoRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow FindByClientId(int ClientId) {
                return ((dtClientInfoRow)(this.Rows.Find(new object[] {
                            ClientId})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtClientInfoDataTable cln = ((dtClientInfoDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtClientInfoDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnClientId = base.Columns["ClientId"];
                this.columnFirstName = base.Columns["FirstName"];
                this.columnMidleName = base.Columns["MidleName"];
                this.columnLastName = base.Columns["LastName"];
                this.columnAddress1 = base.Columns["Address1"];
                this.columnAddress2 = base.Columns["Address2"];
                this.columnCity = base.Columns["City"];
                this.columnState = base.Columns["State"];
                this.columnZip = base.Columns["Zip"];
                this.columnFaxNumber = base.Columns["FaxNumber"];
                this.columnMobile = base.Columns["Mobile"];
                this.columnPassportId = base.Columns["PassportId"];
                this.columnSSN = base.Columns["SSN"];
                this.columnDOB = base.Columns["DOB"];
                this.columnGender = base.Columns["Gender"];
                this.columnStatus = base.Columns["Status"];
                this.columnCountry = base.Columns["Country"];
                this.columnFK_CountryID = base.Columns["FK_CountryID"];
                this.columnFK_NationalityID = base.Columns["FK_NationalityID"];
                this.columnGroupName = base.Columns["GroupName"];
                this.columnAccountGroupID = base.Columns["AccountGroupID"];
                this.columnParticipantType = base.Columns["ParticipantType"];
                this.columnAccountType = base.Columns["AccountType"];
                this.columnAccountTypeID = base.Columns["AccountTypeID"];
                this.columnDeleted = base.Columns["Deleted"];
                this.columnBalance = base.Columns["Balance"];
                this.columnEquity = base.Columns["Equity"];
                this.columnMasterPassword = base.Columns["MasterPassword"];
                this.columnTradingPassword = base.Columns["TradingPassword"];
                this.columnPrimaryPhone = base.Columns["PrimaryPhone"];
                this.columnSecondaryPhone = base.Columns["SecondaryPhone"];
                this.columnRegistrationDate = base.Columns["RegistrationDate"];
                this.columnPrimaryEmailAddress = base.Columns["PrimaryEmailAddress"];
                this.columnSecondaryEmailAddress = base.Columns["SecondaryEmailAddress"];
                this.columnPAN = base.Columns["PAN"];
                this.columnAge = base.Columns["Age"];
                this.columnLoginID = base.Columns["LoginID"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnClientId = new global::System.Data.DataColumn("ClientId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnClientId);
                this.columnFirstName = new global::System.Data.DataColumn("FirstName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFirstName);
                this.columnMidleName = new global::System.Data.DataColumn("MidleName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMidleName);
                this.columnLastName = new global::System.Data.DataColumn("LastName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLastName);
                this.columnAddress1 = new global::System.Data.DataColumn("Address1", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress1);
                this.columnAddress2 = new global::System.Data.DataColumn("Address2", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAddress2);
                this.columnCity = new global::System.Data.DataColumn("City", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCity);
                this.columnState = new global::System.Data.DataColumn("State", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnState);
                this.columnZip = new global::System.Data.DataColumn("Zip", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZip);
                this.columnFaxNumber = new global::System.Data.DataColumn("FaxNumber", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFaxNumber);
                this.columnMobile = new global::System.Data.DataColumn("Mobile", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMobile);
                this.columnPassportId = new global::System.Data.DataColumn("PassportId", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPassportId);
                this.columnSSN = new global::System.Data.DataColumn("SSN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSSN);
                this.columnDOB = new global::System.Data.DataColumn("DOB", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDOB);
                this.columnGender = new global::System.Data.DataColumn("Gender", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGender);
                this.columnStatus = new global::System.Data.DataColumn("Status", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStatus);
                this.columnCountry = new global::System.Data.DataColumn("Country", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountry);
                this.columnFK_CountryID = new global::System.Data.DataColumn("FK_CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_CountryID);
                this.columnFK_NationalityID = new global::System.Data.DataColumn("FK_NationalityID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFK_NationalityID);
                this.columnGroupName = new global::System.Data.DataColumn("GroupName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroupName);
                this.columnAccountGroupID = new global::System.Data.DataColumn("AccountGroupID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountGroupID);
                this.columnParticipantType = new global::System.Data.DataColumn("ParticipantType", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnParticipantType);
                this.columnAccountType = new global::System.Data.DataColumn("AccountType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountType);
                this.columnAccountTypeID = new global::System.Data.DataColumn("AccountTypeID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAccountTypeID);
                this.columnDeleted = new global::System.Data.DataColumn("Deleted", typeof(bool), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDeleted);
                this.columnBalance = new global::System.Data.DataColumn("Balance", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnBalance);
                this.columnEquity = new global::System.Data.DataColumn("Equity", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEquity);
                this.columnMasterPassword = new global::System.Data.DataColumn("MasterPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMasterPassword);
                this.columnTradingPassword = new global::System.Data.DataColumn("TradingPassword", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTradingPassword);
                this.columnPrimaryPhone = new global::System.Data.DataColumn("PrimaryPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryPhone);
                this.columnSecondaryPhone = new global::System.Data.DataColumn("SecondaryPhone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondaryPhone);
                this.columnRegistrationDate = new global::System.Data.DataColumn("RegistrationDate", typeof(global::System.DateTime), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRegistrationDate);
                this.columnPrimaryEmailAddress = new global::System.Data.DataColumn("PrimaryEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrimaryEmailAddress);
                this.columnSecondaryEmailAddress = new global::System.Data.DataColumn("SecondaryEmailAddress", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSecondaryEmailAddress);
                this.columnPAN = new global::System.Data.DataColumn("PAN", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPAN);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnLoginID = new global::System.Data.DataColumn("LoginID", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLoginID);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnClientId}, true));
                this.columnClientId.AllowDBNull = false;
                this.columnClientId.Unique = true;
                this.columnClientId.Caption = "Client Id";
                this.columnFirstName.Caption = "First Name";
                this.columnMidleName.Caption = "Midle Name";
                this.columnFaxNumber.Caption = "Fax Number";
                this.columnPassportId.Caption = "Passport Id";
                this.columnGender.AllowDBNull = false;
                this.columnFK_CountryID.Caption = "Country ID";
                this.columnFK_NationalityID.Caption = "Nationality ID";
                this.columnGroupName.Caption = "Group Name";
                this.columnAccountGroupID.Caption = "Account Group ID";
                this.columnParticipantType.Caption = "Participant Type";
                this.columnAccountType.Caption = "Account Type";
                this.columnAccountTypeID.Caption = "Account Type ID";
                this.columnMasterPassword.Caption = "Master Password";
                this.columnTradingPassword.Caption = "Trading Password";
                this.columnPrimaryPhone.Caption = "Primary Phone";
                this.columnSecondaryPhone.Caption = "Secondary Phone";
                this.columnRegistrationDate.Caption = "Registration Date";
                this.columnPrimaryEmailAddress.Caption = "Primary Email";
                this.columnSecondaryEmailAddress.Caption = "Secondary Email";
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow NewdtClientInfoRow() {
                return ((dtClientInfoRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtClientInfoRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtClientInfoRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtClientInfoRowChanged != null)) {
                    this.dtClientInfoRowChanged(this, new dtClientInfoRowChangeEvent(((dtClientInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtClientInfoRowChanging != null)) {
                    this.dtClientInfoRowChanging(this, new dtClientInfoRowChangeEvent(((dtClientInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtClientInfoRowDeleted != null)) {
                    this.dtClientInfoRowDeleted(this, new dtClientInfoRowChangeEvent(((dtClientInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtClientInfoRowDeleting != null)) {
                    this.dtClientInfoRowDeleting(this, new dtClientInfoRowChangeEvent(((dtClientInfoRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtClientInfoRow(dtClientInfoRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS4Account ds = new DS4Account();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtClientInfoDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtCountryMasterDataTable : global::System.Data.TypedTableBase<dtCountryMasterRow> {
            
            private global::System.Data.DataColumn columnPK_CountryID;
            
            private global::System.Data.DataColumn columnCountryName;
            
            private global::System.Data.DataColumn columnNationality;
            
            private global::System.Data.DataColumn columnCountryCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterDataTable() {
                this.TableName = "dtCountryMaster";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCountryMasterDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtCountryMasterDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PK_CountryIDColumn {
                get {
                    return this.columnPK_CountryID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryNameColumn {
                get {
                    return this.columnCountryName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NationalityColumn {
                get {
                    return this.columnNationality;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CountryCodeColumn {
                get {
                    return this.columnCountryCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow this[int index] {
                get {
                    return ((dtCountryMasterRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCountryMasterRowChangeEventHandler dtCountryMasterRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCountryMasterRowChangeEventHandler dtCountryMasterRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCountryMasterRowChangeEventHandler dtCountryMasterRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtCountryMasterRowChangeEventHandler dtCountryMasterRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtCountryMasterRow(dtCountryMasterRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow AdddtCountryMasterRow(int PK_CountryID, string CountryName, string Nationality, string CountryCode) {
                dtCountryMasterRow rowdtCountryMasterRow = ((dtCountryMasterRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        PK_CountryID,
                        CountryName,
                        Nationality,
                        CountryCode};
                rowdtCountryMasterRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtCountryMasterRow);
                return rowdtCountryMasterRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow FindByPK_CountryID(int PK_CountryID) {
                return ((dtCountryMasterRow)(this.Rows.Find(new object[] {
                            PK_CountryID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtCountryMasterDataTable cln = ((dtCountryMasterDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtCountryMasterDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnPK_CountryID = base.Columns["PK_CountryID"];
                this.columnCountryName = base.Columns["CountryName"];
                this.columnNationality = base.Columns["Nationality"];
                this.columnCountryCode = base.Columns["CountryCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnPK_CountryID = new global::System.Data.DataColumn("PK_CountryID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPK_CountryID);
                this.columnCountryName = new global::System.Data.DataColumn("CountryName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryName);
                this.columnNationality = new global::System.Data.DataColumn("Nationality", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNationality);
                this.columnCountryCode = new global::System.Data.DataColumn("CountryCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCountryCode);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnPK_CountryID}, true));
                this.columnPK_CountryID.AllowDBNull = false;
                this.columnPK_CountryID.Unique = true;
                this.columnCountryName.MaxLength = 50;
                this.columnNationality.MaxLength = 50;
                this.columnCountryCode.MaxLength = 3;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow NewdtCountryMasterRow() {
                return ((dtCountryMasterRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtCountryMasterRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtCountryMasterRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtCountryMasterRowChanged != null)) {
                    this.dtCountryMasterRowChanged(this, new dtCountryMasterRowChangeEvent(((dtCountryMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtCountryMasterRowChanging != null)) {
                    this.dtCountryMasterRowChanging(this, new dtCountryMasterRowChangeEvent(((dtCountryMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtCountryMasterRowDeleted != null)) {
                    this.dtCountryMasterRowDeleted(this, new dtCountryMasterRowChangeEvent(((dtCountryMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtCountryMasterRowDeleting != null)) {
                    this.dtCountryMasterRowDeleting(this, new dtCountryMasterRowChangeEvent(((dtCountryMasterRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtCountryMasterRow(dtCountryMasterRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS4Account ds = new DS4Account();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtCountryMasterDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtBankInformationRow : global::System.Data.DataRow {
            
            private dtBankInformationDataTable tabledtBankInformation;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtBankInformationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtBankInformation = ((dtBankInformationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PK_BankID {
                get {
                    return ((int)(this[this.tabledtBankInformation.PK_BankIDColumn]));
                }
                set {
                    this[this.tabledtBankInformation.PK_BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountHolderName {
                get {
                    if (this.IsAccountHolderNameNull()) {
                        return "";
                    }
                    else {
                        return ((string)(this[this.tabledtBankInformation.AccountHolderNameColumn]));
                    }
                }
                set {
                    this[this.tabledtBankInformation.AccountHolderNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAccountID {
                get {
                    return ((string)(this[this.tabledtBankInformation.BankAccountIDColumn]));
                }
                set {
                    this[this.tabledtBankInformation.BankAccountIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankName {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankName\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_BankCountryID {
                get {
                    try {
                        return ((int)(this[this.tabledtBankInformation.FK_BankCountryIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FK_BankCountryID\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.FK_BankCountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankCity {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankCityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankCity\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankCityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankZipCode {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankZipCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankZipCode\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankZipCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAddress1 {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankAddress1Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAddress1\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankAddress1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAddress2 {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankAddress2Column]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAddress2\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankAddress2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankPhone {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankPhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankPhone\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankFax {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankFaxColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankFax\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankFaxColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankSwiftCode {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankSwiftCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankSwiftCode\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankSwiftCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    try {
                        return ((int)(this[this.tabledtBankInformation.ClientIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ClientID\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankAccountType {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankAccountTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankAccountType\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankAccountTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string BankIFSCCode {
                get {
                    try {
                        return ((string)(this[this.tabledtBankInformation.BankIFSCCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BankIFSCCode\' in table \'dtBankInformation\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtBankInformation.BankIFSCCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow dtClientInfoRow {
                get {
                    return ((dtClientInfoRow)(this.GetParentRow(this.Table.ParentRelations["dtClientInfo_BankInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dtClientInfo_BankInformation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow dtCountryMasterRow {
                get {
                    return ((dtCountryMasterRow)(this.GetParentRow(this.Table.ParentRelations["CountryMaster_BankInformation"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CountryMaster_BankInformation"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountHolderNameNull() {
                return this.IsNull(this.tabledtBankInformation.AccountHolderNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountHolderNameNull() {
                this[this.tabledtBankInformation.AccountHolderNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankNameNull() {
                return this.IsNull(this.tabledtBankInformation.BankNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankNameNull() {
                this[this.tabledtBankInformation.BankNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_BankCountryIDNull() {
                return this.IsNull(this.tabledtBankInformation.FK_BankCountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_BankCountryIDNull() {
                this[this.tabledtBankInformation.FK_BankCountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankCityNull() {
                return this.IsNull(this.tabledtBankInformation.BankCityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankCityNull() {
                this[this.tabledtBankInformation.BankCityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankZipCodeNull() {
                return this.IsNull(this.tabledtBankInformation.BankZipCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankZipCodeNull() {
                this[this.tabledtBankInformation.BankZipCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAddress1Null() {
                return this.IsNull(this.tabledtBankInformation.BankAddress1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAddress1Null() {
                this[this.tabledtBankInformation.BankAddress1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAddress2Null() {
                return this.IsNull(this.tabledtBankInformation.BankAddress2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAddress2Null() {
                this[this.tabledtBankInformation.BankAddress2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankPhoneNull() {
                return this.IsNull(this.tabledtBankInformation.BankPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankPhoneNull() {
                this[this.tabledtBankInformation.BankPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankFaxNull() {
                return this.IsNull(this.tabledtBankInformation.BankFaxColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankFaxNull() {
                this[this.tabledtBankInformation.BankFaxColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankSwiftCodeNull() {
                return this.IsNull(this.tabledtBankInformation.BankSwiftCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankSwiftCodeNull() {
                this[this.tabledtBankInformation.BankSwiftCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsClientIDNull() {
                return this.IsNull(this.tabledtBankInformation.ClientIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetClientIDNull() {
                this[this.tabledtBankInformation.ClientIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankAccountTypeNull() {
                return this.IsNull(this.tabledtBankInformation.BankAccountTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankAccountTypeNull() {
                this[this.tabledtBankInformation.BankAccountTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBankIFSCCodeNull() {
                return this.IsNull(this.tabledtBankInformation.BankIFSCCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBankIFSCCodeNull() {
                this[this.tabledtBankInformation.BankIFSCCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow[] GetdtAccountsRows() {
                if ((this.Table.ChildRelations["dtBankInformation_dtAccounts"] == null)) {
                    return new dtAccountsRow[0];
                }
                else {
                    return ((dtAccountsRow[])(base.GetChildRows(this.Table.ChildRelations["dtBankInformation_dtAccounts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtAccountsRow : global::System.Data.DataRow {
            
            private dtAccountsDataTable tabledtAccounts;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtAccountsRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtAccounts = ((dtAccountsDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PK_AccountId {
                get {
                    return ((int)(this[this.tabledtAccounts.PK_AccountIdColumn]));
                }
                set {
                    this[this.tabledtAccounts.PK_AccountIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientID {
                get {
                    return ((int)(this[this.tabledtAccounts.ClientIDColumn]));
                }
                set {
                    this[this.tabledtAccounts.ClientIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_AccountGroupID {
                get {
                    try {
                        return ((int)(this[this.tabledtAccounts.FK_AccountGroupIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FK_AccountGroupID\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.FK_AccountGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Balance {
                get {
                    return ((decimal)(this[this.tabledtAccounts.BalanceColumn]));
                }
                set {
                    this[this.tabledtAccounts.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Equity {
                get {
                    return ((decimal)(this[this.tabledtAccounts.EquityColumn]));
                }
                set {
                    this[this.tabledtAccounts.EquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted {
                get {
                    try {
                        return ((bool)(this[this.tabledtAccounts.DeletedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Deleted\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal UsedMargin {
                get {
                    return ((decimal)(this[this.tabledtAccounts.UsedMarginColumn]));
                }
                set {
                    this[this.tabledtAccounts.UsedMarginColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_Leverage {
                get {
                    return ((int)(this[this.tabledtAccounts.FK_LeverageColumn]));
                }
                set {
                    this[this.tabledtAccounts.FK_LeverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHedgingAllowed {
                get {
                    try {
                        return ((bool)(this[this.tabledtAccounts.IsHedgingAllowedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsHedgingAllowed\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.IsHedgingAllowedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradeEnable {
                get {
                    try {
                        return ((bool)(this[this.tabledtAccounts.IsTradeEnableColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'IsTradeEnable\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.IsTradeEnableColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_Currency {
                get {
                    try {
                        return ((int)(this[this.tabledtAccounts.FK_CurrencyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FK_Currency\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.FK_CurrencyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal BuySideTurnOver {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAccounts.BuySideTurnOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'BuySideTurnOver\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.BuySideTurnOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal SellSideTurnOver {
                get {
                    try {
                        return ((decimal)(this[this.tabledtAccounts.SellSideTurnOverColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SellSideTurnOver\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.SellSideTurnOverColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_BankID {
                get {
                    try {
                        return ((int)(this[this.tabledtAccounts.FK_BankIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FK_BankID\' in table \'dtAccounts\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtAccounts.FK_BankIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow dtClientInfoRow {
                get {
                    return ((dtClientInfoRow)(this.GetParentRow(this.Table.ParentRelations["dtClientInfo_Accounts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dtClientInfo_Accounts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow dtBankInformationRow {
                get {
                    return ((dtBankInformationRow)(this.GetParentRow(this.Table.ParentRelations["dtBankInformation_dtAccounts"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["dtBankInformation_dtAccounts"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_AccountGroupIDNull() {
                return this.IsNull(this.tabledtAccounts.FK_AccountGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_AccountGroupIDNull() {
                this[this.tabledtAccounts.FK_AccountGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull() {
                return this.IsNull(this.tabledtAccounts.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedNull() {
                this[this.tabledtAccounts.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsHedgingAllowedNull() {
                return this.IsNull(this.tabledtAccounts.IsHedgingAllowedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsHedgingAllowedNull() {
                this[this.tabledtAccounts.IsHedgingAllowedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsIsTradeEnableNull() {
                return this.IsNull(this.tabledtAccounts.IsTradeEnableColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetIsTradeEnableNull() {
                this[this.tabledtAccounts.IsTradeEnableColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_CurrencyNull() {
                return this.IsNull(this.tabledtAccounts.FK_CurrencyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_CurrencyNull() {
                this[this.tabledtAccounts.FK_CurrencyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBuySideTurnOverNull() {
                return this.IsNull(this.tabledtAccounts.BuySideTurnOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBuySideTurnOverNull() {
                this[this.tabledtAccounts.BuySideTurnOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSellSideTurnOverNull() {
                return this.IsNull(this.tabledtAccounts.SellSideTurnOverColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSellSideTurnOverNull() {
                this[this.tabledtAccounts.SellSideTurnOverColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_BankIDNull() {
                return this.IsNull(this.tabledtAccounts.FK_BankIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_BankIDNull() {
                this[this.tabledtAccounts.FK_BankIDColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtClientInfoRow : global::System.Data.DataRow {
            
            private dtClientInfoDataTable tabledtClientInfo;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtClientInfoRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtClientInfo = ((dtClientInfoDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ClientId {
                get {
                    return ((int)(this[this.tabledtClientInfo.ClientIdColumn]));
                }
                set {
                    this[this.tabledtClientInfo.ClientIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FirstName {
                get {
                    if (this.IsFirstNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.FirstNameColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.FirstNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MidleName {
                get {
                    if (this.IsMidleNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.MidleNameColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.MidleNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LastName {
                get {
                    if (this.IsLastNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.LastNameColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.LastNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address1 {
                get {
                    if (this.IsAddress1Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.Address1Column]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.Address1Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Address2 {
                get {
                    if (this.IsAddress2Null()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.Address2Column]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.Address2Column] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string City {
                get {
                    if (this.IsCityNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.CityColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.CityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string State {
                get {
                    if (this.IsStateNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.StateColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.StateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Zip {
                get {
                    if (this.IsZipNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.ZipColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.ZipColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FaxNumber {
                get {
                    if (this.IsFaxNumberNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.FaxNumberColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.FaxNumberColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Mobile {
                get {
                    if (this.IsMobileNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.MobileColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.MobileColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PassportId {
                get {
                    if (this.IsPassportIdNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.PassportIdColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.PassportIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SSN {
                get {
                    if (this.IsSSNNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.SSNColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.SSNColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime DOB {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtClientInfo.DOBColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DOB\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.DOBColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Gender {
                get {
                    return ((string)(this[this.tabledtClientInfo.GenderColumn]));
                }
                set {
                    this[this.tabledtClientInfo.GenderColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Status {
                get {
                    try {
                        return ((bool)(this[this.tabledtClientInfo.StatusColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Status\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.StatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Country {
                get {
                    if (this.IsCountryNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.CountryColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.CountryColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_CountryID {
                get {
                    if (this.IsFK_CountryIDNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tabledtClientInfo.FK_CountryIDColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.FK_CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int FK_NationalityID {
                get {
                    if (this.IsFK_NationalityIDNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tabledtClientInfo.FK_NationalityIDColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.FK_NationalityIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string GroupName {
                get {
                    if (this.IsGroupNameNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.GroupNameColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.GroupNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountGroupID {
                get {
                    if (this.IsAccountGroupIDNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tabledtClientInfo.AccountGroupIDColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.AccountGroupIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ParticipantType {
                get {
                    try {
                        return ((int)(this[this.tabledtClientInfo.ParticipantTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ParticipantType\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.ParticipantTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AccountType {
                get {
                    if (this.IsAccountTypeNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.AccountTypeColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.AccountTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AccountTypeID {
                get {
                    if (this.IsAccountTypeIDNull()) {
                        return -1;
                    }
                    else {
                        return ((int)(this[this.tabledtClientInfo.AccountTypeIDColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.AccountTypeIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool Deleted {
                get {
                    if (this.IsDeletedNull()) {
                        return false;
                    }
                    else {
                        return ((bool)(this[this.tabledtClientInfo.DeletedColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.DeletedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Balance {
                get {
                    if (this.IsBalanceNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tabledtClientInfo.BalanceColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.BalanceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Equity {
                get {
                    if (this.IsEquityNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tabledtClientInfo.EquityColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.EquityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string MasterPassword {
                get {
                    if (this.IsMasterPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.MasterPasswordColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.MasterPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string TradingPassword {
                get {
                    if (this.IsTradingPasswordNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.TradingPasswordColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.TradingPasswordColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrimaryPhone {
                get {
                    if (this.IsPrimaryPhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.PrimaryPhoneColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.PrimaryPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondaryPhone {
                get {
                    if (this.IsSecondaryPhoneNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.SecondaryPhoneColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.SecondaryPhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public System.DateTime RegistrationDate {
                get {
                    try {
                        return ((global::System.DateTime)(this[this.tabledtClientInfo.RegistrationDateColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RegistrationDate\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.RegistrationDateColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PrimaryEmailAddress {
                get {
                    if (this.IsPrimaryEmailAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.PrimaryEmailAddressColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.PrimaryEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SecondaryEmailAddress {
                get {
                    if (this.IsSecondaryEmailAddressNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.SecondaryEmailAddressColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.SecondaryEmailAddressColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PAN {
                get {
                    if (this.IsPANNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtClientInfo.PANColumn]));
                    }
                }
                set {
                    this[this.tabledtClientInfo.PANColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tabledtClientInfo.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string LoginID {
                get {
                    try {
                        return ((string)(this[this.tabledtClientInfo.LoginIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LoginID\' in table \'dtClientInfo\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtClientInfo.LoginIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow dtCountryMasterRowByCountryMaster_dtClientInfo1 {
                get {
                    return ((dtCountryMasterRow)(this.GetParentRow(this.Table.ParentRelations["CountryMaster_dtClientInfo1"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CountryMaster_dtClientInfo1"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow dtCountryMasterRowByCountryMaster_dtClientInfo {
                get {
                    return ((dtCountryMasterRow)(this.GetParentRow(this.Table.ParentRelations["CountryMaster_dtClientInfo"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["CountryMaster_dtClientInfo"]);
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFirstNameNull() {
                return this.IsNull(this.tabledtClientInfo.FirstNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFirstNameNull() {
                this[this.tabledtClientInfo.FirstNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMidleNameNull() {
                return this.IsNull(this.tabledtClientInfo.MidleNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMidleNameNull() {
                this[this.tabledtClientInfo.MidleNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLastNameNull() {
                return this.IsNull(this.tabledtClientInfo.LastNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLastNameNull() {
                this[this.tabledtClientInfo.LastNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress1Null() {
                return this.IsNull(this.tabledtClientInfo.Address1Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress1Null() {
                this[this.tabledtClientInfo.Address1Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAddress2Null() {
                return this.IsNull(this.tabledtClientInfo.Address2Column);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAddress2Null() {
                this[this.tabledtClientInfo.Address2Column] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCityNull() {
                return this.IsNull(this.tabledtClientInfo.CityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCityNull() {
                this[this.tabledtClientInfo.CityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStateNull() {
                return this.IsNull(this.tabledtClientInfo.StateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStateNull() {
                this[this.tabledtClientInfo.StateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsZipNull() {
                return this.IsNull(this.tabledtClientInfo.ZipColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetZipNull() {
                this[this.tabledtClientInfo.ZipColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFaxNumberNull() {
                return this.IsNull(this.tabledtClientInfo.FaxNumberColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFaxNumberNull() {
                this[this.tabledtClientInfo.FaxNumberColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMobileNull() {
                return this.IsNull(this.tabledtClientInfo.MobileColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMobileNull() {
                this[this.tabledtClientInfo.MobileColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPassportIdNull() {
                return this.IsNull(this.tabledtClientInfo.PassportIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPassportIdNull() {
                this[this.tabledtClientInfo.PassportIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSSNNull() {
                return this.IsNull(this.tabledtClientInfo.SSNColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSSNNull() {
                this[this.tabledtClientInfo.SSNColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDOBNull() {
                return this.IsNull(this.tabledtClientInfo.DOBColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDOBNull() {
                this[this.tabledtClientInfo.DOBColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStatusNull() {
                return this.IsNull(this.tabledtClientInfo.StatusColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStatusNull() {
                this[this.tabledtClientInfo.StatusColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNull() {
                return this.IsNull(this.tabledtClientInfo.CountryColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNull() {
                this[this.tabledtClientInfo.CountryColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_CountryIDNull() {
                return this.IsNull(this.tabledtClientInfo.FK_CountryIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_CountryIDNull() {
                this[this.tabledtClientInfo.FK_CountryIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFK_NationalityIDNull() {
                return this.IsNull(this.tabledtClientInfo.FK_NationalityIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFK_NationalityIDNull() {
                this[this.tabledtClientInfo.FK_NationalityIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGroupNameNull() {
                return this.IsNull(this.tabledtClientInfo.GroupNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGroupNameNull() {
                this[this.tabledtClientInfo.GroupNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountGroupIDNull() {
                return this.IsNull(this.tabledtClientInfo.AccountGroupIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountGroupIDNull() {
                this[this.tabledtClientInfo.AccountGroupIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsParticipantTypeNull() {
                return this.IsNull(this.tabledtClientInfo.ParticipantTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetParticipantTypeNull() {
                this[this.tabledtClientInfo.ParticipantTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTypeNull() {
                return this.IsNull(this.tabledtClientInfo.AccountTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTypeNull() {
                this[this.tabledtClientInfo.AccountTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAccountTypeIDNull() {
                return this.IsNull(this.tabledtClientInfo.AccountTypeIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAccountTypeIDNull() {
                this[this.tabledtClientInfo.AccountTypeIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDeletedNull() {
                return this.IsNull(this.tabledtClientInfo.DeletedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDeletedNull() {
                this[this.tabledtClientInfo.DeletedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsBalanceNull() {
                return this.IsNull(this.tabledtClientInfo.BalanceColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetBalanceNull() {
                this[this.tabledtClientInfo.BalanceColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEquityNull() {
                return this.IsNull(this.tabledtClientInfo.EquityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEquityNull() {
                this[this.tabledtClientInfo.EquityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMasterPasswordNull() {
                return this.IsNull(this.tabledtClientInfo.MasterPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMasterPasswordNull() {
                this[this.tabledtClientInfo.MasterPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTradingPasswordNull() {
                return this.IsNull(this.tabledtClientInfo.TradingPasswordColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTradingPasswordNull() {
                this[this.tabledtClientInfo.TradingPasswordColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrimaryPhoneNull() {
                return this.IsNull(this.tabledtClientInfo.PrimaryPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrimaryPhoneNull() {
                this[this.tabledtClientInfo.PrimaryPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondaryPhoneNull() {
                return this.IsNull(this.tabledtClientInfo.SecondaryPhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondaryPhoneNull() {
                this[this.tabledtClientInfo.SecondaryPhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRegistrationDateNull() {
                return this.IsNull(this.tabledtClientInfo.RegistrationDateColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRegistrationDateNull() {
                this[this.tabledtClientInfo.RegistrationDateColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPrimaryEmailAddressNull() {
                return this.IsNull(this.tabledtClientInfo.PrimaryEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPrimaryEmailAddressNull() {
                this[this.tabledtClientInfo.PrimaryEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSecondaryEmailAddressNull() {
                return this.IsNull(this.tabledtClientInfo.SecondaryEmailAddressColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSecondaryEmailAddressNull() {
                this[this.tabledtClientInfo.SecondaryEmailAddressColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPANNull() {
                return this.IsNull(this.tabledtClientInfo.PANColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPANNull() {
                this[this.tabledtClientInfo.PANColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAgeNull() {
                return this.IsNull(this.tabledtClientInfo.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAgeNull() {
                this[this.tabledtClientInfo.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsLoginIDNull() {
                return this.IsNull(this.tabledtClientInfo.LoginIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetLoginIDNull() {
                this[this.tabledtClientInfo.LoginIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow[] GetBankInformationRows() {
                if ((this.Table.ChildRelations["dtClientInfo_BankInformation"] == null)) {
                    return new dtBankInformationRow[0];
                }
                else {
                    return ((dtBankInformationRow[])(base.GetChildRows(this.Table.ChildRelations["dtClientInfo_BankInformation"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow[] GetAccountsRows() {
                if ((this.Table.ChildRelations["dtClientInfo_Accounts"] == null)) {
                    return new dtAccountsRow[0];
                }
                else {
                    return ((dtAccountsRow[])(base.GetChildRows(this.Table.ChildRelations["dtClientInfo_Accounts"])));
                }
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtCountryMasterRow : global::System.Data.DataRow {
            
            private dtCountryMasterDataTable tabledtCountryMaster;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtCountryMasterRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtCountryMaster = ((dtCountryMasterDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int PK_CountryID {
                get {
                    return ((int)(this[this.tabledtCountryMaster.PK_CountryIDColumn]));
                }
                set {
                    this[this.tabledtCountryMaster.PK_CountryIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryName {
                get {
                    try {
                        return ((string)(this[this.tabledtCountryMaster.CountryNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryName\' in table \'dtCountryMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCountryMaster.CountryNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Nationality {
                get {
                    try {
                        return ((string)(this[this.tabledtCountryMaster.NationalityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Nationality\' in table \'dtCountryMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCountryMaster.NationalityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CountryCode {
                get {
                    try {
                        return ((string)(this[this.tabledtCountryMaster.CountryCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CountryCode\' in table \'dtCountryMaster\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtCountryMaster.CountryCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryNameNull() {
                return this.IsNull(this.tabledtCountryMaster.CountryNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryNameNull() {
                this[this.tabledtCountryMaster.CountryNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNationalityNull() {
                return this.IsNull(this.tabledtCountryMaster.NationalityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNationalityNull() {
                this[this.tabledtCountryMaster.NationalityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCountryCodeNull() {
                return this.IsNull(this.tabledtCountryMaster.CountryCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCountryCodeNull() {
                this[this.tabledtCountryMaster.CountryCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow[] GetdtClientInfoRowsByCountryMaster_dtClientInfo1() {
                if ((this.Table.ChildRelations["CountryMaster_dtClientInfo1"] == null)) {
                    return new dtClientInfoRow[0];
                }
                else {
                    return ((dtClientInfoRow[])(base.GetChildRows(this.Table.ChildRelations["CountryMaster_dtClientInfo1"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow[] GetdtClientInfoRowsByCountryMaster_dtClientInfo() {
                if ((this.Table.ChildRelations["CountryMaster_dtClientInfo"] == null)) {
                    return new dtClientInfoRow[0];
                }
                else {
                    return ((dtClientInfoRow[])(base.GetChildRows(this.Table.ChildRelations["CountryMaster_dtClientInfo"])));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow[] GetBankInformationRows() {
                if ((this.Table.ChildRelations["CountryMaster_BankInformation"] == null)) {
                    return new dtBankInformationRow[0];
                }
                else {
                    return ((dtBankInformationRow[])(base.GetChildRows(this.Table.ChildRelations["CountryMaster_BankInformation"])));
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtBankInformationRowChangeEvent : global::System.EventArgs {
            
            private dtBankInformationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRowChangeEvent(dtBankInformationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtBankInformationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtAccountsRowChangeEvent : global::System.EventArgs {
            
            private dtAccountsRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRowChangeEvent(dtAccountsRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtAccountsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtClientInfoRowChangeEvent : global::System.EventArgs {
            
            private dtClientInfoRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRowChangeEvent(dtClientInfoRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtClientInfoRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtCountryMasterRowChangeEvent : global::System.EventArgs {
            
            private dtCountryMasterRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRowChangeEvent(dtCountryMasterRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtCountryMasterRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591