<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IxlFqrW2Hr29XqinSzSNF407VQ82JodbQo5qNjoBRA0Zg4CAqra9vb1eqCBLjUsJcxW6ICBTaZxDs7dq
        eAEBDJWDRYCDAHC9AV4Imw6NBzQ0VjuNm042j6ggJY4zAQGkqn6ADWQfo3ABXqibLY6NjY2NjY2NjY2N
        jY2NjY2NcxV5ua6AZWQfiQEdXGs7U42NjY2NjY2NjY2NjY2NjY1cNI4ouWUfZa4NRCFCqXM2jY2NjY2N
        jY2NjY2NjY2NjTSUnHMoqq5lrn6uqlYVNG2NjY2NjY2NjY2NjY2NjY2NdbxLNI5xqq5kZWV8tRiPQo2N
        jY2NjY2NjY2NjY2NjY0OB44KQxG1PGSuZWS5VJEujY2NjY2NjY2NjY2NjY2NjY4KCRW3j1W7hK5lZKo+
        BxCNjY2NjY2NjY2NjY2NjY2NkUKbIFY3ewaYlWV+fEkVYI2NjY2NjY2NjY2NjY2NjY1chy41BxZUJJNs
        fH6VKDRoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA
</value>
  </data>
</root>