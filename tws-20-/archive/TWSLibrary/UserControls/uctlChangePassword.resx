<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="nGroupBoxEx1.HeaderItem.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>