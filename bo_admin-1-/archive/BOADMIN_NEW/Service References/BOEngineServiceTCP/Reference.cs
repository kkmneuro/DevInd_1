//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BOADMIN_NEW.BOEngineServiceTCP {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsLogin", Namespace="http://schemas.datacontract.org/2004/07/BOEngine")]
    [System.SerializableAttribute()]
    public partial class clsLogin : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerCompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> BrokerNameIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerResponseMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerCompany {
            get {
                return this.BrokerCompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerCompanyField, value) != true)) {
                    this.BrokerCompanyField = value;
                    this.RaisePropertyChanged("BrokerCompany");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerId {
            get {
                return this.BrokerIdField;
            }
            set {
                if ((this.BrokerIdField.Equals(value) != true)) {
                    this.BrokerIdField = value;
                    this.RaisePropertyChanged("BrokerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerName {
            get {
                return this.BrokerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerNameField, value) != true)) {
                    this.BrokerNameField = value;
                    this.RaisePropertyChanged("BrokerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> BrokerNameID {
            get {
                return this.BrokerNameIDField;
            }
            set {
                if ((this.BrokerNameIDField.Equals(value) != true)) {
                    this.BrokerNameIDField = value;
                    this.RaisePropertyChanged("BrokerNameID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginId {
            get {
                return this.LoginIdField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIdField, value) != true)) {
                    this.LoginIdField = value;
                    this.RaisePropertyChanged("LoginId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Role {
            get {
                return this.RoleField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleField, value) != true)) {
                    this.RoleField = value;
                    this.RaisePropertyChanged("Role");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerResponseMsg {
            get {
                return this.ServerResponseMsgField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerResponseMsgField, value) != true)) {
                    this.ServerResponseMsgField = value;
                    this.RaisePropertyChanged("ServerResponseMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsBrokerOperationsLog", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsBrokerOperationsLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OperationNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerID {
            get {
                return this.BrokerIDField;
            }
            set {
                if ((this.BrokerIDField.Equals(value) != true)) {
                    this.BrokerIDField = value;
                    this.RaisePropertyChanged("BrokerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerName {
            get {
                return this.BrokerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerNameField, value) != true)) {
                    this.BrokerNameField = value;
                    this.RaisePropertyChanged("BrokerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OperationName {
            get {
                return this.OperationNameField;
            }
            set {
                if ((object.ReferenceEquals(this.OperationNameField, value) != true)) {
                    this.OperationNameField = value;
                    this.RaisePropertyChanged("OperationName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SNo {
            get {
                return this.SNoField;
            }
            set {
                if ((this.SNoField.Equals(value) != true)) {
                    this.SNoField = value;
                    this.RaisePropertyChanged("SNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OperationTypes", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    public enum OperationTypes : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GET = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        INSERT = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UPDATE = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DELETE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        GET_SESSION = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsHistoricalData", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsHistoricalData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double CloseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime FeedTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double HighField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double LowField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double OpenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Close {
            get {
                return this.CloseField;
            }
            set {
                if ((this.CloseField.Equals(value) != true)) {
                    this.CloseField = value;
                    this.RaisePropertyChanged("Close");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime FeedTime {
            get {
                return this.FeedTimeField;
            }
            set {
                if ((this.FeedTimeField.Equals(value) != true)) {
                    this.FeedTimeField = value;
                    this.RaisePropertyChanged("FeedTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double High {
            get {
                return this.HighField;
            }
            set {
                if ((this.HighField.Equals(value) != true)) {
                    this.HighField = value;
                    this.RaisePropertyChanged("High");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Low {
            get {
                return this.LowField;
            }
            set {
                if ((this.LowField.Equals(value) != true)) {
                    this.LowField = value;
                    this.RaisePropertyChanged("Low");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double Open {
            get {
                return this.OpenField;
            }
            set {
                if ((this.OpenField.Equals(value) != true)) {
                    this.OpenField = value;
                    this.RaisePropertyChanged("Open");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymbolName {
            get {
                return this.SymbolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolNameField, value) != true)) {
                    this.SymbolNameField = value;
                    this.RaisePropertyChanged("SymbolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsIPAccessList", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsIPAccessList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToIpField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromIP {
            get {
                return this.FromIPField;
            }
            set {
                if ((object.ReferenceEquals(this.FromIPField, value) != true)) {
                    this.FromIPField = value;
                    this.RaisePropertyChanged("FromIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseMsg {
            get {
                return this.ServerResponseMsgField;
            }
            set {
                if ((this.ServerResponseMsgField.Equals(value) != true)) {
                    this.ServerResponseMsgField = value;
                    this.RaisePropertyChanged("ServerResponseMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToIp {
            get {
                return this.ToIpField;
            }
            set {
                if ((object.ReferenceEquals(this.ToIpField, value) != true)) {
                    this.ToIpField = value;
                    this.RaisePropertyChanged("ToIp");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsFeeMaster", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsFeeMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DaysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FeeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeesModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTaxableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LevyOnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumFeevalueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MinimumFeeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Days {
            get {
                return this.DaysField;
            }
            set {
                if ((object.ReferenceEquals(this.DaysField, value) != true)) {
                    this.DaysField = value;
                    this.RaisePropertyChanged("Days");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FeeId {
            get {
                return this.FeeIdField;
            }
            set {
                if ((this.FeeIdField.Equals(value) != true)) {
                    this.FeeIdField = value;
                    this.RaisePropertyChanged("FeeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeeName {
            get {
                return this.FeeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeNameField, value) != true)) {
                    this.FeeNameField = value;
                    this.RaisePropertyChanged("FeeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FeesMode {
            get {
                return this.FeesModeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeesModeField, value) != true)) {
                    this.FeesModeField = value;
                    this.RaisePropertyChanged("FeesMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Interval {
            get {
                return this.IntervalField;
            }
            set {
                if ((object.ReferenceEquals(this.IntervalField, value) != true)) {
                    this.IntervalField = value;
                    this.RaisePropertyChanged("Interval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTaxable {
            get {
                return this.IsTaxableField;
            }
            set {
                if ((this.IsTaxableField.Equals(value) != true)) {
                    this.IsTaxableField = value;
                    this.RaisePropertyChanged("IsTaxable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LevyOn {
            get {
                return this.LevyOnField;
            }
            set {
                if ((object.ReferenceEquals(this.LevyOnField, value) != true)) {
                    this.LevyOnField = value;
                    this.RaisePropertyChanged("LevyOn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumFeevalue {
            get {
                return this.MaximumFeevalueField;
            }
            set {
                if ((this.MaximumFeevalueField.Equals(value) != true)) {
                    this.MaximumFeevalueField = value;
                    this.RaisePropertyChanged("MaximumFeevalue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MinimumFeeValue {
            get {
                return this.MinimumFeeValueField;
            }
            set {
                if ((this.MinimumFeeValueField.Equals(value) != true)) {
                    this.MinimumFeeValueField = value;
                    this.RaisePropertyChanged("MinimumFeeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsTaxMaster", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsTaxMaster : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaxIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TaxPercentField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((object.ReferenceEquals(this.AmountField, value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaxID {
            get {
                return this.TaxIDField;
            }
            set {
                if ((this.TaxIDField.Equals(value) != true)) {
                    this.TaxIDField = value;
                    this.RaisePropertyChanged("TaxID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TaxName {
            get {
                return this.TaxNameField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxNameField, value) != true)) {
                    this.TaxNameField = value;
                    this.RaisePropertyChanged("TaxName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TaxPercent {
            get {
                return this.TaxPercentField;
            }
            set {
                if ((this.TaxPercentField.Equals(value) != true)) {
                    this.TaxPercentField = value;
                    this.RaisePropertyChanged("TaxPercent");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsHoliday", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsHoliday : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEveryYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ToTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromTime {
            get {
                return this.FromTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.FromTimeField, value) != true)) {
                    this.FromTimeField = value;
                    this.RaisePropertyChanged("FromTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEveryYear {
            get {
                return this.IsEveryYearField;
            }
            set {
                if ((this.IsEveryYearField.Equals(value) != true)) {
                    this.IsEveryYearField = value;
                    this.RaisePropertyChanged("IsEveryYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ToTime {
            get {
                return this.ToTimeField;
            }
            set {
                if ((object.ReferenceEquals(this.ToTimeField, value) != true)) {
                    this.ToTimeField = value;
                    this.RaisePropertyChanged("ToTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsContractSpecification", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsContractSpecification : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuySideTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContractSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DPRInitialPercentageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DPRIntervalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DPR_Range_HigherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DeliveryQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DeliveryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DigitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FK_SecurityTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HedgedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InitialBuyMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int InitialSellMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Instruement_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentSwaps InstrumentSwapsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LimitandStopLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaintenanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaintenanceBuyMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaintenanceSellMarginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarginCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MarketLostUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarketLotField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumAllowablePositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumLostUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumLotsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Maximum_Order_ValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationBaseValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuotationBaseValueUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuoteOffTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellSideTurnoverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SessionCountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SettlingCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenderEndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TenderStartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TickPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TickSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingCurrencyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ULAssestField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSession[] lstSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuySideTurnover {
            get {
                return this.BuySideTurnoverField;
            }
            set {
                if ((this.BuySideTurnoverField.Equals(value) != true)) {
                    this.BuySideTurnoverField = value;
                    this.RaisePropertyChanged("BuySideTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContractSize {
            get {
                return this.ContractSizeField;
            }
            set {
                if ((this.ContractSizeField.Equals(value) != true)) {
                    this.ContractSizeField = value;
                    this.RaisePropertyChanged("ContractSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DPRInitialPercentage {
            get {
                return this.DPRInitialPercentageField;
            }
            set {
                if ((this.DPRInitialPercentageField.Equals(value) != true)) {
                    this.DPRInitialPercentageField = value;
                    this.RaisePropertyChanged("DPRInitialPercentage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DPRInterval {
            get {
                return this.DPRIntervalField;
            }
            set {
                if ((this.DPRIntervalField.Equals(value) != true)) {
                    this.DPRIntervalField = value;
                    this.RaisePropertyChanged("DPRInterval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DPR_Range_Higher {
            get {
                return this.DPR_Range_HigherField;
            }
            set {
                if ((this.DPR_Range_HigherField.Equals(value) != true)) {
                    this.DPR_Range_HigherField = value;
                    this.RaisePropertyChanged("DPR_Range_Higher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryEndDate {
            get {
                return this.DeliveryEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryEndDateField, value) != true)) {
                    this.DeliveryEndDateField = value;
                    this.RaisePropertyChanged("DeliveryEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DeliveryQuantity {
            get {
                return this.DeliveryQuantityField;
            }
            set {
                if ((this.DeliveryQuantityField.Equals(value) != true)) {
                    this.DeliveryQuantityField = value;
                    this.RaisePropertyChanged("DeliveryQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryStartDate {
            get {
                return this.DeliveryStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryStartDateField, value) != true)) {
                    this.DeliveryStartDateField = value;
                    this.RaisePropertyChanged("DeliveryStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryType {
            get {
                return this.DeliveryTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryTypeField, value) != true)) {
                    this.DeliveryTypeField = value;
                    this.RaisePropertyChanged("DeliveryType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DeliveryUnit {
            get {
                return this.DeliveryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.DeliveryUnitField, value) != true)) {
                    this.DeliveryUnitField = value;
                    this.RaisePropertyChanged("DeliveryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Digits {
            get {
                return this.DigitsField;
            }
            set {
                if ((this.DigitsField.Equals(value) != true)) {
                    this.DigitsField = value;
                    this.RaisePropertyChanged("Digits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.EndDateField, value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((object.ReferenceEquals(this.ExpiryDateField, value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FK_SecurityTypeID {
            get {
                return this.FK_SecurityTypeIDField;
            }
            set {
                if ((object.ReferenceEquals(this.FK_SecurityTypeIDField, value) != true)) {
                    this.FK_SecurityTypeIDField = value;
                    this.RaisePropertyChanged("FK_SecurityTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Hedged {
            get {
                return this.HedgedField;
            }
            set {
                if ((this.HedgedField.Equals(value) != true)) {
                    this.HedgedField = value;
                    this.RaisePropertyChanged("Hedged");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitialBuyMargin {
            get {
                return this.InitialBuyMarginField;
            }
            set {
                if ((this.InitialBuyMarginField.Equals(value) != true)) {
                    this.InitialBuyMarginField = value;
                    this.RaisePropertyChanged("InitialBuyMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int InitialSellMargin {
            get {
                return this.InitialSellMarginField;
            }
            set {
                if ((this.InitialSellMarginField.Equals(value) != true)) {
                    this.InitialSellMarginField = value;
                    this.RaisePropertyChanged("InitialSellMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Instruement_ID {
            get {
                return this.Instruement_IDField;
            }
            set {
                if ((this.Instruement_IDField.Equals(value) != true)) {
                    this.Instruement_IDField = value;
                    this.RaisePropertyChanged("Instruement_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentSwaps InstrumentSwaps {
            get {
                return this.InstrumentSwapsField;
            }
            set {
                if ((object.ReferenceEquals(this.InstrumentSwapsField, value) != true)) {
                    this.InstrumentSwapsField = value;
                    this.RaisePropertyChanged("InstrumentSwaps");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LimitandStopLevel {
            get {
                return this.LimitandStopLevelField;
            }
            set {
                if ((this.LimitandStopLevelField.Equals(value) != true)) {
                    this.LimitandStopLevelField = value;
                    this.RaisePropertyChanged("LimitandStopLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maintenance {
            get {
                return this.MaintenanceField;
            }
            set {
                if ((this.MaintenanceField.Equals(value) != true)) {
                    this.MaintenanceField = value;
                    this.RaisePropertyChanged("Maintenance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaintenanceBuyMargin {
            get {
                return this.MaintenanceBuyMarginField;
            }
            set {
                if ((this.MaintenanceBuyMarginField.Equals(value) != true)) {
                    this.MaintenanceBuyMarginField = value;
                    this.RaisePropertyChanged("MaintenanceBuyMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaintenanceSellMargin {
            get {
                return this.MaintenanceSellMarginField;
            }
            set {
                if ((this.MaintenanceSellMarginField.Equals(value) != true)) {
                    this.MaintenanceSellMarginField = value;
                    this.RaisePropertyChanged("MaintenanceSellMargin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarginCurrency {
            get {
                return this.MarginCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.MarginCurrencyField, value) != true)) {
                    this.MarginCurrencyField = value;
                    this.RaisePropertyChanged("MarginCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MarketLostUnit {
            get {
                return this.MarketLostUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MarketLostUnitField, value) != true)) {
                    this.MarketLostUnitField = value;
                    this.RaisePropertyChanged("MarketLostUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarketLot {
            get {
                return this.MarketLotField;
            }
            set {
                if ((this.MarketLotField.Equals(value) != true)) {
                    this.MarketLotField = value;
                    this.RaisePropertyChanged("MarketLot");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumAllowablePosition {
            get {
                return this.MaximumAllowablePositionField;
            }
            set {
                if ((this.MaximumAllowablePositionField.Equals(value) != true)) {
                    this.MaximumAllowablePositionField = value;
                    this.RaisePropertyChanged("MaximumAllowablePosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaximumLostUnit {
            get {
                return this.MaximumLostUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumLostUnitField, value) != true)) {
                    this.MaximumLostUnitField = value;
                    this.RaisePropertyChanged("MaximumLostUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumLots {
            get {
                return this.MaximumLotsField;
            }
            set {
                if ((this.MaximumLotsField.Equals(value) != true)) {
                    this.MaximumLotsField = value;
                    this.RaisePropertyChanged("MaximumLots");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Maximum_Order_Value {
            get {
                return this.Maximum_Order_ValueField;
            }
            set {
                if ((this.Maximum_Order_ValueField.Equals(value) != true)) {
                    this.Maximum_Order_ValueField = value;
                    this.RaisePropertyChanged("Maximum_Order_Value");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationBaseValue {
            get {
                return this.QuotationBaseValueField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationBaseValueField, value) != true)) {
                    this.QuotationBaseValueField = value;
                    this.RaisePropertyChanged("QuotationBaseValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuotationBaseValueUnit {
            get {
                return this.QuotationBaseValueUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.QuotationBaseValueUnitField, value) != true)) {
                    this.QuotationBaseValueUnitField = value;
                    this.RaisePropertyChanged("QuotationBaseValueUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int QuoteOffTime {
            get {
                return this.QuoteOffTimeField;
            }
            set {
                if ((this.QuoteOffTimeField.Equals(value) != true)) {
                    this.QuoteOffTimeField = value;
                    this.RaisePropertyChanged("QuoteOffTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellSideTurnover {
            get {
                return this.SellSideTurnoverField;
            }
            set {
                if ((this.SellSideTurnoverField.Equals(value) != true)) {
                    this.SellSideTurnoverField = value;
                    this.RaisePropertyChanged("SellSideTurnover");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SessionCount {
            get {
                return this.SessionCountField;
            }
            set {
                if ((this.SessionCountField.Equals(value) != true)) {
                    this.SessionCountField = value;
                    this.RaisePropertyChanged("SessionCount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SettlingCurrency {
            get {
                return this.SettlingCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlingCurrencyField, value) != true)) {
                    this.SettlingCurrencyField = value;
                    this.RaisePropertyChanged("SettlingCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Spread {
            get {
                return this.SpreadField;
            }
            set {
                if ((this.SpreadField.Equals(value) != true)) {
                    this.SpreadField = value;
                    this.RaisePropertyChanged("Spread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.StartDateField, value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymbolName {
            get {
                return this.SymbolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolNameField, value) != true)) {
                    this.SymbolNameField = value;
                    this.RaisePropertyChanged("SymbolName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenderEndDate {
            get {
                return this.TenderEndDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderEndDateField, value) != true)) {
                    this.TenderEndDateField = value;
                    this.RaisePropertyChanged("TenderEndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TenderStartDate {
            get {
                return this.TenderStartDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TenderStartDateField, value) != true)) {
                    this.TenderStartDateField = value;
                    this.RaisePropertyChanged("TenderStartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TickPrice {
            get {
                return this.TickPriceField;
            }
            set {
                if ((this.TickPriceField.Equals(value) != true)) {
                    this.TickPriceField = value;
                    this.RaisePropertyChanged("TickPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TickSize {
            get {
                return this.TickSizeField;
            }
            set {
                if ((this.TickSizeField.Equals(value) != true)) {
                    this.TickSizeField = value;
                    this.RaisePropertyChanged("TickSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingCurrency {
            get {
                return this.TradingCurrencyField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingCurrencyField, value) != true)) {
                    this.TradingCurrencyField = value;
                    this.RaisePropertyChanged("TradingCurrency");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ULAssest {
            get {
                return this.ULAssestField;
            }
            set {
                if ((object.ReferenceEquals(this.ULAssestField, value) != true)) {
                    this.ULAssestField = value;
                    this.RaisePropertyChanged("ULAssest");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSession[] lstSession {
            get {
                return this.lstSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.lstSessionField, value) != true)) {
                    this.lstSessionField = value;
                    this.RaisePropertyChanged("lstSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsInstrumentSwaps", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class clsInstrumentSwaps : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LongPositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ShortPositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LongPosition {
            get {
                return this.LongPositionField;
            }
            set {
                if ((this.LongPositionField.Equals(value) != true)) {
                    this.LongPositionField = value;
                    this.RaisePropertyChanged("LongPosition");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ShortPosition {
            get {
                return this.ShortPositionField;
            }
            set {
                if ((this.ShortPositionField.Equals(value) != true)) {
                    this.ShortPositionField = value;
                    this.RaisePropertyChanged("ShortPosition");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsSymbolSession", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class clsSymbolSession : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.DAYS DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsUseTimelimitsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuoteSessionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SessionEODMarketMakerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradeSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.DAYS Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndDate {
            get {
                return this.EndDateField;
            }
            set {
                if ((this.EndDateField.Equals(value) != true)) {
                    this.EndDateField = value;
                    this.RaisePropertyChanged("EndDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsUseTimelimits {
            get {
                return this.IsUseTimelimitsField;
            }
            set {
                if ((this.IsUseTimelimitsField.Equals(value) != true)) {
                    this.IsUseTimelimitsField = value;
                    this.RaisePropertyChanged("IsUseTimelimits");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuoteSession {
            get {
                return this.QuoteSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.QuoteSessionField, value) != true)) {
                    this.QuoteSessionField = value;
                    this.RaisePropertyChanged("QuoteSession");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SessionEODMarketMaker {
            get {
                return this.SessionEODMarketMakerField;
            }
            set {
                if ((object.ReferenceEquals(this.SessionEODMarketMakerField, value) != true)) {
                    this.SessionEODMarketMakerField = value;
                    this.RaisePropertyChanged("SessionEODMarketMaker");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradeSession {
            get {
                return this.TradeSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.TradeSessionField, value) != true)) {
                    this.TradeSessionField = value;
                    this.RaisePropertyChanged("TradeSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DAYS", Namespace="http://schemas.datacontract.org/2004/07/")]
    public enum DAYS : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SUN = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        MON = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TUE = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WED = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        THU = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        FRI = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SAT = 7,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsSymbolSessionNew", Namespace="http://schemas.datacontract.org/2004/07/")]
    [System.SerializableAttribute()]
    public partial class clsSymbolSessionNew : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSession[] lstSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSession[] lstSession {
            get {
                return this.lstSessionField;
            }
            set {
                if ((object.ReferenceEquals(this.lstSessionField, value) != true)) {
                    this.lstSessionField = value;
                    this.RaisePropertyChanged("lstSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsMasterInfo", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsMasterInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> DDClientAccountTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, string> DDCommonSettingsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, int> DDContractSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> DDHedgeTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> DDLPNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> DDRolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<int, string> DDSymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string[]>> DDTGSymbolsInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstDataTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstDeliveryUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstIdleTimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstOrderTypesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstProductNamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstReconnectAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] lstUnexpiredSymbolsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> DDClientAccountTypes {
            get {
                return this.DDClientAccountTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DDClientAccountTypesField, value) != true)) {
                    this.DDClientAccountTypesField = value;
                    this.RaisePropertyChanged("DDClientAccountTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, string> DDCommonSettings {
            get {
                return this.DDCommonSettingsField;
            }
            set {
                if ((object.ReferenceEquals(this.DDCommonSettingsField, value) != true)) {
                    this.DDCommonSettingsField = value;
                    this.RaisePropertyChanged("DDCommonSettings");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, int> DDContractSize {
            get {
                return this.DDContractSizeField;
            }
            set {
                if ((object.ReferenceEquals(this.DDContractSizeField, value) != true)) {
                    this.DDContractSizeField = value;
                    this.RaisePropertyChanged("DDContractSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> DDHedgeTypes {
            get {
                return this.DDHedgeTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.DDHedgeTypesField, value) != true)) {
                    this.DDHedgeTypesField = value;
                    this.RaisePropertyChanged("DDHedgeTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> DDLPNames {
            get {
                return this.DDLPNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.DDLPNamesField, value) != true)) {
                    this.DDLPNamesField = value;
                    this.RaisePropertyChanged("DDLPNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> DDRoles {
            get {
                return this.DDRolesField;
            }
            set {
                if ((object.ReferenceEquals(this.DDRolesField, value) != true)) {
                    this.DDRolesField = value;
                    this.RaisePropertyChanged("DDRoles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<int, string> DDSymbols {
            get {
                return this.DDSymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.DDSymbolsField, value) != true)) {
                    this.DDSymbolsField = value;
                    this.RaisePropertyChanged("DDSymbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.Dictionary<string, System.Collections.Generic.Dictionary<string, string[]>> DDTGSymbolsInfo {
            get {
                return this.DDTGSymbolsInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.DDTGSymbolsInfoField, value) != true)) {
                    this.DDTGSymbolsInfoField = value;
                    this.RaisePropertyChanged("DDTGSymbolsInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstDataTypes {
            get {
                return this.lstDataTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.lstDataTypesField, value) != true)) {
                    this.lstDataTypesField = value;
                    this.RaisePropertyChanged("lstDataTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstDeliveryUnit {
            get {
                return this.lstDeliveryUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.lstDeliveryUnitField, value) != true)) {
                    this.lstDeliveryUnitField = value;
                    this.RaisePropertyChanged("lstDeliveryUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstIdleTimeOut {
            get {
                return this.lstIdleTimeOutField;
            }
            set {
                if ((object.ReferenceEquals(this.lstIdleTimeOutField, value) != true)) {
                    this.lstIdleTimeOutField = value;
                    this.RaisePropertyChanged("lstIdleTimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstOrderTypes {
            get {
                return this.lstOrderTypesField;
            }
            set {
                if ((object.ReferenceEquals(this.lstOrderTypesField, value) != true)) {
                    this.lstOrderTypesField = value;
                    this.RaisePropertyChanged("lstOrderTypes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstProductNames {
            get {
                return this.lstProductNamesField;
            }
            set {
                if ((object.ReferenceEquals(this.lstProductNamesField, value) != true)) {
                    this.lstProductNamesField = value;
                    this.RaisePropertyChanged("lstProductNames");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstReconnectAfter {
            get {
                return this.lstReconnectAfterField;
            }
            set {
                if ((object.ReferenceEquals(this.lstReconnectAfterField, value) != true)) {
                    this.lstReconnectAfterField = value;
                    this.RaisePropertyChanged("lstReconnectAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] lstUnexpiredSymbols {
            get {
                return this.lstUnexpiredSymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.lstUnexpiredSymbolsField, value) != true)) {
                    this.lstUnexpiredSymbolsField = value;
                    this.RaisePropertyChanged("lstUnexpiredSymbols");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsLeverage", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsLeverage : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((object.ReferenceEquals(this.LeverageField, value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeverageId {
            get {
                return this.LeverageIdField;
            }
            set {
                if ((this.LeverageIdField.Equals(value) != true)) {
                    this.LeverageIdField = value;
                    this.RaisePropertyChanged("LeverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsModule", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsModule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ModNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ModName {
            get {
                return this.ModNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ModNameField, value) != true)) {
                    this.ModNameField = value;
                    this.RaisePropertyChanged("ModName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsParticipaintList", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsParticipaintList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PKParticipantTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParticpantTypeNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PKParticipantTypeID {
            get {
                return this.PKParticipantTypeIDField;
            }
            set {
                if ((this.PKParticipantTypeIDField.Equals(value) != true)) {
                    this.PKParticipantTypeIDField = value;
                    this.RaisePropertyChanged("PKParticipantTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParticpantTypeName {
            get {
                return this.ParticpantTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ParticpantTypeNameField, value) != true)) {
                    this.ParticpantTypeNameField = value;
                    this.RaisePropertyChanged("ParticpantTypeName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsSecurityType", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsSecurityType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecurityNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SecurityTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityDescription {
            get {
                return this.SecurityDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityDescriptionField, value) != true)) {
                    this.SecurityDescriptionField = value;
                    this.RaisePropertyChanged("SecurityDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecurityName {
            get {
                return this.SecurityNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SecurityNameField, value) != true)) {
                    this.SecurityNameField = value;
                    this.RaisePropertyChanged("SecurityName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SecurityTypeID {
            get {
                return this.SecurityTypeIDField;
            }
            set {
                if ((this.SecurityTypeIDField.Equals(value) != true)) {
                    this.SecurityTypeIDField = value;
                    this.RaisePropertyChanged("SecurityTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbols {
            get {
                return this.SymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolsField, value) != true)) {
                    this.SymbolsField = value;
                    this.RaisePropertyChanged("Symbols");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCurrency", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCurrency : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CurrencyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int Currency_IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyDescription {
            get {
                return this.CurrencyDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyDescriptionField, value) != true)) {
                    this.CurrencyDescriptionField = value;
                    this.RaisePropertyChanged("CurrencyDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CurrencyName {
            get {
                return this.CurrencyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CurrencyNameField, value) != true)) {
                    this.CurrencyNameField = value;
                    this.RaisePropertyChanged("CurrencyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Currency_ID {
            get {
                return this.Currency_IDField;
            }
            set {
                if ((this.Currency_IDField.Equals(value) != true)) {
                    this.Currency_IDField = value;
                    this.RaisePropertyChanged("Currency_ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsBrokerList", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsBrokerList : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerTypesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerType {
            get {
                return this.BrokerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerTypeField, value) != true)) {
                    this.BrokerTypeField = value;
                    this.RaisePropertyChanged("BrokerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerTypesID {
            get {
                return this.BrokerTypesIDField;
            }
            set {
                if ((this.BrokerTypesIDField.Equals(value) != true)) {
                    this.BrokerTypesIDField = value;
                    this.RaisePropertyChanged("BrokerTypesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCountryDetail", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCountryDetail : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CountryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NationalityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryCode {
            get {
                return this.CountryCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryCodeField, value) != true)) {
                    this.CountryCodeField = value;
                    this.RaisePropertyChanged("CountryCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nationality {
            get {
                return this.NationalityField;
            }
            set {
                if ((object.ReferenceEquals(this.NationalityField, value) != true)) {
                    this.NationalityField = value;
                    this.RaisePropertyChanged("Nationality");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsAccountGroup", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsAccountGroup : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerPhone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerPhone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerStateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentBrokerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroupID {
            get {
                return this.AccountGroupIDField;
            }
            set {
                if ((this.AccountGroupIDField.Equals(value) != true)) {
                    this.AccountGroupIDField = value;
                    this.RaisePropertyChanged("AccountGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountGroupName {
            get {
                return this.AccountGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountGroupNameField, value) != true)) {
                    this.AccountGroupNameField = value;
                    this.RaisePropertyChanged("AccountGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerAddress {
            get {
                return this.BrokerAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerAddressField, value) != true)) {
                    this.BrokerAddressField = value;
                    this.RaisePropertyChanged("BrokerAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerCity {
            get {
                return this.BrokerCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerCityField, value) != true)) {
                    this.BrokerCityField = value;
                    this.RaisePropertyChanged("BrokerCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerEmail {
            get {
                return this.BrokerEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerEmailField, value) != true)) {
                    this.BrokerEmailField = value;
                    this.RaisePropertyChanged("BrokerEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerFax {
            get {
                return this.BrokerFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerFaxField, value) != true)) {
                    this.BrokerFaxField = value;
                    this.RaisePropertyChanged("BrokerFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerPhone1 {
            get {
                return this.BrokerPhone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerPhone1Field, value) != true)) {
                    this.BrokerPhone1Field = value;
                    this.RaisePropertyChanged("BrokerPhone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerPhone2 {
            get {
                return this.BrokerPhone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerPhone2Field, value) != true)) {
                    this.BrokerPhone2Field = value;
                    this.RaisePropertyChanged("BrokerPhone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerState {
            get {
                return this.BrokerStateField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerStateField, value) != true)) {
                    this.BrokerStateField = value;
                    this.RaisePropertyChanged("BrokerState");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerTypeID {
            get {
                return this.BrokerTypeIDField;
            }
            set {
                if ((this.BrokerTypeIDField.Equals(value) != true)) {
                    this.BrokerTypeIDField = value;
                    this.RaisePropertyChanged("BrokerTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Charges {
            get {
                return this.ChargesField;
            }
            set {
                if ((this.ChargesField.Equals(value) != true)) {
                    this.ChargesField = value;
                    this.RaisePropertyChanged("Charges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeverageId {
            get {
                return this.LeverageIdField;
            }
            set {
                if ((this.LeverageIdField.Equals(value) != true)) {
                    this.LeverageIdField = value;
                    this.RaisePropertyChanged("LeverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentBrokerId {
            get {
                return this.ParentBrokerIdField;
            }
            set {
                if ((this.ParentBrokerIdField.Equals(value) != true)) {
                    this.ParentBrokerIdField = value;
                    this.RaisePropertyChanged("ParentBrokerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsTimeSettings", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsTimeSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeSpanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Day {
            get {
                return this.DayField;
            }
            set {
                if ((object.ReferenceEquals(this.DayField, value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TimeSpan {
            get {
                return this.TimeSpanField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeSpanField, value) != true)) {
                    this.TimeSpanField = value;
                    this.RaisePropertyChanged("TimeSpan");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsTradingGateway", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsTradingGateway : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AttemptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DataTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool EnableRMSField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdleTimeOutField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstProductAliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstProductNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstSymbolAliasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal[] LstSymbolConversionFormulaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstTotalSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderPortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PKTradingGateWaysIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ReconnectAfterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ServerIPField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SleepForField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Attempts {
            get {
                return this.AttemptsField;
            }
            set {
                if ((this.AttemptsField.Equals(value) != true)) {
                    this.AttemptsField = value;
                    this.RaisePropertyChanged("Attempts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DataType {
            get {
                return this.DataTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.DataTypeField, value) != true)) {
                    this.DataTypeField = value;
                    this.RaisePropertyChanged("DataType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool EnableRMS {
            get {
                return this.EnableRMSField;
            }
            set {
                if ((this.EnableRMSField.Equals(value) != true)) {
                    this.EnableRMSField = value;
                    this.RaisePropertyChanged("EnableRMS");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IdleTimeOut {
            get {
                return this.IdleTimeOutField;
            }
            set {
                if ((this.IdleTimeOutField.Equals(value) != true)) {
                    this.IdleTimeOutField = value;
                    this.RaisePropertyChanged("IdleTimeOut");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Login {
            get {
                return this.LoginField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginField, value) != true)) {
                    this.LoginField = value;
                    this.RaisePropertyChanged("Login");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstProductAlias {
            get {
                return this.LstProductAliasField;
            }
            set {
                if ((object.ReferenceEquals(this.LstProductAliasField, value) != true)) {
                    this.LstProductAliasField = value;
                    this.RaisePropertyChanged("LstProductAlias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstProductName {
            get {
                return this.LstProductNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LstProductNameField, value) != true)) {
                    this.LstProductNameField = value;
                    this.RaisePropertyChanged("LstProductName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstSymbol {
            get {
                return this.LstSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.LstSymbolField, value) != true)) {
                    this.LstSymbolField = value;
                    this.RaisePropertyChanged("LstSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstSymbolAlias {
            get {
                return this.LstSymbolAliasField;
            }
            set {
                if ((object.ReferenceEquals(this.LstSymbolAliasField, value) != true)) {
                    this.LstSymbolAliasField = value;
                    this.RaisePropertyChanged("LstSymbolAlias");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal[] LstSymbolConversionFormula {
            get {
                return this.LstSymbolConversionFormulaField;
            }
            set {
                if ((object.ReferenceEquals(this.LstSymbolConversionFormulaField, value) != true)) {
                    this.LstSymbolConversionFormulaField = value;
                    this.RaisePropertyChanged("LstSymbolConversionFormula");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstTotalSymbol {
            get {
                return this.LstTotalSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.LstTotalSymbolField, value) != true)) {
                    this.LstTotalSymbolField = value;
                    this.RaisePropertyChanged("LstTotalSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderIP {
            get {
                return this.OrderIPField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderIPField, value) != true)) {
                    this.OrderIPField = value;
                    this.RaisePropertyChanged("OrderIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderPort {
            get {
                return this.OrderPortField;
            }
            set {
                if ((this.OrderPortField.Equals(value) != true)) {
                    this.OrderPortField = value;
                    this.RaisePropertyChanged("OrderPort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PKTradingGateWaysID {
            get {
                return this.PKTradingGateWaysIDField;
            }
            set {
                if ((this.PKTradingGateWaysIDField.Equals(value) != true)) {
                    this.PKTradingGateWaysIDField = value;
                    this.RaisePropertyChanged("PKTradingGateWaysID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Port {
            get {
                return this.PortField;
            }
            set {
                if ((object.ReferenceEquals(this.PortField, value) != true)) {
                    this.PortField = value;
                    this.RaisePropertyChanged("Port");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReconnectAfter {
            get {
                return this.ReconnectAfterField;
            }
            set {
                if ((this.ReconnectAfterField.Equals(value) != true)) {
                    this.ReconnectAfterField = value;
                    this.RaisePropertyChanged("ReconnectAfter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ServerIP {
            get {
                return this.ServerIPField;
            }
            set {
                if ((object.ReferenceEquals(this.ServerIPField, value) != true)) {
                    this.ServerIPField = value;
                    this.RaisePropertyChanged("ServerIP");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SleepFor {
            get {
                return this.SleepForField;
            }
            set {
                if ((this.SleepForField.Equals(value) != true)) {
                    this.SleepForField = value;
                    this.RaisePropertyChanged("SleepFor");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsBroker", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsBroker : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.charges[] LstChargesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstFeeTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.BrokerSymbol[] LstSymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] LstTaxTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private BOADMIN_NEW.BOEngineServiceTCP.BrokerSymbol[] LstTotalSymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarginCallLevel1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarginCallLevel2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MarginCallLevel3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumOrdersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MaximumsymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Phone2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoleIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RoleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerID {
            get {
                return this.BrokerIDField;
            }
            set {
                if ((this.BrokerIDField.Equals(value) != true)) {
                    this.BrokerIDField = value;
                    this.RaisePropertyChanged("BrokerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerParent {
            get {
                return this.BrokerParentField;
            }
            set {
                if ((this.BrokerParentField.Equals(value) != true)) {
                    this.BrokerParentField = value;
                    this.RaisePropertyChanged("BrokerParent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerType {
            get {
                return this.BrokerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerTypeField, value) != true)) {
                    this.BrokerTypeField = value;
                    this.RaisePropertyChanged("BrokerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMail {
            get {
                return this.EMailField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailField, value) != true)) {
                    this.EMailField = value;
                    this.RaisePropertyChanged("EMail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fax {
            get {
                return this.FaxField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxField, value) != true)) {
                    this.FaxField = value;
                    this.RaisePropertyChanged("Fax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((object.ReferenceEquals(this.LeverageField, value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.charges[] LstCharges {
            get {
                return this.LstChargesField;
            }
            set {
                if ((object.ReferenceEquals(this.LstChargesField, value) != true)) {
                    this.LstChargesField = value;
                    this.RaisePropertyChanged("LstCharges");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstFeeType {
            get {
                return this.LstFeeTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LstFeeTypeField, value) != true)) {
                    this.LstFeeTypeField = value;
                    this.RaisePropertyChanged("LstFeeType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.BrokerSymbol[] LstSymbol {
            get {
                return this.LstSymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.LstSymbolField, value) != true)) {
                    this.LstSymbolField = value;
                    this.RaisePropertyChanged("LstSymbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] LstTaxType {
            get {
                return this.LstTaxTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.LstTaxTypeField, value) != true)) {
                    this.LstTaxTypeField = value;
                    this.RaisePropertyChanged("LstTaxType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public BOADMIN_NEW.BOEngineServiceTCP.BrokerSymbol[] LstTotalSymbols {
            get {
                return this.LstTotalSymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.LstTotalSymbolsField, value) != true)) {
                    this.LstTotalSymbolsField = value;
                    this.RaisePropertyChanged("LstTotalSymbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarginCallLevel1 {
            get {
                return this.MarginCallLevel1Field;
            }
            set {
                if ((this.MarginCallLevel1Field.Equals(value) != true)) {
                    this.MarginCallLevel1Field = value;
                    this.RaisePropertyChanged("MarginCallLevel1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarginCallLevel2 {
            get {
                return this.MarginCallLevel2Field;
            }
            set {
                if ((this.MarginCallLevel2Field.Equals(value) != true)) {
                    this.MarginCallLevel2Field = value;
                    this.RaisePropertyChanged("MarginCallLevel2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MarginCallLevel3 {
            get {
                return this.MarginCallLevel3Field;
            }
            set {
                if ((this.MarginCallLevel3Field.Equals(value) != true)) {
                    this.MarginCallLevel3Field = value;
                    this.RaisePropertyChanged("MarginCallLevel3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MaximumOrders {
            get {
                return this.MaximumOrdersField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumOrdersField, value) != true)) {
                    this.MaximumOrdersField = value;
                    this.RaisePropertyChanged("MaximumOrders");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Maximumsymbols {
            get {
                return this.MaximumsymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.MaximumsymbolsField, value) != true)) {
                    this.MaximumsymbolsField = value;
                    this.RaisePropertyChanged("Maximumsymbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string News {
            get {
                return this.NewsField;
            }
            set {
                if ((object.ReferenceEquals(this.NewsField, value) != true)) {
                    this.NewsField = value;
                    this.RaisePropertyChanged("News");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone1 {
            get {
                return this.Phone1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone1Field, value) != true)) {
                    this.Phone1Field = value;
                    this.RaisePropertyChanged("Phone1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Phone2 {
            get {
                return this.Phone2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Phone2Field, value) != true)) {
                    this.Phone2Field = value;
                    this.RaisePropertyChanged("Phone2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoleId {
            get {
                return this.RoleIdField;
            }
            set {
                if ((this.RoleIdField.Equals(value) != true)) {
                    this.RoleIdField = value;
                    this.RaisePropertyChanged("RoleId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RoleName {
            get {
                return this.RoleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RoleNameField, value) != true)) {
                    this.RoleNameField = value;
                    this.RaisePropertyChanged("RoleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="charges", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class charges : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokersGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ChargesIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FeeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal FeeValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SymbolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double TaxValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokersGroupID {
            get {
                return this.BrokersGroupIDField;
            }
            set {
                if ((this.BrokersGroupIDField.Equals(value) != true)) {
                    this.BrokersGroupIDField = value;
                    this.RaisePropertyChanged("BrokersGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ChargesID {
            get {
                return this.ChargesIDField;
            }
            set {
                if ((this.ChargesIDField.Equals(value) != true)) {
                    this.ChargesIDField = value;
                    this.RaisePropertyChanged("ChargesID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Fee {
            get {
                return this.FeeField;
            }
            set {
                if ((object.ReferenceEquals(this.FeeField, value) != true)) {
                    this.FeeField = value;
                    this.RaisePropertyChanged("Fee");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal FeeValue {
            get {
                return this.FeeValueField;
            }
            set {
                if ((this.FeeValueField.Equals(value) != true)) {
                    this.FeeValueField = value;
                    this.RaisePropertyChanged("FeeValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SymbolID {
            get {
                return this.SymbolIDField;
            }
            set {
                if ((this.SymbolIDField.Equals(value) != true)) {
                    this.SymbolIDField = value;
                    this.RaisePropertyChanged("SymbolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tax {
            get {
                return this.TaxField;
            }
            set {
                if ((object.ReferenceEquals(this.TaxField, value) != true)) {
                    this.TaxField = value;
                    this.RaisePropertyChanged("Tax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double TaxValue {
            get {
                return this.TaxValueField;
            }
            set {
                if ((this.TaxValueField.Equals(value) != true)) {
                    this.TaxValueField = value;
                    this.RaisePropertyChanged("TaxValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BrokerSymbol", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class BrokerSymbol : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AskSpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BidSpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsVariableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelativeAskChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelativeBidChangeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SpreadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SymbolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AskSpread {
            get {
                return this.AskSpreadField;
            }
            set {
                if ((this.AskSpreadField.Equals(value) != true)) {
                    this.AskSpreadField = value;
                    this.RaisePropertyChanged("AskSpread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BidSpread {
            get {
                return this.BidSpreadField;
            }
            set {
                if ((this.BidSpreadField.Equals(value) != true)) {
                    this.BidSpreadField = value;
                    this.RaisePropertyChanged("BidSpread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsVariable {
            get {
                return this.IsVariableField;
            }
            set {
                if ((this.IsVariableField.Equals(value) != true)) {
                    this.IsVariableField = value;
                    this.RaisePropertyChanged("IsVariable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelativeAskChange {
            get {
                return this.RelativeAskChangeField;
            }
            set {
                if ((this.RelativeAskChangeField.Equals(value) != true)) {
                    this.RelativeAskChangeField = value;
                    this.RaisePropertyChanged("RelativeAskChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelativeBidChange {
            get {
                return this.RelativeBidChangeField;
            }
            set {
                if ((this.RelativeBidChangeField.Equals(value) != true)) {
                    this.RelativeBidChangeField = value;
                    this.RaisePropertyChanged("RelativeBidChange");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Spread {
            get {
                return this.SpreadField;
            }
            set {
                if ((this.SpreadField.Equals(value) != true)) {
                    this.SpreadField = value;
                    this.RaisePropertyChanged("Spread");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SymbolID {
            get {
                return this.SymbolIDField;
            }
            set {
                if ((this.SymbolIDField.Equals(value) != true)) {
                    this.SymbolIDField = value;
                    this.RaisePropertyChanged("SymbolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymbolName {
            get {
                return this.SymbolNameField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolNameField, value) != true)) {
                    this.SymbolNameField = value;
                    this.RaisePropertyChanged("SymbolName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCollateralTypes", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCollateralTypes : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollateralTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollateralTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollateralType {
            get {
                return this.CollateralTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CollateralTypeField, value) != true)) {
                    this.CollateralTypeField = value;
                    this.RaisePropertyChanged("CollateralType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollateralTypeID {
            get {
                return this.CollateralTypeIDField;
            }
            set {
                if ((this.CollateralTypeIDField.Equals(value) != true)) {
                    this.CollateralTypeIDField = value;
                    this.RaisePropertyChanged("CollateralTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsClientInfo", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsClientInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AgeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalanceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DOBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FKAccountTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FKCountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FKNationalityIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FKParticipantTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FaxNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExistsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LoginIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MarkupValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MasterPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MidleNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PassportIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PrimaryPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegistrationDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SSNField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryEmailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SecondaryPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TradingPasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ZipField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroupID {
            get {
                return this.AccountGroupIDField;
            }
            set {
                if ((this.AccountGroupIDField.Equals(value) != true)) {
                    this.AccountGroupIDField = value;
                    this.RaisePropertyChanged("AccountGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountType {
            get {
                return this.AccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountTypeField, value) != true)) {
                    this.AccountTypeField = value;
                    this.RaisePropertyChanged("AccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address1 {
            get {
                return this.Address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address1Field, value) != true)) {
                    this.Address1Field = value;
                    this.RaisePropertyChanged("Address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address2 {
            get {
                return this.Address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Address2Field, value) != true)) {
                    this.Address2Field = value;
                    this.RaisePropertyChanged("Address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Age {
            get {
                return this.AgeField;
            }
            set {
                if ((object.ReferenceEquals(this.AgeField, value) != true)) {
                    this.AgeField = value;
                    this.RaisePropertyChanged("Age");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balance {
            get {
                return this.BalanceField;
            }
            set {
                if ((this.BalanceField.Equals(value) != true)) {
                    this.BalanceField = value;
                    this.RaisePropertyChanged("Balance");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Country {
            get {
                return this.CountryField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryField, value) != true)) {
                    this.CountryField = value;
                    this.RaisePropertyChanged("Country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DOB {
            get {
                return this.DOBField;
            }
            set {
                if ((this.DOBField.Equals(value) != true)) {
                    this.DOBField = value;
                    this.RaisePropertyChanged("DOB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Equity {
            get {
                return this.EquityField;
            }
            set {
                if ((this.EquityField.Equals(value) != true)) {
                    this.EquityField = value;
                    this.RaisePropertyChanged("Equity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FKAccountTypeID {
            get {
                return this.FKAccountTypeIDField;
            }
            set {
                if ((this.FKAccountTypeIDField.Equals(value) != true)) {
                    this.FKAccountTypeIDField = value;
                    this.RaisePropertyChanged("FKAccountTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FKCountryID {
            get {
                return this.FKCountryIDField;
            }
            set {
                if ((this.FKCountryIDField.Equals(value) != true)) {
                    this.FKCountryIDField = value;
                    this.RaisePropertyChanged("FKCountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FKNationalityID {
            get {
                return this.FKNationalityIDField;
            }
            set {
                if ((this.FKNationalityIDField.Equals(value) != true)) {
                    this.FKNationalityIDField = value;
                    this.RaisePropertyChanged("FKNationalityID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FKParticipantType {
            get {
                return this.FKParticipantTypeField;
            }
            set {
                if ((this.FKParticipantTypeField.Equals(value) != true)) {
                    this.FKParticipantTypeField = value;
                    this.RaisePropertyChanged("FKParticipantType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FaxNumber {
            get {
                return this.FaxNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.FaxNumberField, value) != true)) {
                    this.FaxNumberField = value;
                    this.RaisePropertyChanged("FaxNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Gender {
            get {
                return this.GenderField;
            }
            set {
                if ((object.ReferenceEquals(this.GenderField, value) != true)) {
                    this.GenderField = value;
                    this.RaisePropertyChanged("Gender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string GroupName {
            get {
                return this.GroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupNameField, value) != true)) {
                    this.GroupNameField = value;
                    this.RaisePropertyChanged("GroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExists {
            get {
                return this.IsExistsField;
            }
            set {
                if ((this.IsExistsField.Equals(value) != true)) {
                    this.IsExistsField = value;
                    this.RaisePropertyChanged("IsExists");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LoginID {
            get {
                return this.LoginIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LoginIDField, value) != true)) {
                    this.LoginIDField = value;
                    this.RaisePropertyChanged("LoginID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MarkupValue {
            get {
                return this.MarkupValueField;
            }
            set {
                if ((this.MarkupValueField.Equals(value) != true)) {
                    this.MarkupValueField = value;
                    this.RaisePropertyChanged("MarkupValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MasterPassword {
            get {
                return this.MasterPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.MasterPasswordField, value) != true)) {
                    this.MasterPasswordField = value;
                    this.RaisePropertyChanged("MasterPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MidleName {
            get {
                return this.MidleNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MidleNameField, value) != true)) {
                    this.MidleNameField = value;
                    this.RaisePropertyChanged("MidleName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PAN {
            get {
                return this.PANField;
            }
            set {
                if ((object.ReferenceEquals(this.PANField, value) != true)) {
                    this.PANField = value;
                    this.RaisePropertyChanged("PAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PassportId {
            get {
                return this.PassportIdField;
            }
            set {
                if ((object.ReferenceEquals(this.PassportIdField, value) != true)) {
                    this.PassportIdField = value;
                    this.RaisePropertyChanged("PassportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryEmailAddress {
            get {
                return this.PrimaryEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryEmailAddressField, value) != true)) {
                    this.PrimaryEmailAddressField = value;
                    this.RaisePropertyChanged("PrimaryEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PrimaryPhone {
            get {
                return this.PrimaryPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PrimaryPhoneField, value) != true)) {
                    this.PrimaryPhoneField = value;
                    this.RaisePropertyChanged("PrimaryPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegistrationDate {
            get {
                return this.RegistrationDateField;
            }
            set {
                if ((this.RegistrationDateField.Equals(value) != true)) {
                    this.RegistrationDateField = value;
                    this.RaisePropertyChanged("RegistrationDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SSN {
            get {
                return this.SSNField;
            }
            set {
                if ((object.ReferenceEquals(this.SSNField, value) != true)) {
                    this.SSNField = value;
                    this.RaisePropertyChanged("SSN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryEmailAddress {
            get {
                return this.SecondaryEmailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryEmailAddressField, value) != true)) {
                    this.SecondaryEmailAddressField = value;
                    this.RaisePropertyChanged("SecondaryEmailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SecondaryPhone {
            get {
                return this.SecondaryPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.SecondaryPhoneField, value) != true)) {
                    this.SecondaryPhoneField = value;
                    this.RaisePropertyChanged("SecondaryPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TradingPassword {
            get {
                return this.TradingPasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.TradingPasswordField, value) != true)) {
                    this.TradingPasswordField = value;
                    this.RaisePropertyChanged("TradingPassword");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Zip {
            get {
                return this.ZipField;
            }
            set {
                if ((object.ReferenceEquals(this.ZipField, value) != true)) {
                    this.ZipField = value;
                    this.RaisePropertyChanged("Zip");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsBank", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsBank : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountHolderNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAccountTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankAddress2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BankCountryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankFaxField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BankIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankIFSCCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankPhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankSwiftCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BankZipCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountHolderName {
            get {
                return this.AccountHolderNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountHolderNameField, value) != true)) {
                    this.AccountHolderNameField = value;
                    this.RaisePropertyChanged("AccountHolderName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountID {
            get {
                return this.BankAccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountIDField, value) != true)) {
                    this.BankAccountIDField = value;
                    this.RaisePropertyChanged("BankAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAccountType {
            get {
                return this.BankAccountTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAccountTypeField, value) != true)) {
                    this.BankAccountTypeField = value;
                    this.RaisePropertyChanged("BankAccountType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAddress {
            get {
                return this.BankAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.BankAddressField, value) != true)) {
                    this.BankAddressField = value;
                    this.RaisePropertyChanged("BankAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankAddress2 {
            get {
                return this.BankAddress2Field;
            }
            set {
                if ((object.ReferenceEquals(this.BankAddress2Field, value) != true)) {
                    this.BankAddress2Field = value;
                    this.RaisePropertyChanged("BankAddress2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankCity {
            get {
                return this.BankCityField;
            }
            set {
                if ((object.ReferenceEquals(this.BankCityField, value) != true)) {
                    this.BankCityField = value;
                    this.RaisePropertyChanged("BankCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankCountryID {
            get {
                return this.BankCountryIDField;
            }
            set {
                if ((this.BankCountryIDField.Equals(value) != true)) {
                    this.BankCountryIDField = value;
                    this.RaisePropertyChanged("BankCountryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankFax {
            get {
                return this.BankFaxField;
            }
            set {
                if ((object.ReferenceEquals(this.BankFaxField, value) != true)) {
                    this.BankFaxField = value;
                    this.RaisePropertyChanged("BankFax");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BankID {
            get {
                return this.BankIDField;
            }
            set {
                if ((this.BankIDField.Equals(value) != true)) {
                    this.BankIDField = value;
                    this.RaisePropertyChanged("BankID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankIFSCCode {
            get {
                return this.BankIFSCCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankIFSCCodeField, value) != true)) {
                    this.BankIFSCCodeField = value;
                    this.RaisePropertyChanged("BankIFSCCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankName {
            get {
                return this.BankNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BankNameField, value) != true)) {
                    this.BankNameField = value;
                    this.RaisePropertyChanged("BankName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankPhone {
            get {
                return this.BankPhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.BankPhoneField, value) != true)) {
                    this.BankPhoneField = value;
                    this.RaisePropertyChanged("BankPhone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankSwiftCode {
            get {
                return this.BankSwiftCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankSwiftCodeField, value) != true)) {
                    this.BankSwiftCodeField = value;
                    this.RaisePropertyChanged("BankSwiftCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BankZipCode {
            get {
                return this.BankZipCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.BankZipCodeField, value) != true)) {
                    this.BankZipCodeField = value;
                    this.RaisePropertyChanged("BankZipCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientID {
            get {
                return this.ClientIDField;
            }
            set {
                if ((this.ClientIDField.Equals(value) != true)) {
                    this.ClientIDField = value;
                    this.RaisePropertyChanged("ClientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AccountOpType", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    public enum AccountOpType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCOUNT = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ACCOUNT_TRANSACTION = 1,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsAccount", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsAccount : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BalenceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal BuySideTurnOverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChequeFdNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CurrencyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool DeletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int EditAccountTransactionIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal EquityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HedgeTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsHedgingAllowedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsLiveField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsTradeEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LPNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeverageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PaymentAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime PaymentDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PaymentTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RelatedBankIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RemarkField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal SellSideTurnOverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UsedMarginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroupId {
            get {
                return this.AccountGroupIdField;
            }
            set {
                if ((this.AccountGroupIdField.Equals(value) != true)) {
                    this.AccountGroupIdField = value;
                    this.RaisePropertyChanged("AccountGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((this.AccountIdField.Equals(value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Balence {
            get {
                return this.BalenceField;
            }
            set {
                if ((this.BalenceField.Equals(value) != true)) {
                    this.BalenceField = value;
                    this.RaisePropertyChanged("Balence");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal BuySideTurnOver {
            get {
                return this.BuySideTurnOverField;
            }
            set {
                if ((this.BuySideTurnOverField.Equals(value) != true)) {
                    this.BuySideTurnOverField = value;
                    this.RaisePropertyChanged("BuySideTurnOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChequeFdNo {
            get {
                return this.ChequeFdNoField;
            }
            set {
                if ((object.ReferenceEquals(this.ChequeFdNoField, value) != true)) {
                    this.ChequeFdNoField = value;
                    this.RaisePropertyChanged("ChequeFdNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CurrencyId {
            get {
                return this.CurrencyIdField;
            }
            set {
                if ((this.CurrencyIdField.Equals(value) != true)) {
                    this.CurrencyIdField = value;
                    this.RaisePropertyChanged("CurrencyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Deleted {
            get {
                return this.DeletedField;
            }
            set {
                if ((this.DeletedField.Equals(value) != true)) {
                    this.DeletedField = value;
                    this.RaisePropertyChanged("Deleted");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int EditAccountTransactionID {
            get {
                return this.EditAccountTransactionIDField;
            }
            set {
                if ((this.EditAccountTransactionIDField.Equals(value) != true)) {
                    this.EditAccountTransactionIDField = value;
                    this.RaisePropertyChanged("EditAccountTransactionID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Equity {
            get {
                return this.EquityField;
            }
            set {
                if ((this.EquityField.Equals(value) != true)) {
                    this.EquityField = value;
                    this.RaisePropertyChanged("Equity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HedgeTypeID {
            get {
                return this.HedgeTypeIDField;
            }
            set {
                if ((this.HedgeTypeIDField.Equals(value) != true)) {
                    this.HedgeTypeIDField = value;
                    this.RaisePropertyChanged("HedgeTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsHedgingAllowed {
            get {
                return this.IsHedgingAllowedField;
            }
            set {
                if ((this.IsHedgingAllowedField.Equals(value) != true)) {
                    this.IsHedgingAllowedField = value;
                    this.RaisePropertyChanged("IsHedgingAllowed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsLive {
            get {
                return this.IsLiveField;
            }
            set {
                if ((this.IsLiveField.Equals(value) != true)) {
                    this.IsLiveField = value;
                    this.RaisePropertyChanged("IsLive");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsTradeEnable {
            get {
                return this.IsTradeEnableField;
            }
            set {
                if ((this.IsTradeEnableField.Equals(value) != true)) {
                    this.IsTradeEnableField = value;
                    this.RaisePropertyChanged("IsTradeEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPAccountID {
            get {
                return this.LPAccountIDField;
            }
            set {
                if ((object.ReferenceEquals(this.LPAccountIDField, value) != true)) {
                    this.LPAccountIDField = value;
                    this.RaisePropertyChanged("LPAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LPName {
            get {
                return this.LPNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LPNameField, value) != true)) {
                    this.LPNameField = value;
                    this.RaisePropertyChanged("LPName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeverageId {
            get {
                return this.LeverageIdField;
            }
            set {
                if ((this.LeverageIdField.Equals(value) != true)) {
                    this.LeverageIdField = value;
                    this.RaisePropertyChanged("LeverageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PaymentAmount {
            get {
                return this.PaymentAmountField;
            }
            set {
                if ((this.PaymentAmountField.Equals(value) != true)) {
                    this.PaymentAmountField = value;
                    this.RaisePropertyChanged("PaymentAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime PaymentDate {
            get {
                return this.PaymentDateField;
            }
            set {
                if ((this.PaymentDateField.Equals(value) != true)) {
                    this.PaymentDateField = value;
                    this.RaisePropertyChanged("PaymentDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentMode {
            get {
                return this.PaymentModeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentModeField, value) != true)) {
                    this.PaymentModeField = value;
                    this.RaisePropertyChanged("PaymentMode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PaymentType {
            get {
                return this.PaymentTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.PaymentTypeField, value) != true)) {
                    this.PaymentTypeField = value;
                    this.RaisePropertyChanged("PaymentType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RelatedBankId {
            get {
                return this.RelatedBankIdField;
            }
            set {
                if ((this.RelatedBankIdField.Equals(value) != true)) {
                    this.RelatedBankIdField = value;
                    this.RaisePropertyChanged("RelatedBankId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Remark {
            get {
                return this.RemarkField;
            }
            set {
                if ((object.ReferenceEquals(this.RemarkField, value) != true)) {
                    this.RemarkField = value;
                    this.RaisePropertyChanged("Remark");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal SellSideTurnOver {
            get {
                return this.SellSideTurnOverField;
            }
            set {
                if ((this.SellSideTurnOverField.Equals(value) != true)) {
                    this.SellSideTurnOverField = value;
                    this.RaisePropertyChanged("SellSideTurnOver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal UsedMargin {
            get {
                return this.UsedMarginField;
            }
            set {
                if ((this.UsedMarginField.Equals(value) != true)) {
                    this.UsedMarginField = value;
                    this.RaisePropertyChanged("UsedMargin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCollateralInfo", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCollateralInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountGroupNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrokerTypeIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal CollateralforTradingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LeverageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentAccountGroupIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParentOwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayInShortageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PayOutShortageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalCollateralField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UnallocatedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal UtilizedField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroupID {
            get {
                return this.AccountGroupIDField;
            }
            set {
                if ((this.AccountGroupIDField.Equals(value) != true)) {
                    this.AccountGroupIDField = value;
                    this.RaisePropertyChanged("AccountGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountGroupName {
            get {
                return this.AccountGroupNameField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountGroupNameField, value) != true)) {
                    this.AccountGroupNameField = value;
                    this.RaisePropertyChanged("AccountGroupName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerType {
            get {
                return this.BrokerTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerTypeField, value) != true)) {
                    this.BrokerTypeField = value;
                    this.RaisePropertyChanged("BrokerType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BrokerTypeID {
            get {
                return this.BrokerTypeIDField;
            }
            set {
                if ((this.BrokerTypeIDField.Equals(value) != true)) {
                    this.BrokerTypeIDField = value;
                    this.RaisePropertyChanged("BrokerTypeID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal CollateralforTrading {
            get {
                return this.CollateralforTradingField;
            }
            set {
                if ((this.CollateralforTradingField.Equals(value) != true)) {
                    this.CollateralforTradingField = value;
                    this.RaisePropertyChanged("CollateralforTrading");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Leverage {
            get {
                return this.LeverageField;
            }
            set {
                if ((object.ReferenceEquals(this.LeverageField, value) != true)) {
                    this.LeverageField = value;
                    this.RaisePropertyChanged("Leverage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentAccountGroupID {
            get {
                return this.ParentAccountGroupIDField;
            }
            set {
                if ((this.ParentAccountGroupIDField.Equals(value) != true)) {
                    this.ParentAccountGroupIDField = value;
                    this.RaisePropertyChanged("ParentAccountGroupID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ParentOwner {
            get {
                return this.ParentOwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentOwnerField, value) != true)) {
                    this.ParentOwnerField = value;
                    this.RaisePropertyChanged("ParentOwner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayInShortage {
            get {
                return this.PayInShortageField;
            }
            set {
                if ((this.PayInShortageField.Equals(value) != true)) {
                    this.PayInShortageField = value;
                    this.RaisePropertyChanged("PayInShortage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal PayOutShortage {
            get {
                return this.PayOutShortageField;
            }
            set {
                if ((this.PayOutShortageField.Equals(value) != true)) {
                    this.PayOutShortageField = value;
                    this.RaisePropertyChanged("PayOutShortage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalCollateral {
            get {
                return this.TotalCollateralField;
            }
            set {
                if ((this.TotalCollateralField.Equals(value) != true)) {
                    this.TotalCollateralField = value;
                    this.RaisePropertyChanged("TotalCollateral");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Unallocated {
            get {
                return this.UnallocatedField;
            }
            set {
                if ((this.UnallocatedField.Equals(value) != true)) {
                    this.UnallocatedField = value;
                    this.RaisePropertyChanged("Unallocated");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Utilized {
            get {
                return this.UtilizedField;
            }
            set {
                if ((this.UtilizedField.Equals(value) != true)) {
                    this.UtilizedField = value;
                    this.RaisePropertyChanged("Utilized");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCollateralTransInfo", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCollateralTransInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountGroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal AmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CollateralTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CollateralTypeIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsNewCollateralTransField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal TotalAmountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TransactionTypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountGroupId {
            get {
                return this.AccountGroupIdField;
            }
            set {
                if ((this.AccountGroupIdField.Equals(value) != true)) {
                    this.AccountGroupIdField = value;
                    this.RaisePropertyChanged("AccountGroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Amount {
            get {
                return this.AmountField;
            }
            set {
                if ((this.AmountField.Equals(value) != true)) {
                    this.AmountField = value;
                    this.RaisePropertyChanged("Amount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CollateralType {
            get {
                return this.CollateralTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.CollateralTypeField, value) != true)) {
                    this.CollateralTypeField = value;
                    this.RaisePropertyChanged("CollateralType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CollateralTypeId {
            get {
                return this.CollateralTypeIdField;
            }
            set {
                if ((this.CollateralTypeIdField.Equals(value) != true)) {
                    this.CollateralTypeIdField = value;
                    this.RaisePropertyChanged("CollateralTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsNewCollateralTrans {
            get {
                return this.IsNewCollateralTransField;
            }
            set {
                if ((this.IsNewCollateralTransField.Equals(value) != true)) {
                    this.IsNewCollateralTransField = value;
                    this.RaisePropertyChanged("IsNewCollateralTrans");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal TotalAmount {
            get {
                return this.TotalAmountField;
            }
            set {
                if ((this.TotalAmountField.Equals(value) != true)) {
                    this.TotalAmountField = value;
                    this.RaisePropertyChanged("TotalAmount");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionDate {
            get {
                return this.TransactionDateField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionDateField, value) != true)) {
                    this.TransactionDateField = value;
                    this.RaisePropertyChanged("TransactionDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TransactionType {
            get {
                return this.TransactionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TransactionTypeField, value) != true)) {
                    this.TransactionTypeField = value;
                    this.RaisePropertyChanged("TransactionType");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsTrades", Namespace="http://schemas.datacontract.org/2004/07/BOEngine")]
    [System.SerializableAttribute()]
    public partial class clsTrades : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvgFillPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BrokerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilledQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LeaveQuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int QuantityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SettledQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TradeNoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TriggerPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ValidityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VolumeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvgFillPrice {
            get {
                return this.AvgFillPriceField;
            }
            set {
                if ((this.AvgFillPriceField.Equals(value) != true)) {
                    this.AvgFillPriceField = value;
                    this.RaisePropertyChanged("AvgFillPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BrokerName {
            get {
                return this.BrokerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BrokerNameField, value) != true)) {
                    this.BrokerNameField = value;
                    this.RaisePropertyChanged("BrokerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Comment {
            get {
                return this.CommentField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentField, value) != true)) {
                    this.CommentField = value;
                    this.RaisePropertyChanged("Comment");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilledQuantity {
            get {
                return this.FilledQuantityField;
            }
            set {
                if ((this.FilledQuantityField.Equals(value) != true)) {
                    this.FilledQuantityField = value;
                    this.RaisePropertyChanged("FilledQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LeaveQuantity {
            get {
                return this.LeaveQuantityField;
            }
            set {
                if ((this.LeaveQuantityField.Equals(value) != true)) {
                    this.LeaveQuantityField = value;
                    this.RaisePropertyChanged("LeaveQuantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderPrice {
            get {
                return this.OrderPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderPriceField, value) != true)) {
                    this.OrderPriceField = value;
                    this.RaisePropertyChanged("OrderPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.OrderTypeField, value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Quantity {
            get {
                return this.QuantityField;
            }
            set {
                if ((this.QuantityField.Equals(value) != true)) {
                    this.QuantityField = value;
                    this.RaisePropertyChanged("Quantity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettledQty {
            get {
                return this.SettledQtyField;
            }
            set {
                if ((this.SettledQtyField.Equals(value) != true)) {
                    this.SettledQtyField = value;
                    this.RaisePropertyChanged("SettledQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SymbolID {
            get {
                return this.SymbolIDField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolIDField, value) != true)) {
                    this.SymbolIDField = value;
                    this.RaisePropertyChanged("SymbolID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TradeNo {
            get {
                return this.TradeNoField;
            }
            set {
                if ((this.TradeNoField.Equals(value) != true)) {
                    this.TradeNoField = value;
                    this.RaisePropertyChanged("TradeNo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TriggerPrice {
            get {
                return this.TriggerPriceField;
            }
            set {
                if ((object.ReferenceEquals(this.TriggerPriceField, value) != true)) {
                    this.TriggerPriceField = value;
                    this.RaisePropertyChanged("TriggerPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Validity {
            get {
                return this.ValidityField;
            }
            set {
                if ((this.ValidityField.Equals(value) != true)) {
                    this.ValidityField = value;
                    this.RaisePropertyChanged("Validity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Volume {
            get {
                return this.VolumeField;
            }
            set {
                if ((this.VolumeField.Equals(value) != true)) {
                    this.VolumeField = value;
                    this.RaisePropertyChanged("Volume");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsModifyTrades", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsModifyTrades : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal LastPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseMsgField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal LastPrice {
            get {
                return this.LastPriceField;
            }
            set {
                if ((this.LastPriceField.Equals(value) != true)) {
                    this.LastPriceField = value;
                    this.RaisePropertyChanged("LastPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseMsg {
            get {
                return this.ServerResponseMsgField;
            }
            set {
                if ((this.ServerResponseMsgField.Equals(value) != true)) {
                    this.ServerResponseMsgField = value;
                    this.RaisePropertyChanged("ServerResponseMsg");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsNewOrder", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsNewOrder : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpireDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long OrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char OrderStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PositionSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char TIFField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpireDate {
            get {
                return this.ExpireDateField;
            }
            set {
                if ((this.ExpireDateField.Equals(value) != true)) {
                    this.ExpireDateField = value;
                    this.RaisePropertyChanged("ExpireDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long OrderID {
            get {
                return this.OrderIDField;
            }
            set {
                if ((this.OrderIDField.Equals(value) != true)) {
                    this.OrderIDField = value;
                    this.RaisePropertyChanged("OrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char OrderStatus {
            get {
                return this.OrderStatusField;
            }
            set {
                if ((this.OrderStatusField.Equals(value) != true)) {
                    this.OrderStatusField = value;
                    this.RaisePropertyChanged("OrderStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PositionSize {
            get {
                return this.PositionSizeField;
            }
            set {
                if ((this.PositionSizeField.Equals(value) != true)) {
                    this.PositionSizeField = value;
                    this.RaisePropertyChanged("PositionSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Side {
            get {
                return this.SideField;
            }
            set {
                if ((this.SideField.Equals(value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char TIF {
            get {
                return this.TIFField;
            }
            set {
                if ((this.TIFField.Equals(value) != true)) {
                    this.TIFField = value;
                    this.RaisePropertyChanged("TIF");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsSettleTrade", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsSettleTrade : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CloseQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IPAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char OrderStatusIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char OrderTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PositionSizeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseMsgField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SettledOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SettledQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char SideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private char TIFField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private float UsedMarginField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AccountID {
            get {
                return this.AccountIDField;
            }
            set {
                if ((this.AccountIDField.Equals(value) != true)) {
                    this.AccountIDField = value;
                    this.RaisePropertyChanged("AccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CloseQty {
            get {
                return this.CloseQtyField;
            }
            set {
                if ((this.CloseQtyField.Equals(value) != true)) {
                    this.CloseQtyField = value;
                    this.RaisePropertyChanged("CloseQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IPAddress {
            get {
                return this.IPAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.IPAddressField, value) != true)) {
                    this.IPAddressField = value;
                    this.RaisePropertyChanged("IPAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char OrderStatusID {
            get {
                return this.OrderStatusIDField;
            }
            set {
                if ((this.OrderStatusIDField.Equals(value) != true)) {
                    this.OrderStatusIDField = value;
                    this.RaisePropertyChanged("OrderStatusID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char OrderType {
            get {
                return this.OrderTypeField;
            }
            set {
                if ((this.OrderTypeField.Equals(value) != true)) {
                    this.OrderTypeField = value;
                    this.RaisePropertyChanged("OrderType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PositionSize {
            get {
                return this.PositionSizeField;
            }
            set {
                if ((this.PositionSizeField.Equals(value) != true)) {
                    this.PositionSizeField = value;
                    this.RaisePropertyChanged("PositionSize");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseMsg {
            get {
                return this.ServerResponseMsgField;
            }
            set {
                if ((this.ServerResponseMsgField.Equals(value) != true)) {
                    this.ServerResponseMsgField = value;
                    this.RaisePropertyChanged("ServerResponseMsg");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SettledOrderID {
            get {
                return this.SettledOrderIDField;
            }
            set {
                if ((this.SettledOrderIDField.Equals(value) != true)) {
                    this.SettledOrderIDField = value;
                    this.RaisePropertyChanged("SettledOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SettledQty {
            get {
                return this.SettledQtyField;
            }
            set {
                if ((this.SettledQtyField.Equals(value) != true)) {
                    this.SettledQtyField = value;
                    this.RaisePropertyChanged("SettledQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char Side {
            get {
                return this.SideField;
            }
            set {
                if ((this.SideField.Equals(value) != true)) {
                    this.SideField = value;
                    this.RaisePropertyChanged("Side");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public char TIF {
            get {
                return this.TIFField;
            }
            set {
                if ((this.TIFField.Equals(value) != true)) {
                    this.TIFField = value;
                    this.RaisePropertyChanged("TIF");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public float UsedMargin {
            get {
                return this.UsedMarginField;
            }
            set {
                if ((this.UsedMarginField.Equals(value) != true)) {
                    this.UsedMarginField = value;
                    this.RaisePropertyChanged("UsedMargin");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsMapOrders", Namespace="http://schemas.datacontract.org/2004/07/BOEngine")]
    [System.SerializableAttribute()]
    public partial class clsMapOrders : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BuyFillIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long BuySideOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FilledQtyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastUpdateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MapOrderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SellAccountIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SellFillIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long SellSideOrderIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyAccountID {
            get {
                return this.BuyAccountIDField;
            }
            set {
                if ((this.BuyAccountIDField.Equals(value) != true)) {
                    this.BuyAccountIDField = value;
                    this.RaisePropertyChanged("BuyAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BuyFillID {
            get {
                return this.BuyFillIDField;
            }
            set {
                if ((this.BuyFillIDField.Equals(value) != true)) {
                    this.BuyFillIDField = value;
                    this.RaisePropertyChanged("BuyFillID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long BuySideOrderID {
            get {
                return this.BuySideOrderIDField;
            }
            set {
                if ((this.BuySideOrderIDField.Equals(value) != true)) {
                    this.BuySideOrderIDField = value;
                    this.RaisePropertyChanged("BuySideOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FilledQty {
            get {
                return this.FilledQtyField;
            }
            set {
                if ((this.FilledQtyField.Equals(value) != true)) {
                    this.FilledQtyField = value;
                    this.RaisePropertyChanged("FilledQty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastUpdateTime {
            get {
                return this.LastUpdateTimeField;
            }
            set {
                if ((this.LastUpdateTimeField.Equals(value) != true)) {
                    this.LastUpdateTimeField = value;
                    this.RaisePropertyChanged("LastUpdateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MapOrderId {
            get {
                return this.MapOrderIdField;
            }
            set {
                if ((this.MapOrderIdField.Equals(value) != true)) {
                    this.MapOrderIdField = value;
                    this.RaisePropertyChanged("MapOrderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SellAccountID {
            get {
                return this.SellAccountIDField;
            }
            set {
                if ((this.SellAccountIDField.Equals(value) != true)) {
                    this.SellAccountIDField = value;
                    this.RaisePropertyChanged("SellAccountID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SellFillID {
            get {
                return this.SellFillIDField;
            }
            set {
                if ((this.SellFillIDField.Equals(value) != true)) {
                    this.SellFillIDField = value;
                    this.RaisePropertyChanged("SellFillID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long SellSideOrderID {
            get {
                return this.SellSideOrderIDField;
            }
            set {
                if ((this.SellSideOrderIDField.Equals(value) != true)) {
                    this.SellSideOrderIDField = value;
                    this.RaisePropertyChanged("SellSideOrderID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbol {
            get {
                return this.SymbolField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolField, value) != true)) {
                    this.SymbolField = value;
                    this.RaisePropertyChanged("Symbol");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsTGAccountConnectionSettings", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsTGAccountConnectionSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AccountIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsEnableField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TGIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AccountId {
            get {
                return this.AccountIdField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountIdField, value) != true)) {
                    this.AccountIdField = value;
                    this.RaisePropertyChanged("AccountId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsEnable {
            get {
                return this.IsEnableField;
            }
            set {
                if ((this.IsEnableField.Equals(value) != true)) {
                    this.IsEnableField = value;
                    this.RaisePropertyChanged("IsEnable");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Mode {
            get {
                return this.ModeField;
            }
            set {
                if ((this.ModeField.Equals(value) != true)) {
                    this.ModeField = value;
                    this.RaisePropertyChanged("Mode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TGID {
            get {
                return this.TGIDField;
            }
            set {
                if ((this.TGIDField.Equals(value) != true)) {
                    this.TGIDField = value;
                    this.RaisePropertyChanged("TGID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsVirtualDealerInfo", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsVirtualDealerInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AllowPendingsOnNewsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DelayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapPendingCancelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapSafeLevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapStopLossSlideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapTakeProfitSlideField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GapTickCounterField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumLosingSlippageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumProfitSlippageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaximumProfitSlippageVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal MaximumVolumeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NewsStopsFreezesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SymbolsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VirtualDealerIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VirtualManagerAccountField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AllowPendingsOnNews {
            get {
                return this.AllowPendingsOnNewsField;
            }
            set {
                if ((this.AllowPendingsOnNewsField.Equals(value) != true)) {
                    this.AllowPendingsOnNewsField = value;
                    this.RaisePropertyChanged("AllowPendingsOnNews");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Delay {
            get {
                return this.DelayField;
            }
            set {
                if ((this.DelayField.Equals(value) != true)) {
                    this.DelayField = value;
                    this.RaisePropertyChanged("Delay");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapLevel {
            get {
                return this.GapLevelField;
            }
            set {
                if ((this.GapLevelField.Equals(value) != true)) {
                    this.GapLevelField = value;
                    this.RaisePropertyChanged("GapLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapPendingCancel {
            get {
                return this.GapPendingCancelField;
            }
            set {
                if ((this.GapPendingCancelField.Equals(value) != true)) {
                    this.GapPendingCancelField = value;
                    this.RaisePropertyChanged("GapPendingCancel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapSafeLevel {
            get {
                return this.GapSafeLevelField;
            }
            set {
                if ((this.GapSafeLevelField.Equals(value) != true)) {
                    this.GapSafeLevelField = value;
                    this.RaisePropertyChanged("GapSafeLevel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapStopLossSlide {
            get {
                return this.GapStopLossSlideField;
            }
            set {
                if ((this.GapStopLossSlideField.Equals(value) != true)) {
                    this.GapStopLossSlideField = value;
                    this.RaisePropertyChanged("GapStopLossSlide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapTakeProfitSlide {
            get {
                return this.GapTakeProfitSlideField;
            }
            set {
                if ((this.GapTakeProfitSlideField.Equals(value) != true)) {
                    this.GapTakeProfitSlideField = value;
                    this.RaisePropertyChanged("GapTakeProfitSlide");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GapTickCounter {
            get {
                return this.GapTickCounterField;
            }
            set {
                if ((this.GapTickCounterField.Equals(value) != true)) {
                    this.GapTickCounterField = value;
                    this.RaisePropertyChanged("GapTickCounter");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Groups {
            get {
                return this.GroupsField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupsField, value) != true)) {
                    this.GroupsField = value;
                    this.RaisePropertyChanged("Groups");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumLosingSlippage {
            get {
                return this.MaximumLosingSlippageField;
            }
            set {
                if ((this.MaximumLosingSlippageField.Equals(value) != true)) {
                    this.MaximumLosingSlippageField = value;
                    this.RaisePropertyChanged("MaximumLosingSlippage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumProfitSlippage {
            get {
                return this.MaximumProfitSlippageField;
            }
            set {
                if ((this.MaximumProfitSlippageField.Equals(value) != true)) {
                    this.MaximumProfitSlippageField = value;
                    this.RaisePropertyChanged("MaximumProfitSlippage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaximumProfitSlippageVolume {
            get {
                return this.MaximumProfitSlippageVolumeField;
            }
            set {
                if ((this.MaximumProfitSlippageVolumeField.Equals(value) != true)) {
                    this.MaximumProfitSlippageVolumeField = value;
                    this.RaisePropertyChanged("MaximumProfitSlippageVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal MaximumVolume {
            get {
                return this.MaximumVolumeField;
            }
            set {
                if ((this.MaximumVolumeField.Equals(value) != true)) {
                    this.MaximumVolumeField = value;
                    this.RaisePropertyChanged("MaximumVolume");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int NewsStopsFreezes {
            get {
                return this.NewsStopsFreezesField;
            }
            set {
                if ((this.NewsStopsFreezesField.Equals(value) != true)) {
                    this.NewsStopsFreezesField = value;
                    this.RaisePropertyChanged("NewsStopsFreezes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Symbols {
            get {
                return this.SymbolsField;
            }
            set {
                if ((object.ReferenceEquals(this.SymbolsField, value) != true)) {
                    this.SymbolsField = value;
                    this.RaisePropertyChanged("Symbols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VirtualDealerID {
            get {
                return this.VirtualDealerIDField;
            }
            set {
                if ((this.VirtualDealerIDField.Equals(value) != true)) {
                    this.VirtualDealerIDField = value;
                    this.RaisePropertyChanged("VirtualDealerID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VirtualManagerAccount {
            get {
                return this.VirtualManagerAccountField;
            }
            set {
                if ((object.ReferenceEquals(this.VirtualManagerAccountField, value) != true)) {
                    this.VirtualManagerAccountField = value;
                    this.RaisePropertyChanged("VirtualManagerAccount");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsCommonSettings", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsCommonSettings : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Property {
            get {
                return this.PropertyField;
            }
            set {
                if ((object.ReferenceEquals(this.PropertyField, value) != true)) {
                    this.PropertyField = value;
                    this.RaisePropertyChanged("Property");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Value {
            get {
                return this.ValueField;
            }
            set {
                if ((object.ReferenceEquals(this.ValueField, value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsInstrumentClosingPrice", Namespace="http://schemas.datacontract.org/2004/07/BOEngineServiceClasses")]
    [System.SerializableAttribute()]
    public partial class clsInstrumentClosingPrice : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ClosingDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal ClosingPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FK_InstrumentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long PK_InstrumentClosingPriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ServerResponseIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ClosingDate {
            get {
                return this.ClosingDateField;
            }
            set {
                if ((this.ClosingDateField.Equals(value) != true)) {
                    this.ClosingDateField = value;
                    this.RaisePropertyChanged("ClosingDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal ClosingPrice {
            get {
                return this.ClosingPriceField;
            }
            set {
                if ((this.ClosingPriceField.Equals(value) != true)) {
                    this.ClosingPriceField = value;
                    this.RaisePropertyChanged("ClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FK_InstrumentID {
            get {
                return this.FK_InstrumentIDField;
            }
            set {
                if ((this.FK_InstrumentIDField.Equals(value) != true)) {
                    this.FK_InstrumentIDField = value;
                    this.RaisePropertyChanged("FK_InstrumentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long PK_InstrumentClosingPrice {
            get {
                return this.PK_InstrumentClosingPriceField;
            }
            set {
                if ((this.PK_InstrumentClosingPriceField.Equals(value) != true)) {
                    this.PK_InstrumentClosingPriceField = value;
                    this.RaisePropertyChanged("PK_InstrumentClosingPrice");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ServerResponseID {
            get {
                return this.ServerResponseIDField;
            }
            set {
                if ((this.ServerResponseIDField.Equals(value) != true)) {
                    this.ServerResponseIDField = value;
                    this.RaisePropertyChanged("ServerResponseID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BOEngineServiceTCP.IBOEngineService")]
    public interface IBOEngineService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/AuthenticateLogin", ReplyAction="http://tempuri.org/IBOEngineService/AuthenticateLoginResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsLogin AuthenticateLogin(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/AuthenticateLogin", ReplyAction="http://tempuri.org/IBOEngineService/AuthenticateLoginResponse")]
        System.IAsyncResult BeginAuthenticateLogin(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsLogin EndAuthenticateLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/LogOut", ReplyAction="http://tempuri.org/IBOEngineService/LogOutResponse")]
        void LogOut(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/LogOut", ReplyAction="http://tempuri.org/IBOEngineService/LogOutResponse")]
        System.IAsyncResult BeginLogOut(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.AsyncCallback callback, object asyncState);
        
        void EndLogOut(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleBrokerOperationsLog", ReplyAction="http://tempuri.org/IBOEngineService/HandleBrokerOperationsLogResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] HandleBrokerOperationsLog(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleBrokerOperationsLog", ReplyAction="http://tempuri.org/IBOEngineService/HandleBrokerOperationsLogResponse")]
        System.IAsyncResult BeginHandleBrokerOperationsLog(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] EndHandleBrokerOperationsLog(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetHistoricalData", ReplyAction="http://tempuri.org/IBOEngineService/GetHistoricalDataResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] GetHistoricalData(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetHistoricalData", ReplyAction="http://tempuri.org/IBOEngineService/GetHistoricalDataResponse")]
        System.IAsyncResult BeginGetHistoricalData(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] EndGetHistoricalData(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleIPAccessList", ReplyAction="http://tempuri.org/IBOEngineService/HandleIPAccessListResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] HandleIPAccessList(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleIPAccessList", ReplyAction="http://tempuri.org/IBOEngineService/HandleIPAccessListResponse")]
        System.IAsyncResult BeginHandleIPAccessList(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] EndHandleIPAccessList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleFeeMaster", ReplyAction="http://tempuri.org/IBOEngineService/HandleFeeMasterResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] HandleFeeMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleFeeMaster", ReplyAction="http://tempuri.org/IBOEngineService/HandleFeeMasterResponse")]
        System.IAsyncResult BeginHandleFeeMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] EndHandleFeeMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleTaxMaster", ReplyAction="http://tempuri.org/IBOEngineService/HandleTaxMasterResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] HandleTaxMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleTaxMaster", ReplyAction="http://tempuri.org/IBOEngineService/HandleTaxMasterResponse")]
        System.IAsyncResult BeginHandleTaxMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] EndHandleTaxMaster(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleHoliday", ReplyAction="http://tempuri.org/IBOEngineService/HandleHolidayResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] HandleHoliday(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleHoliday", ReplyAction="http://tempuri.org/IBOEngineService/HandleHolidayResponse")]
        System.IAsyncResult BeginHandleHoliday(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] EndHandleHoliday(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleContractSpecfication", ReplyAction="http://tempuri.org/IBOEngineService/HandleContractSpecficationResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] HandleContractSpecfication(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleContractSpecfication", ReplyAction="http://tempuri.org/IBOEngineService/HandleContractSpecficationResponse")]
        System.IAsyncResult BeginHandleContractSpecfication(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] EndHandleContractSpecfication(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleContractSession", ReplyAction="http://tempuri.org/IBOEngineService/HandleContractSessionResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] HandleContractSession(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleContractSession", ReplyAction="http://tempuri.org/IBOEngineService/HandleContractSessionResponse")]
        System.IAsyncResult BeginHandleContractSession(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] EndHandleContractSession(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetMasterInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetMasterInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo GetMasterInfo(string userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetMasterInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetMasterInfoResponse")]
        System.IAsyncResult BeginGetMasterInfo(string userId, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo EndGetMasterInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetLeverageList", ReplyAction="http://tempuri.org/IBOEngineService/GetLeverageListResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] GetLeverageList(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetLeverageList", ReplyAction="http://tempuri.org/IBOEngineService/GetLeverageListResponse")]
        System.IAsyncResult BeginGetLeverageList(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] EndGetLeverageList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetModules", ReplyAction="http://tempuri.org/IBOEngineService/GetModulesResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsModule[] GetModules(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetModules", ReplyAction="http://tempuri.org/IBOEngineService/GetModulesResponse")]
        System.IAsyncResult BeginGetModules(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsModule[] EndGetModules(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetParticipaintList", ReplyAction="http://tempuri.org/IBOEngineService/GetParticipaintListResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] GetParticipaintList(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetParticipaintList", ReplyAction="http://tempuri.org/IBOEngineService/GetParticipaintListResponse")]
        System.IAsyncResult BeginGetParticipaintList(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] EndGetParticipaintList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetSecurityType", ReplyAction="http://tempuri.org/IBOEngineService/GetSecurityTypeResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] GetSecurityType(string userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetSecurityType", ReplyAction="http://tempuri.org/IBOEngineService/GetSecurityTypeResponse")]
        System.IAsyncResult BeginGetSecurityType(string userId, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] EndGetSecurityType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetCurrencyList", ReplyAction="http://tempuri.org/IBOEngineService/GetCurrencyListResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] GetCurrencyList(string userId);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetCurrencyList", ReplyAction="http://tempuri.org/IBOEngineService/GetCurrencyListResponse")]
        System.IAsyncResult BeginGetCurrencyList(string userId, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] EndGetCurrencyList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetBrokerList", ReplyAction="http://tempuri.org/IBOEngineService/GetBrokerListResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] GetBrokerList(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetBrokerList", ReplyAction="http://tempuri.org/IBOEngineService/GetBrokerListResponse")]
        System.IAsyncResult BeginGetBrokerList(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] EndGetBrokerList(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetCountryDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetCountryDetailsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] GetCountryDetails(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetCountryDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetCountryDetailsResponse")]
        System.IAsyncResult BeginGetCountryDetails(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] EndGetCountryDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetAccountGroup", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountGroupResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] GetAccountGroup(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetAccountGroup", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountGroupResponse")]
        System.IAsyncResult BeginGetAccountGroup(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] EndGetAccountGroup(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleTimeSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleTimeSettingsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] HandleTimeSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleTimeSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleTimeSettingsResponse")]
        System.IAsyncResult BeginHandleTimeSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] EndHandleTimeSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleTradingGateway", ReplyAction="http://tempuri.org/IBOEngineService/HandleTradingGatewayResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] HandleTradingGateway(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleTradingGateway", ReplyAction="http://tempuri.org/IBOEngineService/HandleTradingGatewayResponse")]
        System.IAsyncResult BeginHandleTradingGateway(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] EndHandleTradingGateway(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleBrokers", ReplyAction="http://tempuri.org/IBOEngineService/HandleBrokersResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] HandleBrokers(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleBrokers", ReplyAction="http://tempuri.org/IBOEngineService/HandleBrokersResponse")]
        System.IAsyncResult BeginHandleBrokers(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] EndHandleBrokers(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetCollateralTypes", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralTypesResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] GetCollateralTypes(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetCollateralTypes", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralTypesResponse")]
        System.IAsyncResult BeginGetCollateralTypes(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] EndGetCollateralTypes(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetClientInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] GetClientInfo(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetClientInfoResponse")]
        System.IAsyncResult BeginGetClientInfo(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] EndGetClientInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/InsertIntoClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoClientInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo InsertIntoClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/InsertIntoClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoClientInfoResponse")]
        System.IAsyncResult BeginInsertIntoClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo EndInsertIntoClientInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/UpdateClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/UpdateClientInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo UpdateClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/UpdateClientInfo", ReplyAction="http://tempuri.org/IBOEngineService/UpdateClientInfoResponse")]
        System.IAsyncResult BeginUpdateClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo EndUpdateClientInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/AuthenticateClientID", ReplyAction="http://tempuri.org/IBOEngineService/AuthenticateClientIDResponse")]
        bool AuthenticateClientID(string userIdPwd, string clientID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/AuthenticateClientID", ReplyAction="http://tempuri.org/IBOEngineService/AuthenticateClientIDResponse")]
        System.IAsyncResult BeginAuthenticateClientID(string userIdPwd, string clientID, System.AsyncCallback callback, object asyncState);
        
        bool EndAuthenticateClientID(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetBankInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBank[] GetBankInfo(string userIdPwd, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetBankInfoResponse")]
        System.IAsyncResult BeginGetBankInfo(string userIdPwd, int clientID, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBank[] EndGetBankInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/InsertIntoBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoBankInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBank InsertIntoBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/InsertIntoBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoBankInfoResponse")]
        System.IAsyncResult BeginInsertIntoBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBank EndInsertIntoBankInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/UpdateBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/UpdateBankInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsBank UpdateBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/UpdateBankInfo", ReplyAction="http://tempuri.org/IBOEngineService/UpdateBankInfoResponse")]
        System.IAsyncResult BeginUpdateBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsBank EndUpdateBankInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetAccounts", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] GetAccounts(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetAccounts", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountsResponse")]
        System.IAsyncResult BeginGetAccounts(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] EndGetAccounts(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/InsertIntoAccount", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoAccountResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount InsertIntoAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/InsertIntoAccount", ReplyAction="http://tempuri.org/IBOEngineService/InsertIntoAccountResponse")]
        System.IAsyncResult BeginInsertIntoAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount EndInsertIntoAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/UpdateAccount", ReplyAction="http://tempuri.org/IBOEngineService/UpdateAccountResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount UpdateAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/UpdateAccount", ReplyAction="http://tempuri.org/IBOEngineService/UpdateAccountResponse")]
        System.IAsyncResult BeginUpdateAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsAccount EndUpdateAccount(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetCollateralInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] GetCollateralInfo(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetCollateralInfo", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralInfoResponse")]
        System.IAsyncResult BeginGetCollateralInfo(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] EndGetCollateralInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleCollateralTransInfo", ReplyAction="http://tempuri.org/IBOEngineService/HandleCollateralTransInfoResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] HandleCollateralTransInfo(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleCollateralTransInfo", ReplyAction="http://tempuri.org/IBOEngineService/HandleCollateralTransInfoResponse")]
        System.IAsyncResult BeginHandleCollateralTransInfo(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] EndHandleCollateralTransInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetCollateralTransactionHistory", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralTransactionHistoryResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] GetCollateralTransactionHistory(string userIdPwd, int accountGroupID, int CollateralTypeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetCollateralTransactionHistory", ReplyAction="http://tempuri.org/IBOEngineService/GetCollateralTransactionHistoryResponse")]
        System.IAsyncResult BeginGetCollateralTransactionHistory(string userIdPwd, int accountGroupID, int CollateralTypeID, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] EndGetCollateralTransactionHistory(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetTradeOrdersDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetTradeOrdersDetailsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] GetTradeOrdersDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetTradeOrdersDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetTradeOrdersDetailsResponse")]
        System.IAsyncResult BeginGetTradeOrdersDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] EndGetTradeOrdersDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetTradeDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetTradeDetailsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] GetTradeDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetTradeDetails", ReplyAction="http://tempuri.org/IBOEngineService/GetTradeDetailsResponse")]
        System.IAsyncResult BeginGetTradeDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] EndGetTradeDetails(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/ModifyTrade", ReplyAction="http://tempuri.org/IBOEngineService/ModifyTradeResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/ModifyTrade", ReplyAction="http://tempuri.org/IBOEngineService/ModifyTradeResponse")]
        System.IAsyncResult BeginModifyTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades EndModifyTrade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/NewTrade", ReplyAction="http://tempuri.org/IBOEngineService/NewTradeResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade(string userId, [System.ServiceModel.MessageParameterAttribute(Name="NewTrade")] BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/NewTrade", ReplyAction="http://tempuri.org/IBOEngineService/NewTradeResponse")]
        System.IAsyncResult BeginNewTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder EndNewTrade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/SettleTrade", ReplyAction="http://tempuri.org/IBOEngineService/SettleTradeResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade(string userId, [System.ServiceModel.MessageParameterAttribute(Name="SettleTrade")] BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade1);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/SettleTrade", ReplyAction="http://tempuri.org/IBOEngineService/SettleTradeResponse")]
        System.IAsyncResult BeginSettleTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade EndSettleTrade(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetMapOrders", ReplyAction="http://tempuri.org/IBOEngineService/GetMapOrdersResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] GetMapOrders(string userIdPwd);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetMapOrders", ReplyAction="http://tempuri.org/IBOEngineService/GetMapOrdersResponse")]
        System.IAsyncResult BeginGetMapOrders(string userIdPwd, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] EndGetMapOrders(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/GetAccountIDsByAccountType", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountIDsByAccountTypeResponse")]
        string[] GetAccountIDsByAccountType(string userIdPwd, int AccountTypeID);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/GetAccountIDsByAccountType", ReplyAction="http://tempuri.org/IBOEngineService/GetAccountIDsByAccountTypeResponse")]
        System.IAsyncResult BeginGetAccountIDsByAccountType(string userIdPwd, int AccountTypeID, System.AsyncCallback callback, object asyncState);
        
        string[] EndGetAccountIDsByAccountType(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleTGAccountConnetionSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleTGAccountConnetionSettingsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] HandleTGAccountConnetionSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleTGAccountConnetionSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleTGAccountConnetionSettingsResponse")]
        System.IAsyncResult BeginHandleTGAccountConnetionSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] EndHandleTGAccountConnetionSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleVirtualDealer", ReplyAction="http://tempuri.org/IBOEngineService/HandleVirtualDealerResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] HandleVirtualDealer(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleVirtualDealer", ReplyAction="http://tempuri.org/IBOEngineService/HandleVirtualDealerResponse")]
        System.IAsyncResult BeginHandleVirtualDealer(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] EndHandleVirtualDealer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleCommonSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleCommonSettingsResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] HandleCommonSettings(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleCommonSettings", ReplyAction="http://tempuri.org/IBOEngineService/HandleCommonSettingsResponse")]
        System.IAsyncResult BeginHandleCommonSettings(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] EndHandleCommonSettings(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBOEngineService/HandleInstClosingPrice", ReplyAction="http://tempuri.org/IBOEngineService/HandleInstClosingPriceResponse")]
        BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] HandleInstClosingPrice(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IBOEngineService/HandleInstClosingPrice", ReplyAction="http://tempuri.org/IBOEngineService/HandleInstClosingPriceResponse")]
        System.IAsyncResult BeginHandleInstClosingPrice(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType, System.AsyncCallback callback, object asyncState);
        
        BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] EndHandleInstClosingPrice(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBOEngineServiceChannel : BOADMIN_NEW.BOEngineServiceTCP.IBOEngineService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsLogin Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsLogin)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleBrokerOperationsLogCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleBrokerOperationsLogCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetHistoricalDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetHistoricalDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleIPAccessListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleIPAccessListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleFeeMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleFeeMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleTaxMasterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleTaxMasterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleHolidayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleHolidayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleContractSpecficationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleContractSpecficationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleContractSessionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleContractSessionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMasterInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMasterInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetLeverageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetLeverageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetModulesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetModulesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsModule[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsModule[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetParticipaintListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetParticipaintListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSecurityTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSecurityTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCurrencyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCurrencyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrokerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrokerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCountryDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCountryDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleTimeSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleTimeSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleTradingGatewayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleTradingGatewayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleBrokersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleBrokersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBroker[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCollateralTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCollateralTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertIntoClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertIntoClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateClientInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateClientInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticateClientIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AuthenticateClientIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBankInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBankInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBank[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertIntoBankInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertIntoBankInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBank)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateBankInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateBankInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsBank)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsAccount[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InsertIntoAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InsertIntoAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsAccount)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsAccount)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCollateralInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCollateralInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleCollateralTransInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleCollateralTransInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetCollateralTransactionHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetCollateralTransactionHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTradeOrdersDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTradeOrdersDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTrades[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetTradeDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetTradeDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTrades[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ModifyTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ModifyTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public NewTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SettleTradeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SettleTradeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetMapOrdersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetMapOrdersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAccountIDsByAccountTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAccountIDsByAccountTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleTGAccountConnetionSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleTGAccountConnetionSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleVirtualDealerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleVirtualDealerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleCommonSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleCommonSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class HandleInstClosingPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public HandleInstClosingPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BOEngineServiceClient : System.ServiceModel.ClientBase<BOADMIN_NEW.BOEngineServiceTCP.IBOEngineService>, BOADMIN_NEW.BOEngineServiceTCP.IBOEngineService {
        
        private BeginOperationDelegate onBeginAuthenticateLoginDelegate;
        
        private EndOperationDelegate onEndAuthenticateLoginDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogOutDelegate;
        
        private EndOperationDelegate onEndLogOutDelegate;
        
        private System.Threading.SendOrPostCallback onLogOutCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleBrokerOperationsLogDelegate;
        
        private EndOperationDelegate onEndHandleBrokerOperationsLogDelegate;
        
        private System.Threading.SendOrPostCallback onHandleBrokerOperationsLogCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetHistoricalDataDelegate;
        
        private EndOperationDelegate onEndGetHistoricalDataDelegate;
        
        private System.Threading.SendOrPostCallback onGetHistoricalDataCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleIPAccessListDelegate;
        
        private EndOperationDelegate onEndHandleIPAccessListDelegate;
        
        private System.Threading.SendOrPostCallback onHandleIPAccessListCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleFeeMasterDelegate;
        
        private EndOperationDelegate onEndHandleFeeMasterDelegate;
        
        private System.Threading.SendOrPostCallback onHandleFeeMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleTaxMasterDelegate;
        
        private EndOperationDelegate onEndHandleTaxMasterDelegate;
        
        private System.Threading.SendOrPostCallback onHandleTaxMasterCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleHolidayDelegate;
        
        private EndOperationDelegate onEndHandleHolidayDelegate;
        
        private System.Threading.SendOrPostCallback onHandleHolidayCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleContractSpecficationDelegate;
        
        private EndOperationDelegate onEndHandleContractSpecficationDelegate;
        
        private System.Threading.SendOrPostCallback onHandleContractSpecficationCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleContractSessionDelegate;
        
        private EndOperationDelegate onEndHandleContractSessionDelegate;
        
        private System.Threading.SendOrPostCallback onHandleContractSessionCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMasterInfoDelegate;
        
        private EndOperationDelegate onEndGetMasterInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetMasterInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetLeverageListDelegate;
        
        private EndOperationDelegate onEndGetLeverageListDelegate;
        
        private System.Threading.SendOrPostCallback onGetLeverageListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetModulesDelegate;
        
        private EndOperationDelegate onEndGetModulesDelegate;
        
        private System.Threading.SendOrPostCallback onGetModulesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetParticipaintListDelegate;
        
        private EndOperationDelegate onEndGetParticipaintListDelegate;
        
        private System.Threading.SendOrPostCallback onGetParticipaintListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetSecurityTypeDelegate;
        
        private EndOperationDelegate onEndGetSecurityTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetSecurityTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCurrencyListDelegate;
        
        private EndOperationDelegate onEndGetCurrencyListDelegate;
        
        private System.Threading.SendOrPostCallback onGetCurrencyListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrokerListDelegate;
        
        private EndOperationDelegate onEndGetBrokerListDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrokerListCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCountryDetailsDelegate;
        
        private EndOperationDelegate onEndGetCountryDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetCountryDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountGroupDelegate;
        
        private EndOperationDelegate onEndGetAccountGroupDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountGroupCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleTimeSettingsDelegate;
        
        private EndOperationDelegate onEndHandleTimeSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onHandleTimeSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleTradingGatewayDelegate;
        
        private EndOperationDelegate onEndHandleTradingGatewayDelegate;
        
        private System.Threading.SendOrPostCallback onHandleTradingGatewayCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleBrokersDelegate;
        
        private EndOperationDelegate onEndHandleBrokersDelegate;
        
        private System.Threading.SendOrPostCallback onHandleBrokersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCollateralTypesDelegate;
        
        private EndOperationDelegate onEndGetCollateralTypesDelegate;
        
        private System.Threading.SendOrPostCallback onGetCollateralTypesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetClientInfoDelegate;
        
        private EndOperationDelegate onEndGetClientInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetClientInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertIntoClientInfoDelegate;
        
        private EndOperationDelegate onEndInsertIntoClientInfoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertIntoClientInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateClientInfoDelegate;
        
        private EndOperationDelegate onEndUpdateClientInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateClientInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginAuthenticateClientIDDelegate;
        
        private EndOperationDelegate onEndAuthenticateClientIDDelegate;
        
        private System.Threading.SendOrPostCallback onAuthenticateClientIDCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBankInfoDelegate;
        
        private EndOperationDelegate onEndGetBankInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetBankInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertIntoBankInfoDelegate;
        
        private EndOperationDelegate onEndInsertIntoBankInfoDelegate;
        
        private System.Threading.SendOrPostCallback onInsertIntoBankInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateBankInfoDelegate;
        
        private EndOperationDelegate onEndUpdateBankInfoDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateBankInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountsDelegate;
        
        private EndOperationDelegate onEndGetAccountsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountsCompletedDelegate;
        
        private BeginOperationDelegate onBeginInsertIntoAccountDelegate;
        
        private EndOperationDelegate onEndInsertIntoAccountDelegate;
        
        private System.Threading.SendOrPostCallback onInsertIntoAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateAccountDelegate;
        
        private EndOperationDelegate onEndUpdateAccountDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateAccountCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCollateralInfoDelegate;
        
        private EndOperationDelegate onEndGetCollateralInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetCollateralInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleCollateralTransInfoDelegate;
        
        private EndOperationDelegate onEndHandleCollateralTransInfoDelegate;
        
        private System.Threading.SendOrPostCallback onHandleCollateralTransInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetCollateralTransactionHistoryDelegate;
        
        private EndOperationDelegate onEndGetCollateralTransactionHistoryDelegate;
        
        private System.Threading.SendOrPostCallback onGetCollateralTransactionHistoryCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTradeOrdersDetailsDelegate;
        
        private EndOperationDelegate onEndGetTradeOrdersDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTradeOrdersDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetTradeDetailsDelegate;
        
        private EndOperationDelegate onEndGetTradeDetailsDelegate;
        
        private System.Threading.SendOrPostCallback onGetTradeDetailsCompletedDelegate;
        
        private BeginOperationDelegate onBeginModifyTradeDelegate;
        
        private EndOperationDelegate onEndModifyTradeDelegate;
        
        private System.Threading.SendOrPostCallback onModifyTradeCompletedDelegate;
        
        private BeginOperationDelegate onBeginNewTradeDelegate;
        
        private EndOperationDelegate onEndNewTradeDelegate;
        
        private System.Threading.SendOrPostCallback onNewTradeCompletedDelegate;
        
        private BeginOperationDelegate onBeginSettleTradeDelegate;
        
        private EndOperationDelegate onEndSettleTradeDelegate;
        
        private System.Threading.SendOrPostCallback onSettleTradeCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetMapOrdersDelegate;
        
        private EndOperationDelegate onEndGetMapOrdersDelegate;
        
        private System.Threading.SendOrPostCallback onGetMapOrdersCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAccountIDsByAccountTypeDelegate;
        
        private EndOperationDelegate onEndGetAccountIDsByAccountTypeDelegate;
        
        private System.Threading.SendOrPostCallback onGetAccountIDsByAccountTypeCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleTGAccountConnetionSettingsDelegate;
        
        private EndOperationDelegate onEndHandleTGAccountConnetionSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onHandleTGAccountConnetionSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleVirtualDealerDelegate;
        
        private EndOperationDelegate onEndHandleVirtualDealerDelegate;
        
        private System.Threading.SendOrPostCallback onHandleVirtualDealerCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleCommonSettingsDelegate;
        
        private EndOperationDelegate onEndHandleCommonSettingsDelegate;
        
        private System.Threading.SendOrPostCallback onHandleCommonSettingsCompletedDelegate;
        
        private BeginOperationDelegate onBeginHandleInstClosingPriceDelegate;
        
        private EndOperationDelegate onEndHandleInstClosingPriceDelegate;
        
        private System.Threading.SendOrPostCallback onHandleInstClosingPriceCompletedDelegate;
        
        public BOEngineServiceClient() {
        }
        
        public BOEngineServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BOEngineServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BOEngineServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BOEngineServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<AuthenticateLoginCompletedEventArgs> AuthenticateLoginCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> LogOutCompleted;
        
        public event System.EventHandler<HandleBrokerOperationsLogCompletedEventArgs> HandleBrokerOperationsLogCompleted;
        
        public event System.EventHandler<GetHistoricalDataCompletedEventArgs> GetHistoricalDataCompleted;
        
        public event System.EventHandler<HandleIPAccessListCompletedEventArgs> HandleIPAccessListCompleted;
        
        public event System.EventHandler<HandleFeeMasterCompletedEventArgs> HandleFeeMasterCompleted;
        
        public event System.EventHandler<HandleTaxMasterCompletedEventArgs> HandleTaxMasterCompleted;
        
        public event System.EventHandler<HandleHolidayCompletedEventArgs> HandleHolidayCompleted;
        
        public event System.EventHandler<HandleContractSpecficationCompletedEventArgs> HandleContractSpecficationCompleted;
        
        public event System.EventHandler<HandleContractSessionCompletedEventArgs> HandleContractSessionCompleted;
        
        public event System.EventHandler<GetMasterInfoCompletedEventArgs> GetMasterInfoCompleted;
        
        public event System.EventHandler<GetLeverageListCompletedEventArgs> GetLeverageListCompleted;
        
        public event System.EventHandler<GetModulesCompletedEventArgs> GetModulesCompleted;
        
        public event System.EventHandler<GetParticipaintListCompletedEventArgs> GetParticipaintListCompleted;
        
        public event System.EventHandler<GetSecurityTypeCompletedEventArgs> GetSecurityTypeCompleted;
        
        public event System.EventHandler<GetCurrencyListCompletedEventArgs> GetCurrencyListCompleted;
        
        public event System.EventHandler<GetBrokerListCompletedEventArgs> GetBrokerListCompleted;
        
        public event System.EventHandler<GetCountryDetailsCompletedEventArgs> GetCountryDetailsCompleted;
        
        public event System.EventHandler<GetAccountGroupCompletedEventArgs> GetAccountGroupCompleted;
        
        public event System.EventHandler<HandleTimeSettingsCompletedEventArgs> HandleTimeSettingsCompleted;
        
        public event System.EventHandler<HandleTradingGatewayCompletedEventArgs> HandleTradingGatewayCompleted;
        
        public event System.EventHandler<HandleBrokersCompletedEventArgs> HandleBrokersCompleted;
        
        public event System.EventHandler<GetCollateralTypesCompletedEventArgs> GetCollateralTypesCompleted;
        
        public event System.EventHandler<GetClientInfoCompletedEventArgs> GetClientInfoCompleted;
        
        public event System.EventHandler<InsertIntoClientInfoCompletedEventArgs> InsertIntoClientInfoCompleted;
        
        public event System.EventHandler<UpdateClientInfoCompletedEventArgs> UpdateClientInfoCompleted;
        
        public event System.EventHandler<AuthenticateClientIDCompletedEventArgs> AuthenticateClientIDCompleted;
        
        public event System.EventHandler<GetBankInfoCompletedEventArgs> GetBankInfoCompleted;
        
        public event System.EventHandler<InsertIntoBankInfoCompletedEventArgs> InsertIntoBankInfoCompleted;
        
        public event System.EventHandler<UpdateBankInfoCompletedEventArgs> UpdateBankInfoCompleted;
        
        public event System.EventHandler<GetAccountsCompletedEventArgs> GetAccountsCompleted;
        
        public event System.EventHandler<InsertIntoAccountCompletedEventArgs> InsertIntoAccountCompleted;
        
        public event System.EventHandler<UpdateAccountCompletedEventArgs> UpdateAccountCompleted;
        
        public event System.EventHandler<GetCollateralInfoCompletedEventArgs> GetCollateralInfoCompleted;
        
        public event System.EventHandler<HandleCollateralTransInfoCompletedEventArgs> HandleCollateralTransInfoCompleted;
        
        public event System.EventHandler<GetCollateralTransactionHistoryCompletedEventArgs> GetCollateralTransactionHistoryCompleted;
        
        public event System.EventHandler<GetTradeOrdersDetailsCompletedEventArgs> GetTradeOrdersDetailsCompleted;
        
        public event System.EventHandler<GetTradeDetailsCompletedEventArgs> GetTradeDetailsCompleted;
        
        public event System.EventHandler<ModifyTradeCompletedEventArgs> ModifyTradeCompleted;
        
        public event System.EventHandler<NewTradeCompletedEventArgs> NewTradeCompleted;
        
        public event System.EventHandler<SettleTradeCompletedEventArgs> SettleTradeCompleted;
        
        public event System.EventHandler<GetMapOrdersCompletedEventArgs> GetMapOrdersCompleted;
        
        public event System.EventHandler<GetAccountIDsByAccountTypeCompletedEventArgs> GetAccountIDsByAccountTypeCompleted;
        
        public event System.EventHandler<HandleTGAccountConnetionSettingsCompletedEventArgs> HandleTGAccountConnetionSettingsCompleted;
        
        public event System.EventHandler<HandleVirtualDealerCompletedEventArgs> HandleVirtualDealerCompleted;
        
        public event System.EventHandler<HandleCommonSettingsCompletedEventArgs> HandleCommonSettingsCompleted;
        
        public event System.EventHandler<HandleInstClosingPriceCompletedEventArgs> HandleInstClosingPriceCompleted;
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsLogin AuthenticateLogin(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress) {
            return base.Channel.AuthenticateLogin(LoginPwd, login, ipAddress);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateLogin(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateLogin(LoginPwd, login, ipAddress, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsLogin EndAuthenticateLogin(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateLogin(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LoginPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsLogin login = ((BOADMIN_NEW.BOEngineServiceTCP.clsLogin)(inValues[1]));
            string ipAddress = ((string)(inValues[2]));
            return this.BeginAuthenticateLogin(LoginPwd, login, ipAddress, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateLogin(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsLogin retVal = this.EndAuthenticateLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateLoginCompleted(object state) {
            if ((this.AuthenticateLoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateLoginCompleted(this, new AuthenticateLoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateLoginAsync(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress) {
            this.AuthenticateLoginAsync(LoginPwd, login, ipAddress, null);
        }
        
        public void AuthenticateLoginAsync(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsLogin login, string ipAddress, object userState) {
            if ((this.onBeginAuthenticateLoginDelegate == null)) {
                this.onBeginAuthenticateLoginDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateLogin);
            }
            if ((this.onEndAuthenticateLoginDelegate == null)) {
                this.onEndAuthenticateLoginDelegate = new EndOperationDelegate(this.OnEndAuthenticateLogin);
            }
            if ((this.onAuthenticateLoginCompletedDelegate == null)) {
                this.onAuthenticateLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateLoginCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateLoginDelegate, new object[] {
                        LoginPwd,
                        login,
                        ipAddress}, this.onEndAuthenticateLoginDelegate, this.onAuthenticateLoginCompletedDelegate, userState);
        }
        
        public void LogOut(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations) {
            base.Channel.LogOut(LoginID, brokerOperations);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogOut(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogOut(LoginID, brokerOperations, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndLogOut(System.IAsyncResult result) {
            base.Channel.EndLogOut(result);
        }
        
        private System.IAsyncResult OnBeginLogOut(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LoginID = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations = ((BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog)(inValues[1]));
            return this.BeginLogOut(LoginID, brokerOperations, callback, asyncState);
        }
        
        private object[] OnEndLogOut(System.IAsyncResult result) {
            this.EndLogOut(result);
            return null;
        }
        
        private void OnLogOutCompleted(object state) {
            if ((this.LogOutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogOutCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogOutAsync(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations) {
            this.LogOutAsync(LoginID, brokerOperations, null);
        }
        
        public void LogOutAsync(string LoginID, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, object userState) {
            if ((this.onBeginLogOutDelegate == null)) {
                this.onBeginLogOutDelegate = new BeginOperationDelegate(this.OnBeginLogOut);
            }
            if ((this.onEndLogOutDelegate == null)) {
                this.onEndLogOutDelegate = new EndOperationDelegate(this.OnEndLogOut);
            }
            if ((this.onLogOutCompletedDelegate == null)) {
                this.onLogOutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogOutCompleted);
            }
            base.InvokeAsync(this.onBeginLogOutDelegate, new object[] {
                        LoginID,
                        brokerOperations}, this.onEndLogOutDelegate, this.onLogOutCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] HandleBrokerOperationsLog(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes) {
            return base.Channel.HandleBrokerOperationsLog(LoginPwd, brokerOperations, fromDate, ToDate, opTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleBrokerOperationsLog(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleBrokerOperationsLog(LoginPwd, brokerOperations, fromDate, ToDate, opTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] EndHandleBrokerOperationsLog(System.IAsyncResult result) {
            return base.Channel.EndHandleBrokerOperationsLog(result);
        }
        
        private System.IAsyncResult OnBeginHandleBrokerOperationsLog(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LoginPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations = ((BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog)(inValues[1]));
            System.DateTime fromDate = ((System.DateTime)(inValues[2]));
            System.DateTime ToDate = ((System.DateTime)(inValues[3]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[4]));
            return this.BeginHandleBrokerOperationsLog(LoginPwd, brokerOperations, fromDate, ToDate, opTypes, callback, asyncState);
        }
        
        private object[] OnEndHandleBrokerOperationsLog(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog[] retVal = this.EndHandleBrokerOperationsLog(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleBrokerOperationsLogCompleted(object state) {
            if ((this.HandleBrokerOperationsLogCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleBrokerOperationsLogCompleted(this, new HandleBrokerOperationsLogCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleBrokerOperationsLogAsync(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes) {
            this.HandleBrokerOperationsLogAsync(LoginPwd, brokerOperations, fromDate, ToDate, opTypes, null);
        }
        
        public void HandleBrokerOperationsLogAsync(string LoginPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBrokerOperationsLog brokerOperations, System.DateTime fromDate, System.DateTime ToDate, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, object userState) {
            if ((this.onBeginHandleBrokerOperationsLogDelegate == null)) {
                this.onBeginHandleBrokerOperationsLogDelegate = new BeginOperationDelegate(this.OnBeginHandleBrokerOperationsLog);
            }
            if ((this.onEndHandleBrokerOperationsLogDelegate == null)) {
                this.onEndHandleBrokerOperationsLogDelegate = new EndOperationDelegate(this.OnEndHandleBrokerOperationsLog);
            }
            if ((this.onHandleBrokerOperationsLogCompletedDelegate == null)) {
                this.onHandleBrokerOperationsLogCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleBrokerOperationsLogCompleted);
            }
            base.InvokeAsync(this.onBeginHandleBrokerOperationsLogDelegate, new object[] {
                        LoginPwd,
                        brokerOperations,
                        fromDate,
                        ToDate,
                        opTypes}, this.onEndHandleBrokerOperationsLogDelegate, this.onHandleBrokerOperationsLogCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] GetHistoricalData(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes) {
            return base.Channel.GetHistoricalData(LoginPwd, symbolName, periodicity, barsNo, historicalInfo, opTypes);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetHistoricalData(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetHistoricalData(LoginPwd, symbolName, periodicity, barsNo, historicalInfo, opTypes, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] EndGetHistoricalData(System.IAsyncResult result) {
            return base.Channel.EndGetHistoricalData(result);
        }
        
        private System.IAsyncResult OnBeginGetHistoricalData(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string LoginPwd = ((string)(inValues[0]));
            string symbolName = ((string)(inValues[1]));
            string periodicity = ((string)(inValues[2]));
            int barsNo = ((int)(inValues[3]));
            BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo = ((BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData)(inValues[4]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[5]));
            return this.BeginGetHistoricalData(LoginPwd, symbolName, periodicity, barsNo, historicalInfo, opTypes, callback, asyncState);
        }
        
        private object[] OnEndGetHistoricalData(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData[] retVal = this.EndGetHistoricalData(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetHistoricalDataCompleted(object state) {
            if ((this.GetHistoricalDataCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetHistoricalDataCompleted(this, new GetHistoricalDataCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetHistoricalDataAsync(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes) {
            this.GetHistoricalDataAsync(LoginPwd, symbolName, periodicity, barsNo, historicalInfo, opTypes, null);
        }
        
        public void GetHistoricalDataAsync(string LoginPwd, string symbolName, string periodicity, int barsNo, BOADMIN_NEW.BOEngineServiceTCP.clsHistoricalData historicalInfo, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opTypes, object userState) {
            if ((this.onBeginGetHistoricalDataDelegate == null)) {
                this.onBeginGetHistoricalDataDelegate = new BeginOperationDelegate(this.OnBeginGetHistoricalData);
            }
            if ((this.onEndGetHistoricalDataDelegate == null)) {
                this.onEndGetHistoricalDataDelegate = new EndOperationDelegate(this.OnEndGetHistoricalData);
            }
            if ((this.onGetHistoricalDataCompletedDelegate == null)) {
                this.onGetHistoricalDataCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetHistoricalDataCompleted);
            }
            base.InvokeAsync(this.onBeginGetHistoricalDataDelegate, new object[] {
                        LoginPwd,
                        symbolName,
                        periodicity,
                        barsNo,
                        historicalInfo,
                        opTypes}, this.onEndGetHistoricalDataDelegate, this.onGetHistoricalDataCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] HandleIPAccessList(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess) {
            return base.Channel.HandleIPAccessList(userId, opType, ipAccess);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleIPAccessList(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleIPAccessList(userId, opType, ipAccess, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] EndHandleIPAccessList(System.IAsyncResult result) {
            return base.Channel.EndHandleIPAccessList(result);
        }
        
        private System.IAsyncResult OnBeginHandleIPAccessList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess = ((BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList)(inValues[2]));
            return this.BeginHandleIPAccessList(userId, opType, ipAccess, callback, asyncState);
        }
        
        private object[] OnEndHandleIPAccessList(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList[] retVal = this.EndHandleIPAccessList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleIPAccessListCompleted(object state) {
            if ((this.HandleIPAccessListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleIPAccessListCompleted(this, new HandleIPAccessListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleIPAccessListAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess) {
            this.HandleIPAccessListAsync(userId, opType, ipAccess, null);
        }
        
        public void HandleIPAccessListAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsIPAccessList ipAccess, object userState) {
            if ((this.onBeginHandleIPAccessListDelegate == null)) {
                this.onBeginHandleIPAccessListDelegate = new BeginOperationDelegate(this.OnBeginHandleIPAccessList);
            }
            if ((this.onEndHandleIPAccessListDelegate == null)) {
                this.onEndHandleIPAccessListDelegate = new EndOperationDelegate(this.OnEndHandleIPAccessList);
            }
            if ((this.onHandleIPAccessListCompletedDelegate == null)) {
                this.onHandleIPAccessListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleIPAccessListCompleted);
            }
            base.InvokeAsync(this.onBeginHandleIPAccessListDelegate, new object[] {
                        userId,
                        opType,
                        ipAccess}, this.onEndHandleIPAccessListDelegate, this.onHandleIPAccessListCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] HandleFeeMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue) {
            return base.Channel.HandleFeeMaster(userId, opType, feeValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleFeeMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleFeeMaster(userId, opType, feeValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] EndHandleFeeMaster(System.IAsyncResult result) {
            return base.Channel.EndHandleFeeMaster(result);
        }
        
        private System.IAsyncResult OnBeginHandleFeeMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue = ((BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster)(inValues[2]));
            return this.BeginHandleFeeMaster(userId, opType, feeValue, callback, asyncState);
        }
        
        private object[] OnEndHandleFeeMaster(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster[] retVal = this.EndHandleFeeMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleFeeMasterCompleted(object state) {
            if ((this.HandleFeeMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleFeeMasterCompleted(this, new HandleFeeMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleFeeMasterAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue) {
            this.HandleFeeMasterAsync(userId, opType, feeValue, null);
        }
        
        public void HandleFeeMasterAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsFeeMaster feeValue, object userState) {
            if ((this.onBeginHandleFeeMasterDelegate == null)) {
                this.onBeginHandleFeeMasterDelegate = new BeginOperationDelegate(this.OnBeginHandleFeeMaster);
            }
            if ((this.onEndHandleFeeMasterDelegate == null)) {
                this.onEndHandleFeeMasterDelegate = new EndOperationDelegate(this.OnEndHandleFeeMaster);
            }
            if ((this.onHandleFeeMasterCompletedDelegate == null)) {
                this.onHandleFeeMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleFeeMasterCompleted);
            }
            base.InvokeAsync(this.onBeginHandleFeeMasterDelegate, new object[] {
                        userId,
                        opType,
                        feeValue}, this.onEndHandleFeeMasterDelegate, this.onHandleFeeMasterCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] HandleTaxMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue) {
            return base.Channel.HandleTaxMaster(userId, opType, taxValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleTaxMaster(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleTaxMaster(userId, opType, taxValue, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] EndHandleTaxMaster(System.IAsyncResult result) {
            return base.Channel.EndHandleTaxMaster(result);
        }
        
        private System.IAsyncResult OnBeginHandleTaxMaster(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue = ((BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster)(inValues[2]));
            return this.BeginHandleTaxMaster(userId, opType, taxValue, callback, asyncState);
        }
        
        private object[] OnEndHandleTaxMaster(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster[] retVal = this.EndHandleTaxMaster(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleTaxMasterCompleted(object state) {
            if ((this.HandleTaxMasterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleTaxMasterCompleted(this, new HandleTaxMasterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleTaxMasterAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue) {
            this.HandleTaxMasterAsync(userId, opType, taxValue, null);
        }
        
        public void HandleTaxMasterAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTaxMaster taxValue, object userState) {
            if ((this.onBeginHandleTaxMasterDelegate == null)) {
                this.onBeginHandleTaxMasterDelegate = new BeginOperationDelegate(this.OnBeginHandleTaxMaster);
            }
            if ((this.onEndHandleTaxMasterDelegate == null)) {
                this.onEndHandleTaxMasterDelegate = new EndOperationDelegate(this.OnEndHandleTaxMaster);
            }
            if ((this.onHandleTaxMasterCompletedDelegate == null)) {
                this.onHandleTaxMasterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleTaxMasterCompleted);
            }
            base.InvokeAsync(this.onBeginHandleTaxMasterDelegate, new object[] {
                        userId,
                        opType,
                        taxValue}, this.onEndHandleTaxMasterDelegate, this.onHandleTaxMasterCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] HandleHoliday(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday) {
            return base.Channel.HandleHoliday(userId, opType, holiday);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleHoliday(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleHoliday(userId, opType, holiday, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] EndHandleHoliday(System.IAsyncResult result) {
            return base.Channel.EndHandleHoliday(result);
        }
        
        private System.IAsyncResult OnBeginHandleHoliday(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday = ((BOADMIN_NEW.BOEngineServiceTCP.clsHoliday)(inValues[2]));
            return this.BeginHandleHoliday(userId, opType, holiday, callback, asyncState);
        }
        
        private object[] OnEndHandleHoliday(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsHoliday[] retVal = this.EndHandleHoliday(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleHolidayCompleted(object state) {
            if ((this.HandleHolidayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleHolidayCompleted(this, new HandleHolidayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleHolidayAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday) {
            this.HandleHolidayAsync(userId, opType, holiday, null);
        }
        
        public void HandleHolidayAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsHoliday holiday, object userState) {
            if ((this.onBeginHandleHolidayDelegate == null)) {
                this.onBeginHandleHolidayDelegate = new BeginOperationDelegate(this.OnBeginHandleHoliday);
            }
            if ((this.onEndHandleHolidayDelegate == null)) {
                this.onEndHandleHolidayDelegate = new EndOperationDelegate(this.OnEndHandleHoliday);
            }
            if ((this.onHandleHolidayCompletedDelegate == null)) {
                this.onHandleHolidayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleHolidayCompleted);
            }
            base.InvokeAsync(this.onBeginHandleHolidayDelegate, new object[] {
                        userId,
                        opType,
                        holiday}, this.onEndHandleHolidayDelegate, this.onHandleHolidayCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] HandleContractSpecfication(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo) {
            return base.Channel.HandleContractSpecfication(userId, opType, csInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleContractSpecfication(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleContractSpecfication(userId, opType, csInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] EndHandleContractSpecfication(System.IAsyncResult result) {
            return base.Channel.EndHandleContractSpecfication(result);
        }
        
        private System.IAsyncResult OnBeginHandleContractSpecfication(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo = ((BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification)(inValues[2]));
            return this.BeginHandleContractSpecfication(userId, opType, csInfo, callback, asyncState);
        }
        
        private object[] OnEndHandleContractSpecfication(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification[] retVal = this.EndHandleContractSpecfication(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleContractSpecficationCompleted(object state) {
            if ((this.HandleContractSpecficationCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleContractSpecficationCompleted(this, new HandleContractSpecficationCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleContractSpecficationAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo) {
            this.HandleContractSpecficationAsync(userId, opType, csInfo, null);
        }
        
        public void HandleContractSpecficationAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsContractSpecification csInfo, object userState) {
            if ((this.onBeginHandleContractSpecficationDelegate == null)) {
                this.onBeginHandleContractSpecficationDelegate = new BeginOperationDelegate(this.OnBeginHandleContractSpecfication);
            }
            if ((this.onEndHandleContractSpecficationDelegate == null)) {
                this.onEndHandleContractSpecficationDelegate = new EndOperationDelegate(this.OnEndHandleContractSpecfication);
            }
            if ((this.onHandleContractSpecficationCompletedDelegate == null)) {
                this.onHandleContractSpecficationCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleContractSpecficationCompleted);
            }
            base.InvokeAsync(this.onBeginHandleContractSpecficationDelegate, new object[] {
                        userId,
                        opType,
                        csInfo}, this.onEndHandleContractSpecficationDelegate, this.onHandleContractSpecficationCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] HandleContractSession(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds) {
            return base.Channel.HandleContractSession(userId, opType, instrumentIds);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleContractSession(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleContractSession(userId, opType, instrumentIds, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] EndHandleContractSession(System.IAsyncResult result) {
            return base.Channel.EndHandleContractSession(result);
        }
        
        private System.IAsyncResult OnBeginHandleContractSession(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            int[] instrumentIds = ((int[])(inValues[2]));
            return this.BeginHandleContractSession(userId, opType, instrumentIds, callback, asyncState);
        }
        
        private object[] OnEndHandleContractSession(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsSymbolSessionNew[] retVal = this.EndHandleContractSession(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleContractSessionCompleted(object state) {
            if ((this.HandleContractSessionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleContractSessionCompleted(this, new HandleContractSessionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleContractSessionAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds) {
            this.HandleContractSessionAsync(userId, opType, instrumentIds, null);
        }
        
        public void HandleContractSessionAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, int[] instrumentIds, object userState) {
            if ((this.onBeginHandleContractSessionDelegate == null)) {
                this.onBeginHandleContractSessionDelegate = new BeginOperationDelegate(this.OnBeginHandleContractSession);
            }
            if ((this.onEndHandleContractSessionDelegate == null)) {
                this.onEndHandleContractSessionDelegate = new EndOperationDelegate(this.OnEndHandleContractSession);
            }
            if ((this.onHandleContractSessionCompletedDelegate == null)) {
                this.onHandleContractSessionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleContractSessionCompleted);
            }
            base.InvokeAsync(this.onBeginHandleContractSessionDelegate, new object[] {
                        userId,
                        opType,
                        instrumentIds}, this.onEndHandleContractSessionDelegate, this.onHandleContractSessionCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo GetMasterInfo(string userId) {
            return base.Channel.GetMasterInfo(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMasterInfo(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMasterInfo(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo EndGetMasterInfo(System.IAsyncResult result) {
            return base.Channel.EndGetMasterInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetMasterInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return this.BeginGetMasterInfo(userId, callback, asyncState);
        }
        
        private object[] OnEndGetMasterInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsMasterInfo retVal = this.EndGetMasterInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMasterInfoCompleted(object state) {
            if ((this.GetMasterInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMasterInfoCompleted(this, new GetMasterInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMasterInfoAsync(string userId) {
            this.GetMasterInfoAsync(userId, null);
        }
        
        public void GetMasterInfoAsync(string userId, object userState) {
            if ((this.onBeginGetMasterInfoDelegate == null)) {
                this.onBeginGetMasterInfoDelegate = new BeginOperationDelegate(this.OnBeginGetMasterInfo);
            }
            if ((this.onEndGetMasterInfoDelegate == null)) {
                this.onEndGetMasterInfoDelegate = new EndOperationDelegate(this.OnEndGetMasterInfo);
            }
            if ((this.onGetMasterInfoCompletedDelegate == null)) {
                this.onGetMasterInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMasterInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetMasterInfoDelegate, new object[] {
                        userId}, this.onEndGetMasterInfoDelegate, this.onGetMasterInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] GetLeverageList(string userIdPwd) {
            return base.Channel.GetLeverageList(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetLeverageList(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetLeverageList(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] EndGetLeverageList(System.IAsyncResult result) {
            return base.Channel.EndGetLeverageList(result);
        }
        
        private System.IAsyncResult OnBeginGetLeverageList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetLeverageList(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetLeverageList(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsLeverage[] retVal = this.EndGetLeverageList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetLeverageListCompleted(object state) {
            if ((this.GetLeverageListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetLeverageListCompleted(this, new GetLeverageListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetLeverageListAsync(string userIdPwd) {
            this.GetLeverageListAsync(userIdPwd, null);
        }
        
        public void GetLeverageListAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetLeverageListDelegate == null)) {
                this.onBeginGetLeverageListDelegate = new BeginOperationDelegate(this.OnBeginGetLeverageList);
            }
            if ((this.onEndGetLeverageListDelegate == null)) {
                this.onEndGetLeverageListDelegate = new EndOperationDelegate(this.OnEndGetLeverageList);
            }
            if ((this.onGetLeverageListCompletedDelegate == null)) {
                this.onGetLeverageListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetLeverageListCompleted);
            }
            base.InvokeAsync(this.onBeginGetLeverageListDelegate, new object[] {
                        userIdPwd}, this.onEndGetLeverageListDelegate, this.onGetLeverageListCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsModule[] GetModules(string userIdPwd) {
            return base.Channel.GetModules(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetModules(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetModules(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsModule[] EndGetModules(System.IAsyncResult result) {
            return base.Channel.EndGetModules(result);
        }
        
        private System.IAsyncResult OnBeginGetModules(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetModules(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetModules(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsModule[] retVal = this.EndGetModules(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetModulesCompleted(object state) {
            if ((this.GetModulesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetModulesCompleted(this, new GetModulesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetModulesAsync(string userIdPwd) {
            this.GetModulesAsync(userIdPwd, null);
        }
        
        public void GetModulesAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetModulesDelegate == null)) {
                this.onBeginGetModulesDelegate = new BeginOperationDelegate(this.OnBeginGetModules);
            }
            if ((this.onEndGetModulesDelegate == null)) {
                this.onEndGetModulesDelegate = new EndOperationDelegate(this.OnEndGetModules);
            }
            if ((this.onGetModulesCompletedDelegate == null)) {
                this.onGetModulesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetModulesCompleted);
            }
            base.InvokeAsync(this.onBeginGetModulesDelegate, new object[] {
                        userIdPwd}, this.onEndGetModulesDelegate, this.onGetModulesCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] GetParticipaintList(string userIdPwd) {
            return base.Channel.GetParticipaintList(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetParticipaintList(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetParticipaintList(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] EndGetParticipaintList(System.IAsyncResult result) {
            return base.Channel.EndGetParticipaintList(result);
        }
        
        private System.IAsyncResult OnBeginGetParticipaintList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetParticipaintList(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetParticipaintList(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsParticipaintList[] retVal = this.EndGetParticipaintList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetParticipaintListCompleted(object state) {
            if ((this.GetParticipaintListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetParticipaintListCompleted(this, new GetParticipaintListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetParticipaintListAsync(string userIdPwd) {
            this.GetParticipaintListAsync(userIdPwd, null);
        }
        
        public void GetParticipaintListAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetParticipaintListDelegate == null)) {
                this.onBeginGetParticipaintListDelegate = new BeginOperationDelegate(this.OnBeginGetParticipaintList);
            }
            if ((this.onEndGetParticipaintListDelegate == null)) {
                this.onEndGetParticipaintListDelegate = new EndOperationDelegate(this.OnEndGetParticipaintList);
            }
            if ((this.onGetParticipaintListCompletedDelegate == null)) {
                this.onGetParticipaintListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetParticipaintListCompleted);
            }
            base.InvokeAsync(this.onBeginGetParticipaintListDelegate, new object[] {
                        userIdPwd}, this.onEndGetParticipaintListDelegate, this.onGetParticipaintListCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] GetSecurityType(string userId) {
            return base.Channel.GetSecurityType(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetSecurityType(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSecurityType(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] EndGetSecurityType(System.IAsyncResult result) {
            return base.Channel.EndGetSecurityType(result);
        }
        
        private System.IAsyncResult OnBeginGetSecurityType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return this.BeginGetSecurityType(userId, callback, asyncState);
        }
        
        private object[] OnEndGetSecurityType(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsSecurityType[] retVal = this.EndGetSecurityType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSecurityTypeCompleted(object state) {
            if ((this.GetSecurityTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSecurityTypeCompleted(this, new GetSecurityTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSecurityTypeAsync(string userId) {
            this.GetSecurityTypeAsync(userId, null);
        }
        
        public void GetSecurityTypeAsync(string userId, object userState) {
            if ((this.onBeginGetSecurityTypeDelegate == null)) {
                this.onBeginGetSecurityTypeDelegate = new BeginOperationDelegate(this.OnBeginGetSecurityType);
            }
            if ((this.onEndGetSecurityTypeDelegate == null)) {
                this.onEndGetSecurityTypeDelegate = new EndOperationDelegate(this.OnEndGetSecurityType);
            }
            if ((this.onGetSecurityTypeCompletedDelegate == null)) {
                this.onGetSecurityTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSecurityTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetSecurityTypeDelegate, new object[] {
                        userId}, this.onEndGetSecurityTypeDelegate, this.onGetSecurityTypeCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] GetCurrencyList(string userId) {
            return base.Channel.GetCurrencyList(userId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCurrencyList(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCurrencyList(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] EndGetCurrencyList(System.IAsyncResult result) {
            return base.Channel.EndGetCurrencyList(result);
        }
        
        private System.IAsyncResult OnBeginGetCurrencyList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return this.BeginGetCurrencyList(userId, callback, asyncState);
        }
        
        private object[] OnEndGetCurrencyList(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCurrency[] retVal = this.EndGetCurrencyList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCurrencyListCompleted(object state) {
            if ((this.GetCurrencyListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCurrencyListCompleted(this, new GetCurrencyListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCurrencyListAsync(string userId) {
            this.GetCurrencyListAsync(userId, null);
        }
        
        public void GetCurrencyListAsync(string userId, object userState) {
            if ((this.onBeginGetCurrencyListDelegate == null)) {
                this.onBeginGetCurrencyListDelegate = new BeginOperationDelegate(this.OnBeginGetCurrencyList);
            }
            if ((this.onEndGetCurrencyListDelegate == null)) {
                this.onEndGetCurrencyListDelegate = new EndOperationDelegate(this.OnEndGetCurrencyList);
            }
            if ((this.onGetCurrencyListCompletedDelegate == null)) {
                this.onGetCurrencyListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCurrencyListCompleted);
            }
            base.InvokeAsync(this.onBeginGetCurrencyListDelegate, new object[] {
                        userId}, this.onEndGetCurrencyListDelegate, this.onGetCurrencyListCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] GetBrokerList(string userIdPwd) {
            return base.Channel.GetBrokerList(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBrokerList(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrokerList(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] EndGetBrokerList(System.IAsyncResult result) {
            return base.Channel.EndGetBrokerList(result);
        }
        
        private System.IAsyncResult OnBeginGetBrokerList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetBrokerList(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetBrokerList(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBrokerList[] retVal = this.EndGetBrokerList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBrokerListCompleted(object state) {
            if ((this.GetBrokerListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrokerListCompleted(this, new GetBrokerListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrokerListAsync(string userIdPwd) {
            this.GetBrokerListAsync(userIdPwd, null);
        }
        
        public void GetBrokerListAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetBrokerListDelegate == null)) {
                this.onBeginGetBrokerListDelegate = new BeginOperationDelegate(this.OnBeginGetBrokerList);
            }
            if ((this.onEndGetBrokerListDelegate == null)) {
                this.onEndGetBrokerListDelegate = new EndOperationDelegate(this.OnEndGetBrokerList);
            }
            if ((this.onGetBrokerListCompletedDelegate == null)) {
                this.onGetBrokerListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrokerListCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrokerListDelegate, new object[] {
                        userIdPwd}, this.onEndGetBrokerListDelegate, this.onGetBrokerListCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] GetCountryDetails(string userIdPwd) {
            return base.Channel.GetCountryDetails(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCountryDetails(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCountryDetails(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] EndGetCountryDetails(System.IAsyncResult result) {
            return base.Channel.EndGetCountryDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetCountryDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetCountryDetails(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetCountryDetails(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCountryDetail[] retVal = this.EndGetCountryDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCountryDetailsCompleted(object state) {
            if ((this.GetCountryDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCountryDetailsCompleted(this, new GetCountryDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCountryDetailsAsync(string userIdPwd) {
            this.GetCountryDetailsAsync(userIdPwd, null);
        }
        
        public void GetCountryDetailsAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetCountryDetailsDelegate == null)) {
                this.onBeginGetCountryDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetCountryDetails);
            }
            if ((this.onEndGetCountryDetailsDelegate == null)) {
                this.onEndGetCountryDetailsDelegate = new EndOperationDelegate(this.OnEndGetCountryDetails);
            }
            if ((this.onGetCountryDetailsCompletedDelegate == null)) {
                this.onGetCountryDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCountryDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetCountryDetailsDelegate, new object[] {
                        userIdPwd}, this.onEndGetCountryDetailsDelegate, this.onGetCountryDetailsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] GetAccountGroup(string userIdPwd) {
            return base.Channel.GetAccountGroup(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccountGroup(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountGroup(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] EndGetAccountGroup(System.IAsyncResult result) {
            return base.Channel.EndGetAccountGroup(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountGroup(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetAccountGroup(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetAccountGroup(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsAccountGroup[] retVal = this.EndGetAccountGroup(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountGroupCompleted(object state) {
            if ((this.GetAccountGroupCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountGroupCompleted(this, new GetAccountGroupCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountGroupAsync(string userIdPwd) {
            this.GetAccountGroupAsync(userIdPwd, null);
        }
        
        public void GetAccountGroupAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetAccountGroupDelegate == null)) {
                this.onBeginGetAccountGroupDelegate = new BeginOperationDelegate(this.OnBeginGetAccountGroup);
            }
            if ((this.onEndGetAccountGroupDelegate == null)) {
                this.onEndGetAccountGroupDelegate = new EndOperationDelegate(this.OnEndGetAccountGroup);
            }
            if ((this.onGetAccountGroupCompletedDelegate == null)) {
                this.onGetAccountGroupCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountGroupCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountGroupDelegate, new object[] {
                        userIdPwd}, this.onEndGetAccountGroupDelegate, this.onGetAccountGroupCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] HandleTimeSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings) {
            return base.Channel.HandleTimeSettings(userIdPwd, opType, timeSettings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleTimeSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleTimeSettings(userIdPwd, opType, timeSettings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] EndHandleTimeSettings(System.IAsyncResult result) {
            return base.Channel.EndHandleTimeSettings(result);
        }
        
        private System.IAsyncResult OnBeginHandleTimeSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings = ((BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings)(inValues[2]));
            return this.BeginHandleTimeSettings(userIdPwd, opType, timeSettings, callback, asyncState);
        }
        
        private object[] OnEndHandleTimeSettings(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings[] retVal = this.EndHandleTimeSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleTimeSettingsCompleted(object state) {
            if ((this.HandleTimeSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleTimeSettingsCompleted(this, new HandleTimeSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleTimeSettingsAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings) {
            this.HandleTimeSettingsAsync(userIdPwd, opType, timeSettings, null);
        }
        
        public void HandleTimeSettingsAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTimeSettings timeSettings, object userState) {
            if ((this.onBeginHandleTimeSettingsDelegate == null)) {
                this.onBeginHandleTimeSettingsDelegate = new BeginOperationDelegate(this.OnBeginHandleTimeSettings);
            }
            if ((this.onEndHandleTimeSettingsDelegate == null)) {
                this.onEndHandleTimeSettingsDelegate = new EndOperationDelegate(this.OnEndHandleTimeSettings);
            }
            if ((this.onHandleTimeSettingsCompletedDelegate == null)) {
                this.onHandleTimeSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleTimeSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginHandleTimeSettingsDelegate, new object[] {
                        userIdPwd,
                        opType,
                        timeSettings}, this.onEndHandleTimeSettingsDelegate, this.onHandleTimeSettingsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] HandleTradingGateway(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway) {
            return base.Channel.HandleTradingGateway(userIdPwd, opType, tradingGateway);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleTradingGateway(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleTradingGateway(userIdPwd, opType, tradingGateway, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] EndHandleTradingGateway(System.IAsyncResult result) {
            return base.Channel.EndHandleTradingGateway(result);
        }
        
        private System.IAsyncResult OnBeginHandleTradingGateway(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway = ((BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway)(inValues[2]));
            return this.BeginHandleTradingGateway(userIdPwd, opType, tradingGateway, callback, asyncState);
        }
        
        private object[] OnEndHandleTradingGateway(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway[] retVal = this.EndHandleTradingGateway(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleTradingGatewayCompleted(object state) {
            if ((this.HandleTradingGatewayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleTradingGatewayCompleted(this, new HandleTradingGatewayCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleTradingGatewayAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway) {
            this.HandleTradingGatewayAsync(userIdPwd, opType, tradingGateway, null);
        }
        
        public void HandleTradingGatewayAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTradingGateway tradingGateway, object userState) {
            if ((this.onBeginHandleTradingGatewayDelegate == null)) {
                this.onBeginHandleTradingGatewayDelegate = new BeginOperationDelegate(this.OnBeginHandleTradingGateway);
            }
            if ((this.onEndHandleTradingGatewayDelegate == null)) {
                this.onEndHandleTradingGatewayDelegate = new EndOperationDelegate(this.OnEndHandleTradingGateway);
            }
            if ((this.onHandleTradingGatewayCompletedDelegate == null)) {
                this.onHandleTradingGatewayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleTradingGatewayCompleted);
            }
            base.InvokeAsync(this.onBeginHandleTradingGatewayDelegate, new object[] {
                        userIdPwd,
                        opType,
                        tradingGateway}, this.onEndHandleTradingGatewayDelegate, this.onHandleTradingGatewayCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] HandleBrokers(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker) {
            return base.Channel.HandleBrokers(userIdPwd, BrokerId, opType, broker);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleBrokers(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleBrokers(userIdPwd, BrokerId, opType, broker, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] EndHandleBrokers(System.IAsyncResult result) {
            return base.Channel.EndHandleBrokers(result);
        }
        
        private System.IAsyncResult OnBeginHandleBrokers(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int BrokerId = ((int)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[2]));
            BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker = ((BOADMIN_NEW.BOEngineServiceTCP.clsBroker)(inValues[3]));
            return this.BeginHandleBrokers(userIdPwd, BrokerId, opType, broker, callback, asyncState);
        }
        
        private object[] OnEndHandleBrokers(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBroker[] retVal = this.EndHandleBrokers(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleBrokersCompleted(object state) {
            if ((this.HandleBrokersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleBrokersCompleted(this, new HandleBrokersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleBrokersAsync(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker) {
            this.HandleBrokersAsync(userIdPwd, BrokerId, opType, broker, null);
        }
        
        public void HandleBrokersAsync(string userIdPwd, int BrokerId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsBroker broker, object userState) {
            if ((this.onBeginHandleBrokersDelegate == null)) {
                this.onBeginHandleBrokersDelegate = new BeginOperationDelegate(this.OnBeginHandleBrokers);
            }
            if ((this.onEndHandleBrokersDelegate == null)) {
                this.onEndHandleBrokersDelegate = new EndOperationDelegate(this.OnEndHandleBrokers);
            }
            if ((this.onHandleBrokersCompletedDelegate == null)) {
                this.onHandleBrokersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleBrokersCompleted);
            }
            base.InvokeAsync(this.onBeginHandleBrokersDelegate, new object[] {
                        userIdPwd,
                        BrokerId,
                        opType,
                        broker}, this.onEndHandleBrokersDelegate, this.onHandleBrokersCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] GetCollateralTypes(string userIdPwd) {
            return base.Channel.GetCollateralTypes(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCollateralTypes(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCollateralTypes(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] EndGetCollateralTypes(System.IAsyncResult result) {
            return base.Channel.EndGetCollateralTypes(result);
        }
        
        private System.IAsyncResult OnBeginGetCollateralTypes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetCollateralTypes(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetCollateralTypes(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTypes[] retVal = this.EndGetCollateralTypes(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCollateralTypesCompleted(object state) {
            if ((this.GetCollateralTypesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCollateralTypesCompleted(this, new GetCollateralTypesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCollateralTypesAsync(string userIdPwd) {
            this.GetCollateralTypesAsync(userIdPwd, null);
        }
        
        public void GetCollateralTypesAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetCollateralTypesDelegate == null)) {
                this.onBeginGetCollateralTypesDelegate = new BeginOperationDelegate(this.OnBeginGetCollateralTypes);
            }
            if ((this.onEndGetCollateralTypesDelegate == null)) {
                this.onEndGetCollateralTypesDelegate = new EndOperationDelegate(this.OnEndGetCollateralTypes);
            }
            if ((this.onGetCollateralTypesCompletedDelegate == null)) {
                this.onGetCollateralTypesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCollateralTypesCompleted);
            }
            base.InvokeAsync(this.onBeginGetCollateralTypesDelegate, new object[] {
                        userIdPwd}, this.onEndGetCollateralTypesDelegate, this.onGetCollateralTypesCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] GetClientInfo(string userIdPwd) {
            return base.Channel.GetClientInfo(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetClientInfo(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetClientInfo(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] EndGetClientInfo(System.IAsyncResult result) {
            return base.Channel.EndGetClientInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetClientInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetClientInfo(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetClientInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo[] retVal = this.EndGetClientInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetClientInfoCompleted(object state) {
            if ((this.GetClientInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetClientInfoCompleted(this, new GetClientInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetClientInfoAsync(string userIdPwd) {
            this.GetClientInfoAsync(userIdPwd, null);
        }
        
        public void GetClientInfoAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetClientInfoDelegate == null)) {
                this.onBeginGetClientInfoDelegate = new BeginOperationDelegate(this.OnBeginGetClientInfo);
            }
            if ((this.onEndGetClientInfoDelegate == null)) {
                this.onEndGetClientInfoDelegate = new EndOperationDelegate(this.OnEndGetClientInfo);
            }
            if ((this.onGetClientInfoCompletedDelegate == null)) {
                this.onGetClientInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetClientInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetClientInfoDelegate, new object[] {
                        userIdPwd}, this.onEndGetClientInfoDelegate, this.onGetClientInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo InsertIntoClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo) {
            return base.Channel.InsertIntoClientInfo(userIdPwd, clientInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertIntoClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertIntoClientInfo(userIdPwd, clientInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo EndInsertIntoClientInfo(System.IAsyncResult result) {
            return base.Channel.EndInsertIntoClientInfo(result);
        }
        
        private System.IAsyncResult OnBeginInsertIntoClientInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo = ((BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo)(inValues[1]));
            return this.BeginInsertIntoClientInfo(userIdPwd, clientInfo, callback, asyncState);
        }
        
        private object[] OnEndInsertIntoClientInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo retVal = this.EndInsertIntoClientInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertIntoClientInfoCompleted(object state) {
            if ((this.InsertIntoClientInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertIntoClientInfoCompleted(this, new InsertIntoClientInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertIntoClientInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo) {
            this.InsertIntoClientInfoAsync(userIdPwd, clientInfo, null);
        }
        
        public void InsertIntoClientInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, object userState) {
            if ((this.onBeginInsertIntoClientInfoDelegate == null)) {
                this.onBeginInsertIntoClientInfoDelegate = new BeginOperationDelegate(this.OnBeginInsertIntoClientInfo);
            }
            if ((this.onEndInsertIntoClientInfoDelegate == null)) {
                this.onEndInsertIntoClientInfoDelegate = new EndOperationDelegate(this.OnEndInsertIntoClientInfo);
            }
            if ((this.onInsertIntoClientInfoCompletedDelegate == null)) {
                this.onInsertIntoClientInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertIntoClientInfoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertIntoClientInfoDelegate, new object[] {
                        userIdPwd,
                        clientInfo}, this.onEndInsertIntoClientInfoDelegate, this.onInsertIntoClientInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo UpdateClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo) {
            return base.Channel.UpdateClientInfo(userIdPwd, clientInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateClientInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateClientInfo(userIdPwd, clientInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo EndUpdateClientInfo(System.IAsyncResult result) {
            return base.Channel.EndUpdateClientInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateClientInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo = ((BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo)(inValues[1]));
            return this.BeginUpdateClientInfo(userIdPwd, clientInfo, callback, asyncState);
        }
        
        private object[] OnEndUpdateClientInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo retVal = this.EndUpdateClientInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateClientInfoCompleted(object state) {
            if ((this.UpdateClientInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateClientInfoCompleted(this, new UpdateClientInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateClientInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo) {
            this.UpdateClientInfoAsync(userIdPwd, clientInfo, null);
        }
        
        public void UpdateClientInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsClientInfo clientInfo, object userState) {
            if ((this.onBeginUpdateClientInfoDelegate == null)) {
                this.onBeginUpdateClientInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateClientInfo);
            }
            if ((this.onEndUpdateClientInfoDelegate == null)) {
                this.onEndUpdateClientInfoDelegate = new EndOperationDelegate(this.OnEndUpdateClientInfo);
            }
            if ((this.onUpdateClientInfoCompletedDelegate == null)) {
                this.onUpdateClientInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateClientInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateClientInfoDelegate, new object[] {
                        userIdPwd,
                        clientInfo}, this.onEndUpdateClientInfoDelegate, this.onUpdateClientInfoCompletedDelegate, userState);
        }
        
        public bool AuthenticateClientID(string userIdPwd, string clientID) {
            return base.Channel.AuthenticateClientID(userIdPwd, clientID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginAuthenticateClientID(string userIdPwd, string clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAuthenticateClientID(userIdPwd, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndAuthenticateClientID(System.IAsyncResult result) {
            return base.Channel.EndAuthenticateClientID(result);
        }
        
        private System.IAsyncResult OnBeginAuthenticateClientID(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            string clientID = ((string)(inValues[1]));
            return this.BeginAuthenticateClientID(userIdPwd, clientID, callback, asyncState);
        }
        
        private object[] OnEndAuthenticateClientID(System.IAsyncResult result) {
            bool retVal = this.EndAuthenticateClientID(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAuthenticateClientIDCompleted(object state) {
            if ((this.AuthenticateClientIDCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AuthenticateClientIDCompleted(this, new AuthenticateClientIDCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AuthenticateClientIDAsync(string userIdPwd, string clientID) {
            this.AuthenticateClientIDAsync(userIdPwd, clientID, null);
        }
        
        public void AuthenticateClientIDAsync(string userIdPwd, string clientID, object userState) {
            if ((this.onBeginAuthenticateClientIDDelegate == null)) {
                this.onBeginAuthenticateClientIDDelegate = new BeginOperationDelegate(this.OnBeginAuthenticateClientID);
            }
            if ((this.onEndAuthenticateClientIDDelegate == null)) {
                this.onEndAuthenticateClientIDDelegate = new EndOperationDelegate(this.OnEndAuthenticateClientID);
            }
            if ((this.onAuthenticateClientIDCompletedDelegate == null)) {
                this.onAuthenticateClientIDCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAuthenticateClientIDCompleted);
            }
            base.InvokeAsync(this.onBeginAuthenticateClientIDDelegate, new object[] {
                        userIdPwd,
                        clientID}, this.onEndAuthenticateClientIDDelegate, this.onAuthenticateClientIDCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank[] GetBankInfo(string userIdPwd, int clientID) {
            return base.Channel.GetBankInfo(userIdPwd, clientID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBankInfo(string userIdPwd, int clientID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBankInfo(userIdPwd, clientID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank[] EndGetBankInfo(System.IAsyncResult result) {
            return base.Channel.EndGetBankInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetBankInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int clientID = ((int)(inValues[1]));
            return this.BeginGetBankInfo(userIdPwd, clientID, callback, asyncState);
        }
        
        private object[] OnEndGetBankInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBank[] retVal = this.EndGetBankInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetBankInfoCompleted(object state) {
            if ((this.GetBankInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBankInfoCompleted(this, new GetBankInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBankInfoAsync(string userIdPwd, int clientID) {
            this.GetBankInfoAsync(userIdPwd, clientID, null);
        }
        
        public void GetBankInfoAsync(string userIdPwd, int clientID, object userState) {
            if ((this.onBeginGetBankInfoDelegate == null)) {
                this.onBeginGetBankInfoDelegate = new BeginOperationDelegate(this.OnBeginGetBankInfo);
            }
            if ((this.onEndGetBankInfoDelegate == null)) {
                this.onEndGetBankInfoDelegate = new EndOperationDelegate(this.OnEndGetBankInfo);
            }
            if ((this.onGetBankInfoCompletedDelegate == null)) {
                this.onGetBankInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBankInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetBankInfoDelegate, new object[] {
                        userIdPwd,
                        clientID}, this.onEndGetBankInfoDelegate, this.onGetBankInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank InsertIntoBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank) {
            return base.Channel.InsertIntoBankInfo(userIdPwd, bank);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertIntoBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertIntoBankInfo(userIdPwd, bank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank EndInsertIntoBankInfo(System.IAsyncResult result) {
            return base.Channel.EndInsertIntoBankInfo(result);
        }
        
        private System.IAsyncResult OnBeginInsertIntoBankInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsBank bank = ((BOADMIN_NEW.BOEngineServiceTCP.clsBank)(inValues[1]));
            return this.BeginInsertIntoBankInfo(userIdPwd, bank, callback, asyncState);
        }
        
        private object[] OnEndInsertIntoBankInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBank retVal = this.EndInsertIntoBankInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertIntoBankInfoCompleted(object state) {
            if ((this.InsertIntoBankInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertIntoBankInfoCompleted(this, new InsertIntoBankInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertIntoBankInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank) {
            this.InsertIntoBankInfoAsync(userIdPwd, bank, null);
        }
        
        public void InsertIntoBankInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, object userState) {
            if ((this.onBeginInsertIntoBankInfoDelegate == null)) {
                this.onBeginInsertIntoBankInfoDelegate = new BeginOperationDelegate(this.OnBeginInsertIntoBankInfo);
            }
            if ((this.onEndInsertIntoBankInfoDelegate == null)) {
                this.onEndInsertIntoBankInfoDelegate = new EndOperationDelegate(this.OnEndInsertIntoBankInfo);
            }
            if ((this.onInsertIntoBankInfoCompletedDelegate == null)) {
                this.onInsertIntoBankInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertIntoBankInfoCompleted);
            }
            base.InvokeAsync(this.onBeginInsertIntoBankInfoDelegate, new object[] {
                        userIdPwd,
                        bank}, this.onEndInsertIntoBankInfoDelegate, this.onInsertIntoBankInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank UpdateBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank) {
            return base.Channel.UpdateBankInfo(userIdPwd, bank);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateBankInfo(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateBankInfo(userIdPwd, bank, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsBank EndUpdateBankInfo(System.IAsyncResult result) {
            return base.Channel.EndUpdateBankInfo(result);
        }
        
        private System.IAsyncResult OnBeginUpdateBankInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsBank bank = ((BOADMIN_NEW.BOEngineServiceTCP.clsBank)(inValues[1]));
            return this.BeginUpdateBankInfo(userIdPwd, bank, callback, asyncState);
        }
        
        private object[] OnEndUpdateBankInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsBank retVal = this.EndUpdateBankInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateBankInfoCompleted(object state) {
            if ((this.UpdateBankInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateBankInfoCompleted(this, new UpdateBankInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateBankInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank) {
            this.UpdateBankInfoAsync(userIdPwd, bank, null);
        }
        
        public void UpdateBankInfoAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsBank bank, object userState) {
            if ((this.onBeginUpdateBankInfoDelegate == null)) {
                this.onBeginUpdateBankInfoDelegate = new BeginOperationDelegate(this.OnBeginUpdateBankInfo);
            }
            if ((this.onEndUpdateBankInfoDelegate == null)) {
                this.onEndUpdateBankInfoDelegate = new EndOperationDelegate(this.OnEndUpdateBankInfo);
            }
            if ((this.onUpdateBankInfoCompletedDelegate == null)) {
                this.onUpdateBankInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateBankInfoCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateBankInfoDelegate, new object[] {
                        userIdPwd,
                        bank}, this.onEndUpdateBankInfoDelegate, this.onUpdateBankInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] GetAccounts(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType) {
            return base.Channel.GetAccounts(userIdPwd, clientID, opType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccounts(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccounts(userIdPwd, clientID, opType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] EndGetAccounts(System.IAsyncResult result) {
            return base.Channel.EndGetAccounts(result);
        }
        
        private System.IAsyncResult OnBeginGetAccounts(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int clientID = ((int)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType = ((BOADMIN_NEW.BOEngineServiceTCP.AccountOpType)(inValues[2]));
            return this.BeginGetAccounts(userIdPwd, clientID, opType, callback, asyncState);
        }
        
        private object[] OnEndGetAccounts(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsAccount[] retVal = this.EndGetAccounts(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountsCompleted(object state) {
            if ((this.GetAccountsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountsCompleted(this, new GetAccountsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountsAsync(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType) {
            this.GetAccountsAsync(userIdPwd, clientID, opType, null);
        }
        
        public void GetAccountsAsync(string userIdPwd, int clientID, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, object userState) {
            if ((this.onBeginGetAccountsDelegate == null)) {
                this.onBeginGetAccountsDelegate = new BeginOperationDelegate(this.OnBeginGetAccounts);
            }
            if ((this.onEndGetAccountsDelegate == null)) {
                this.onEndGetAccountsDelegate = new EndOperationDelegate(this.OnEndGetAccounts);
            }
            if ((this.onGetAccountsCompletedDelegate == null)) {
                this.onGetAccountsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountsDelegate, new object[] {
                        userIdPwd,
                        clientID,
                        opType}, this.onEndGetAccountsDelegate, this.onGetAccountsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount InsertIntoAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account) {
            return base.Channel.InsertIntoAccount(userIdPwd, account);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInsertIntoAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInsertIntoAccount(userIdPwd, account, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount EndInsertIntoAccount(System.IAsyncResult result) {
            return base.Channel.EndInsertIntoAccount(result);
        }
        
        private System.IAsyncResult OnBeginInsertIntoAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsAccount account = ((BOADMIN_NEW.BOEngineServiceTCP.clsAccount)(inValues[1]));
            return this.BeginInsertIntoAccount(userIdPwd, account, callback, asyncState);
        }
        
        private object[] OnEndInsertIntoAccount(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsAccount retVal = this.EndInsertIntoAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInsertIntoAccountCompleted(object state) {
            if ((this.InsertIntoAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InsertIntoAccountCompleted(this, new InsertIntoAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InsertIntoAccountAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account) {
            this.InsertIntoAccountAsync(userIdPwd, account, null);
        }
        
        public void InsertIntoAccountAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, object userState) {
            if ((this.onBeginInsertIntoAccountDelegate == null)) {
                this.onBeginInsertIntoAccountDelegate = new BeginOperationDelegate(this.OnBeginInsertIntoAccount);
            }
            if ((this.onEndInsertIntoAccountDelegate == null)) {
                this.onEndInsertIntoAccountDelegate = new EndOperationDelegate(this.OnEndInsertIntoAccount);
            }
            if ((this.onInsertIntoAccountCompletedDelegate == null)) {
                this.onInsertIntoAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInsertIntoAccountCompleted);
            }
            base.InvokeAsync(this.onBeginInsertIntoAccountDelegate, new object[] {
                        userIdPwd,
                        account}, this.onEndInsertIntoAccountDelegate, this.onInsertIntoAccountCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount UpdateAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType) {
            return base.Channel.UpdateAccount(userIdPwd, account, opType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdateAccount(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdateAccount(userIdPwd, account, opType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsAccount EndUpdateAccount(System.IAsyncResult result) {
            return base.Channel.EndUpdateAccount(result);
        }
        
        private System.IAsyncResult OnBeginUpdateAccount(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsAccount account = ((BOADMIN_NEW.BOEngineServiceTCP.clsAccount)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType = ((BOADMIN_NEW.BOEngineServiceTCP.AccountOpType)(inValues[2]));
            return this.BeginUpdateAccount(userIdPwd, account, opType, callback, asyncState);
        }
        
        private object[] OnEndUpdateAccount(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsAccount retVal = this.EndUpdateAccount(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateAccountCompleted(object state) {
            if ((this.UpdateAccountCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateAccountCompleted(this, new UpdateAccountCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAccountAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType) {
            this.UpdateAccountAsync(userIdPwd, account, opType, null);
        }
        
        public void UpdateAccountAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.clsAccount account, BOADMIN_NEW.BOEngineServiceTCP.AccountOpType opType, object userState) {
            if ((this.onBeginUpdateAccountDelegate == null)) {
                this.onBeginUpdateAccountDelegate = new BeginOperationDelegate(this.OnBeginUpdateAccount);
            }
            if ((this.onEndUpdateAccountDelegate == null)) {
                this.onEndUpdateAccountDelegate = new EndOperationDelegate(this.OnEndUpdateAccount);
            }
            if ((this.onUpdateAccountCompletedDelegate == null)) {
                this.onUpdateAccountCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateAccountCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateAccountDelegate, new object[] {
                        userIdPwd,
                        account,
                        opType}, this.onEndUpdateAccountDelegate, this.onUpdateAccountCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] GetCollateralInfo(string userIdPwd) {
            return base.Channel.GetCollateralInfo(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCollateralInfo(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCollateralInfo(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] EndGetCollateralInfo(System.IAsyncResult result) {
            return base.Channel.EndGetCollateralInfo(result);
        }
        
        private System.IAsyncResult OnBeginGetCollateralInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetCollateralInfo(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetCollateralInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCollateralInfo[] retVal = this.EndGetCollateralInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCollateralInfoCompleted(object state) {
            if ((this.GetCollateralInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCollateralInfoCompleted(this, new GetCollateralInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCollateralInfoAsync(string userIdPwd) {
            this.GetCollateralInfoAsync(userIdPwd, null);
        }
        
        public void GetCollateralInfoAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetCollateralInfoDelegate == null)) {
                this.onBeginGetCollateralInfoDelegate = new BeginOperationDelegate(this.OnBeginGetCollateralInfo);
            }
            if ((this.onEndGetCollateralInfoDelegate == null)) {
                this.onEndGetCollateralInfoDelegate = new EndOperationDelegate(this.OnEndGetCollateralInfo);
            }
            if ((this.onGetCollateralInfoCompletedDelegate == null)) {
                this.onGetCollateralInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCollateralInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetCollateralInfoDelegate, new object[] {
                        userIdPwd}, this.onEndGetCollateralInfoDelegate, this.onGetCollateralInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] HandleCollateralTransInfo(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo) {
            return base.Channel.HandleCollateralTransInfo(userIdPwd, accountGroupID, opType, collateralTransInfo);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleCollateralTransInfo(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleCollateralTransInfo(userIdPwd, accountGroupID, opType, collateralTransInfo, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] EndHandleCollateralTransInfo(System.IAsyncResult result) {
            return base.Channel.EndHandleCollateralTransInfo(result);
        }
        
        private System.IAsyncResult OnBeginHandleCollateralTransInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int accountGroupID = ((int)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[2]));
            BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo = ((BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo)(inValues[3]));
            return this.BeginHandleCollateralTransInfo(userIdPwd, accountGroupID, opType, collateralTransInfo, callback, asyncState);
        }
        
        private object[] OnEndHandleCollateralTransInfo(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] retVal = this.EndHandleCollateralTransInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleCollateralTransInfoCompleted(object state) {
            if ((this.HandleCollateralTransInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleCollateralTransInfoCompleted(this, new HandleCollateralTransInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleCollateralTransInfoAsync(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo) {
            this.HandleCollateralTransInfoAsync(userIdPwd, accountGroupID, opType, collateralTransInfo, null);
        }
        
        public void HandleCollateralTransInfoAsync(string userIdPwd, int accountGroupID, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo collateralTransInfo, object userState) {
            if ((this.onBeginHandleCollateralTransInfoDelegate == null)) {
                this.onBeginHandleCollateralTransInfoDelegate = new BeginOperationDelegate(this.OnBeginHandleCollateralTransInfo);
            }
            if ((this.onEndHandleCollateralTransInfoDelegate == null)) {
                this.onEndHandleCollateralTransInfoDelegate = new EndOperationDelegate(this.OnEndHandleCollateralTransInfo);
            }
            if ((this.onHandleCollateralTransInfoCompletedDelegate == null)) {
                this.onHandleCollateralTransInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleCollateralTransInfoCompleted);
            }
            base.InvokeAsync(this.onBeginHandleCollateralTransInfoDelegate, new object[] {
                        userIdPwd,
                        accountGroupID,
                        opType,
                        collateralTransInfo}, this.onEndHandleCollateralTransInfoDelegate, this.onHandleCollateralTransInfoCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] GetCollateralTransactionHistory(string userIdPwd, int accountGroupID, int CollateralTypeID) {
            return base.Channel.GetCollateralTransactionHistory(userIdPwd, accountGroupID, CollateralTypeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetCollateralTransactionHistory(string userIdPwd, int accountGroupID, int CollateralTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetCollateralTransactionHistory(userIdPwd, accountGroupID, CollateralTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] EndGetCollateralTransactionHistory(System.IAsyncResult result) {
            return base.Channel.EndGetCollateralTransactionHistory(result);
        }
        
        private System.IAsyncResult OnBeginGetCollateralTransactionHistory(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int accountGroupID = ((int)(inValues[1]));
            int CollateralTypeID = ((int)(inValues[2]));
            return this.BeginGetCollateralTransactionHistory(userIdPwd, accountGroupID, CollateralTypeID, callback, asyncState);
        }
        
        private object[] OnEndGetCollateralTransactionHistory(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCollateralTransInfo[] retVal = this.EndGetCollateralTransactionHistory(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetCollateralTransactionHistoryCompleted(object state) {
            if ((this.GetCollateralTransactionHistoryCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetCollateralTransactionHistoryCompleted(this, new GetCollateralTransactionHistoryCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetCollateralTransactionHistoryAsync(string userIdPwd, int accountGroupID, int CollateralTypeID) {
            this.GetCollateralTransactionHistoryAsync(userIdPwd, accountGroupID, CollateralTypeID, null);
        }
        
        public void GetCollateralTransactionHistoryAsync(string userIdPwd, int accountGroupID, int CollateralTypeID, object userState) {
            if ((this.onBeginGetCollateralTransactionHistoryDelegate == null)) {
                this.onBeginGetCollateralTransactionHistoryDelegate = new BeginOperationDelegate(this.OnBeginGetCollateralTransactionHistory);
            }
            if ((this.onEndGetCollateralTransactionHistoryDelegate == null)) {
                this.onEndGetCollateralTransactionHistoryDelegate = new EndOperationDelegate(this.OnEndGetCollateralTransactionHistory);
            }
            if ((this.onGetCollateralTransactionHistoryCompletedDelegate == null)) {
                this.onGetCollateralTransactionHistoryCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetCollateralTransactionHistoryCompleted);
            }
            base.InvokeAsync(this.onBeginGetCollateralTransactionHistoryDelegate, new object[] {
                        userIdPwd,
                        accountGroupID,
                        CollateralTypeID}, this.onEndGetCollateralTransactionHistoryDelegate, this.onGetCollateralTransactionHistoryCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] GetTradeOrdersDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTradeOrdersDetails(userIdPwd, startDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTradeOrdersDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTradeOrdersDetails(userIdPwd, startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] EndGetTradeOrdersDetails(System.IAsyncResult result) {
            return base.Channel.EndGetTradeOrdersDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetTradeOrdersDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetTradeOrdersDetails(userIdPwd, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTradeOrdersDetails(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] retVal = this.EndGetTradeOrdersDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTradeOrdersDetailsCompleted(object state) {
            if ((this.GetTradeOrdersDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTradeOrdersDetailsCompleted(this, new GetTradeOrdersDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTradeOrdersDetailsAsync(string userIdPwd, System.DateTime startDate, System.DateTime endDate) {
            this.GetTradeOrdersDetailsAsync(userIdPwd, startDate, endDate, null);
        }
        
        public void GetTradeOrdersDetailsAsync(string userIdPwd, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTradeOrdersDetailsDelegate == null)) {
                this.onBeginGetTradeOrdersDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetTradeOrdersDetails);
            }
            if ((this.onEndGetTradeOrdersDetailsDelegate == null)) {
                this.onEndGetTradeOrdersDetailsDelegate = new EndOperationDelegate(this.OnEndGetTradeOrdersDetails);
            }
            if ((this.onGetTradeOrdersDetailsCompletedDelegate == null)) {
                this.onGetTradeOrdersDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTradeOrdersDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTradeOrdersDetailsDelegate, new object[] {
                        userIdPwd,
                        startDate,
                        endDate}, this.onEndGetTradeOrdersDetailsDelegate, this.onGetTradeOrdersDetailsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] GetTradeDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate) {
            return base.Channel.GetTradeDetails(userIdPwd, startDate, endDate);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetTradeDetails(string userIdPwd, System.DateTime startDate, System.DateTime endDate, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetTradeDetails(userIdPwd, startDate, endDate, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] EndGetTradeDetails(System.IAsyncResult result) {
            return base.Channel.EndGetTradeDetails(result);
        }
        
        private System.IAsyncResult OnBeginGetTradeDetails(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            System.DateTime startDate = ((System.DateTime)(inValues[1]));
            System.DateTime endDate = ((System.DateTime)(inValues[2]));
            return this.BeginGetTradeDetails(userIdPwd, startDate, endDate, callback, asyncState);
        }
        
        private object[] OnEndGetTradeDetails(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTrades[] retVal = this.EndGetTradeDetails(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetTradeDetailsCompleted(object state) {
            if ((this.GetTradeDetailsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetTradeDetailsCompleted(this, new GetTradeDetailsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetTradeDetailsAsync(string userIdPwd, System.DateTime startDate, System.DateTime endDate) {
            this.GetTradeDetailsAsync(userIdPwd, startDate, endDate, null);
        }
        
        public void GetTradeDetailsAsync(string userIdPwd, System.DateTime startDate, System.DateTime endDate, object userState) {
            if ((this.onBeginGetTradeDetailsDelegate == null)) {
                this.onBeginGetTradeDetailsDelegate = new BeginOperationDelegate(this.OnBeginGetTradeDetails);
            }
            if ((this.onEndGetTradeDetailsDelegate == null)) {
                this.onEndGetTradeDetailsDelegate = new EndOperationDelegate(this.OnEndGetTradeDetails);
            }
            if ((this.onGetTradeDetailsCompletedDelegate == null)) {
                this.onGetTradeDetailsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetTradeDetailsCompleted);
            }
            base.InvokeAsync(this.onBeginGetTradeDetailsDelegate, new object[] {
                        userIdPwd,
                        startDate,
                        endDate}, this.onEndGetTradeDetailsDelegate, this.onGetTradeDetailsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades) {
            return base.Channel.ModifyTrade(userId, ModifyTrades);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginModifyTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginModifyTrade(userId, ModifyTrades, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades EndModifyTrade(System.IAsyncResult result) {
            return base.Channel.EndModifyTrade(result);
        }
        
        private System.IAsyncResult OnBeginModifyTrade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades = ((BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades)(inValues[1]));
            return this.BeginModifyTrade(userId, ModifyTrades, callback, asyncState);
        }
        
        private object[] OnEndModifyTrade(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades retVal = this.EndModifyTrade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnModifyTradeCompleted(object state) {
            if ((this.ModifyTradeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ModifyTradeCompleted(this, new ModifyTradeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ModifyTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades) {
            this.ModifyTradeAsync(userId, ModifyTrades, null);
        }
        
        public void ModifyTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsModifyTrades ModifyTrades, object userState) {
            if ((this.onBeginModifyTradeDelegate == null)) {
                this.onBeginModifyTradeDelegate = new BeginOperationDelegate(this.OnBeginModifyTrade);
            }
            if ((this.onEndModifyTradeDelegate == null)) {
                this.onEndModifyTradeDelegate = new EndOperationDelegate(this.OnEndModifyTrade);
            }
            if ((this.onModifyTradeCompletedDelegate == null)) {
                this.onModifyTradeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnModifyTradeCompleted);
            }
            base.InvokeAsync(this.onBeginModifyTradeDelegate, new object[] {
                        userId,
                        ModifyTrades}, this.onEndModifyTradeDelegate, this.onModifyTradeCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade1) {
            return base.Channel.NewTrade(userId, NewTrade1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginNewTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginNewTrade(userId, NewTrade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder EndNewTrade(System.IAsyncResult result) {
            return base.Channel.EndNewTrade(result);
        }
        
        private System.IAsyncResult OnBeginNewTrade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade = ((BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder)(inValues[1]));
            return this.BeginNewTrade(userId, NewTrade, callback, asyncState);
        }
        
        private object[] OnEndNewTrade(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder retVal = this.EndNewTrade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnNewTradeCompleted(object state) {
            if ((this.NewTradeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.NewTradeCompleted(this, new NewTradeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void NewTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade) {
            this.NewTradeAsync(userId, NewTrade, null);
        }
        
        public void NewTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsNewOrder NewTrade, object userState) {
            if ((this.onBeginNewTradeDelegate == null)) {
                this.onBeginNewTradeDelegate = new BeginOperationDelegate(this.OnBeginNewTrade);
            }
            if ((this.onEndNewTradeDelegate == null)) {
                this.onEndNewTradeDelegate = new EndOperationDelegate(this.OnEndNewTrade);
            }
            if ((this.onNewTradeCompletedDelegate == null)) {
                this.onNewTradeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnNewTradeCompleted);
            }
            base.InvokeAsync(this.onBeginNewTradeDelegate, new object[] {
                        userId,
                        NewTrade}, this.onEndNewTradeDelegate, this.onNewTradeCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade1) {
            return base.Channel.SettleTrade(userId, SettleTrade1);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSettleTrade(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSettleTrade(userId, SettleTrade, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade EndSettleTrade(System.IAsyncResult result) {
            return base.Channel.EndSettleTrade(result);
        }
        
        private System.IAsyncResult OnBeginSettleTrade(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade = ((BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade)(inValues[1]));
            return this.BeginSettleTrade(userId, SettleTrade, callback, asyncState);
        }
        
        private object[] OnEndSettleTrade(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade retVal = this.EndSettleTrade(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSettleTradeCompleted(object state) {
            if ((this.SettleTradeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SettleTradeCompleted(this, new SettleTradeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SettleTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade) {
            this.SettleTradeAsync(userId, SettleTrade, null);
        }
        
        public void SettleTradeAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsSettleTrade SettleTrade, object userState) {
            if ((this.onBeginSettleTradeDelegate == null)) {
                this.onBeginSettleTradeDelegate = new BeginOperationDelegate(this.OnBeginSettleTrade);
            }
            if ((this.onEndSettleTradeDelegate == null)) {
                this.onEndSettleTradeDelegate = new EndOperationDelegate(this.OnEndSettleTrade);
            }
            if ((this.onSettleTradeCompletedDelegate == null)) {
                this.onSettleTradeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSettleTradeCompleted);
            }
            base.InvokeAsync(this.onBeginSettleTradeDelegate, new object[] {
                        userId,
                        SettleTrade}, this.onEndSettleTradeDelegate, this.onSettleTradeCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] GetMapOrders(string userIdPwd) {
            return base.Channel.GetMapOrders(userIdPwd);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetMapOrders(string userIdPwd, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetMapOrders(userIdPwd, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] EndGetMapOrders(System.IAsyncResult result) {
            return base.Channel.EndGetMapOrders(result);
        }
        
        private System.IAsyncResult OnBeginGetMapOrders(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            return this.BeginGetMapOrders(userIdPwd, callback, asyncState);
        }
        
        private object[] OnEndGetMapOrders(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsMapOrders[] retVal = this.EndGetMapOrders(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetMapOrdersCompleted(object state) {
            if ((this.GetMapOrdersCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetMapOrdersCompleted(this, new GetMapOrdersCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetMapOrdersAsync(string userIdPwd) {
            this.GetMapOrdersAsync(userIdPwd, null);
        }
        
        public void GetMapOrdersAsync(string userIdPwd, object userState) {
            if ((this.onBeginGetMapOrdersDelegate == null)) {
                this.onBeginGetMapOrdersDelegate = new BeginOperationDelegate(this.OnBeginGetMapOrders);
            }
            if ((this.onEndGetMapOrdersDelegate == null)) {
                this.onEndGetMapOrdersDelegate = new EndOperationDelegate(this.OnEndGetMapOrders);
            }
            if ((this.onGetMapOrdersCompletedDelegate == null)) {
                this.onGetMapOrdersCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetMapOrdersCompleted);
            }
            base.InvokeAsync(this.onBeginGetMapOrdersDelegate, new object[] {
                        userIdPwd}, this.onEndGetMapOrdersDelegate, this.onGetMapOrdersCompletedDelegate, userState);
        }
        
        public string[] GetAccountIDsByAccountType(string userIdPwd, int AccountTypeID) {
            return base.Channel.GetAccountIDsByAccountType(userIdPwd, AccountTypeID);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetAccountIDsByAccountType(string userIdPwd, int AccountTypeID, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAccountIDsByAccountType(userIdPwd, AccountTypeID, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public string[] EndGetAccountIDsByAccountType(System.IAsyncResult result) {
            return base.Channel.EndGetAccountIDsByAccountType(result);
        }
        
        private System.IAsyncResult OnBeginGetAccountIDsByAccountType(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            int AccountTypeID = ((int)(inValues[1]));
            return this.BeginGetAccountIDsByAccountType(userIdPwd, AccountTypeID, callback, asyncState);
        }
        
        private object[] OnEndGetAccountIDsByAccountType(System.IAsyncResult result) {
            string[] retVal = this.EndGetAccountIDsByAccountType(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAccountIDsByAccountTypeCompleted(object state) {
            if ((this.GetAccountIDsByAccountTypeCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAccountIDsByAccountTypeCompleted(this, new GetAccountIDsByAccountTypeCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAccountIDsByAccountTypeAsync(string userIdPwd, int AccountTypeID) {
            this.GetAccountIDsByAccountTypeAsync(userIdPwd, AccountTypeID, null);
        }
        
        public void GetAccountIDsByAccountTypeAsync(string userIdPwd, int AccountTypeID, object userState) {
            if ((this.onBeginGetAccountIDsByAccountTypeDelegate == null)) {
                this.onBeginGetAccountIDsByAccountTypeDelegate = new BeginOperationDelegate(this.OnBeginGetAccountIDsByAccountType);
            }
            if ((this.onEndGetAccountIDsByAccountTypeDelegate == null)) {
                this.onEndGetAccountIDsByAccountTypeDelegate = new EndOperationDelegate(this.OnEndGetAccountIDsByAccountType);
            }
            if ((this.onGetAccountIDsByAccountTypeCompletedDelegate == null)) {
                this.onGetAccountIDsByAccountTypeCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAccountIDsByAccountTypeCompleted);
            }
            base.InvokeAsync(this.onBeginGetAccountIDsByAccountTypeDelegate, new object[] {
                        userIdPwd,
                        AccountTypeID}, this.onEndGetAccountIDsByAccountTypeDelegate, this.onGetAccountIDsByAccountTypeCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] HandleTGAccountConnetionSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings) {
            return base.Channel.HandleTGAccountConnetionSettings(userIdPwd, opType, TGACSettings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleTGAccountConnetionSettings(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleTGAccountConnetionSettings(userIdPwd, opType, TGACSettings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] EndHandleTGAccountConnetionSettings(System.IAsyncResult result) {
            return base.Channel.EndHandleTGAccountConnetionSettings(result);
        }
        
        private System.IAsyncResult OnBeginHandleTGAccountConnetionSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userIdPwd = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings = ((BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings)(inValues[2]));
            return this.BeginHandleTGAccountConnetionSettings(userIdPwd, opType, TGACSettings, callback, asyncState);
        }
        
        private object[] OnEndHandleTGAccountConnetionSettings(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings[] retVal = this.EndHandleTGAccountConnetionSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleTGAccountConnetionSettingsCompleted(object state) {
            if ((this.HandleTGAccountConnetionSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleTGAccountConnetionSettingsCompleted(this, new HandleTGAccountConnetionSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleTGAccountConnetionSettingsAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings) {
            this.HandleTGAccountConnetionSettingsAsync(userIdPwd, opType, TGACSettings, null);
        }
        
        public void HandleTGAccountConnetionSettingsAsync(string userIdPwd, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsTGAccountConnectionSettings TGACSettings, object userState) {
            if ((this.onBeginHandleTGAccountConnetionSettingsDelegate == null)) {
                this.onBeginHandleTGAccountConnetionSettingsDelegate = new BeginOperationDelegate(this.OnBeginHandleTGAccountConnetionSettings);
            }
            if ((this.onEndHandleTGAccountConnetionSettingsDelegate == null)) {
                this.onEndHandleTGAccountConnetionSettingsDelegate = new EndOperationDelegate(this.OnEndHandleTGAccountConnetionSettings);
            }
            if ((this.onHandleTGAccountConnetionSettingsCompletedDelegate == null)) {
                this.onHandleTGAccountConnetionSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleTGAccountConnetionSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginHandleTGAccountConnetionSettingsDelegate, new object[] {
                        userIdPwd,
                        opType,
                        TGACSettings}, this.onEndHandleTGAccountConnetionSettingsDelegate, this.onHandleTGAccountConnetionSettingsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] HandleVirtualDealer(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer) {
            return base.Channel.HandleVirtualDealer(userId, opType, virtualDealer);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleVirtualDealer(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleVirtualDealer(userId, opType, virtualDealer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] EndHandleVirtualDealer(System.IAsyncResult result) {
            return base.Channel.EndHandleVirtualDealer(result);
        }
        
        private System.IAsyncResult OnBeginHandleVirtualDealer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer = ((BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo)(inValues[2]));
            return this.BeginHandleVirtualDealer(userId, opType, virtualDealer, callback, asyncState);
        }
        
        private object[] OnEndHandleVirtualDealer(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo[] retVal = this.EndHandleVirtualDealer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleVirtualDealerCompleted(object state) {
            if ((this.HandleVirtualDealerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleVirtualDealerCompleted(this, new HandleVirtualDealerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleVirtualDealerAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer) {
            this.HandleVirtualDealerAsync(userId, opType, virtualDealer, null);
        }
        
        public void HandleVirtualDealerAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsVirtualDealerInfo virtualDealer, object userState) {
            if ((this.onBeginHandleVirtualDealerDelegate == null)) {
                this.onBeginHandleVirtualDealerDelegate = new BeginOperationDelegate(this.OnBeginHandleVirtualDealer);
            }
            if ((this.onEndHandleVirtualDealerDelegate == null)) {
                this.onEndHandleVirtualDealerDelegate = new EndOperationDelegate(this.OnEndHandleVirtualDealer);
            }
            if ((this.onHandleVirtualDealerCompletedDelegate == null)) {
                this.onHandleVirtualDealerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleVirtualDealerCompleted);
            }
            base.InvokeAsync(this.onBeginHandleVirtualDealerDelegate, new object[] {
                        userId,
                        opType,
                        virtualDealer}, this.onEndHandleVirtualDealerDelegate, this.onHandleVirtualDealerCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] HandleCommonSettings(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings) {
            return base.Channel.HandleCommonSettings(userId, opType, commonSettings);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleCommonSettings(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleCommonSettings(userId, opType, commonSettings, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] EndHandleCommonSettings(System.IAsyncResult result) {
            return base.Channel.EndHandleCommonSettings(result);
        }
        
        private System.IAsyncResult OnBeginHandleCommonSettings(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings = ((BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings)(inValues[2]));
            return this.BeginHandleCommonSettings(userId, opType, commonSettings, callback, asyncState);
        }
        
        private object[] OnEndHandleCommonSettings(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings[] retVal = this.EndHandleCommonSettings(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleCommonSettingsCompleted(object state) {
            if ((this.HandleCommonSettingsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleCommonSettingsCompleted(this, new HandleCommonSettingsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleCommonSettingsAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings) {
            this.HandleCommonSettingsAsync(userId, opType, commonSettings, null);
        }
        
        public void HandleCommonSettingsAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes opType, BOADMIN_NEW.BOEngineServiceTCP.clsCommonSettings commonSettings, object userState) {
            if ((this.onBeginHandleCommonSettingsDelegate == null)) {
                this.onBeginHandleCommonSettingsDelegate = new BeginOperationDelegate(this.OnBeginHandleCommonSettings);
            }
            if ((this.onEndHandleCommonSettingsDelegate == null)) {
                this.onEndHandleCommonSettingsDelegate = new EndOperationDelegate(this.OnEndHandleCommonSettings);
            }
            if ((this.onHandleCommonSettingsCompletedDelegate == null)) {
                this.onHandleCommonSettingsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleCommonSettingsCompleted);
            }
            base.InvokeAsync(this.onBeginHandleCommonSettingsDelegate, new object[] {
                        userId,
                        opType,
                        commonSettings}, this.onEndHandleCommonSettingsDelegate, this.onHandleCommonSettingsCompletedDelegate, userState);
        }
        
        public BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] HandleInstClosingPrice(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType) {
            return base.Channel.HandleInstClosingPrice(userId, instrumentClosingPrice, operationType);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginHandleInstClosingPrice(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginHandleInstClosingPrice(userId, instrumentClosingPrice, operationType, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] EndHandleInstClosingPrice(System.IAsyncResult result) {
            return base.Channel.EndHandleInstClosingPrice(result);
        }
        
        private System.IAsyncResult OnBeginHandleInstClosingPrice(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice = ((BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice)(inValues[1]));
            BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType = ((BOADMIN_NEW.BOEngineServiceTCP.OperationTypes)(inValues[2]));
            return this.BeginHandleInstClosingPrice(userId, instrumentClosingPrice, operationType, callback, asyncState);
        }
        
        private object[] OnEndHandleInstClosingPrice(System.IAsyncResult result) {
            BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice[] retVal = this.EndHandleInstClosingPrice(result);
            return new object[] {
                    retVal};
        }
        
        private void OnHandleInstClosingPriceCompleted(object state) {
            if ((this.HandleInstClosingPriceCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.HandleInstClosingPriceCompleted(this, new HandleInstClosingPriceCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void HandleInstClosingPriceAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType) {
            this.HandleInstClosingPriceAsync(userId, instrumentClosingPrice, operationType, null);
        }
        
        public void HandleInstClosingPriceAsync(string userId, BOADMIN_NEW.BOEngineServiceTCP.clsInstrumentClosingPrice instrumentClosingPrice, BOADMIN_NEW.BOEngineServiceTCP.OperationTypes operationType, object userState) {
            if ((this.onBeginHandleInstClosingPriceDelegate == null)) {
                this.onBeginHandleInstClosingPriceDelegate = new BeginOperationDelegate(this.OnBeginHandleInstClosingPrice);
            }
            if ((this.onEndHandleInstClosingPriceDelegate == null)) {
                this.onEndHandleInstClosingPriceDelegate = new EndOperationDelegate(this.OnEndHandleInstClosingPrice);
            }
            if ((this.onHandleInstClosingPriceCompletedDelegate == null)) {
                this.onHandleInstClosingPriceCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnHandleInstClosingPriceCompleted);
            }
            base.InvokeAsync(this.onBeginHandleInstClosingPriceDelegate, new object[] {
                        userId,
                        instrumentClosingPrice,
                        operationType}, this.onEndHandleInstClosingPriceDelegate, this.onHandleInstClosingPriceCompletedDelegate, userState);
        }
    }
}
