//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace clsInterface4OME.DSBO {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DS4VirtualDealer")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DS4VirtualDealer : global::System.Data.DataSet {
        
        private dtVirtualDealerDataTable tabledtVirtualDealer;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DS4VirtualDealer() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DS4VirtualDealer(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtVirtualDealer"] != null)) {
                    base.Tables.Add(new dtVirtualDealerDataTable(ds.Tables["dtVirtualDealer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtVirtualDealerDataTable dtVirtualDealer {
            get {
                return this.tabledtVirtualDealer;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DS4VirtualDealer cln = ((DS4VirtualDealer)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtVirtualDealer"] != null)) {
                    base.Tables.Add(new dtVirtualDealerDataTable(ds.Tables["dtVirtualDealer"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tabledtVirtualDealer = ((dtVirtualDealerDataTable)(base.Tables["dtVirtualDealer"]));
            if ((initTable == true)) {
                if ((this.tabledtVirtualDealer != null)) {
                    this.tabledtVirtualDealer.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DS4VirtualDealer";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DS4VirtualDealer.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtVirtualDealer = new dtVirtualDealerDataTable();
            base.Tables.Add(this.tabledtVirtualDealer);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializedtVirtualDealer() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DS4VirtualDealer ds = new DS4VirtualDealer();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void dtVirtualDealerRowChangeEventHandler(object sender, dtVirtualDealerRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtVirtualDealerDataTable : global::System.Data.TypedTableBase<dtVirtualDealerRow> {
            
            private global::System.Data.DataColumn columnVirtualDealerID;
            
            private global::System.Data.DataColumn columnDelay;
            
            private global::System.Data.DataColumn columnVirtualManagerAccount;
            
            private global::System.Data.DataColumn columnGroups;
            
            private global::System.Data.DataColumn columnSymbols;
            
            private global::System.Data.DataColumn columnMaxVolume;
            
            private global::System.Data.DataColumn columnMaxLosingSlippage;
            
            private global::System.Data.DataColumn columnMaxProfitSlippage;
            
            private global::System.Data.DataColumn columnMaxProfitSlippageVolume;
            
            private global::System.Data.DataColumn columnGapLevel;
            
            private global::System.Data.DataColumn columnGapSafeLevel;
            
            private global::System.Data.DataColumn columnGapTickCounter;
            
            private global::System.Data.DataColumn columnGapPendingsCancel;
            
            private global::System.Data.DataColumn columnGapTakeProfitSlide;
            
            private global::System.Data.DataColumn columnGapStopLossSlide;
            
            private global::System.Data.DataColumn columnNewsStopFreezes;
            
            private global::System.Data.DataColumn columnAllowPedningsOnNews;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerDataTable() {
                this.TableName = "dtVirtualDealer";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtVirtualDealerDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected dtVirtualDealerDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VirtualDealerIDColumn {
                get {
                    return this.columnVirtualDealerID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DelayColumn {
                get {
                    return this.columnDelay;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VirtualManagerAccountColumn {
                get {
                    return this.columnVirtualManagerAccount;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GroupsColumn {
                get {
                    return this.columnGroups;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SymbolsColumn {
                get {
                    return this.columnSymbols;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxVolumeColumn {
                get {
                    return this.columnMaxVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxLosingSlippageColumn {
                get {
                    return this.columnMaxLosingSlippage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxProfitSlippageColumn {
                get {
                    return this.columnMaxProfitSlippage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MaxProfitSlippageVolumeColumn {
                get {
                    return this.columnMaxProfitSlippageVolume;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapLevelColumn {
                get {
                    return this.columnGapLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapSafeLevelColumn {
                get {
                    return this.columnGapSafeLevel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapTickCounterColumn {
                get {
                    return this.columnGapTickCounter;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapPendingsCancelColumn {
                get {
                    return this.columnGapPendingsCancel;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapTakeProfitSlideColumn {
                get {
                    return this.columnGapTakeProfitSlide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GapStopLossSlideColumn {
                get {
                    return this.columnGapStopLossSlide;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn NewsStopFreezesColumn {
                get {
                    return this.columnNewsStopFreezes;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AllowPedningsOnNewsColumn {
                get {
                    return this.columnAllowPedningsOnNews;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRow this[int index] {
                get {
                    return ((dtVirtualDealerRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtVirtualDealerRowChangeEventHandler dtVirtualDealerRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtVirtualDealerRowChangeEventHandler dtVirtualDealerRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtVirtualDealerRowChangeEventHandler dtVirtualDealerRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event dtVirtualDealerRowChangeEventHandler dtVirtualDealerRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AdddtVirtualDealerRow(dtVirtualDealerRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRow AdddtVirtualDealerRow(
                        int VirtualDealerID, 
                        int Delay, 
                        string VirtualManagerAccount, 
                        string Groups, 
                        string Symbols, 
                        decimal MaxVolume, 
                        int MaxLosingSlippage, 
                        int MaxProfitSlippage, 
                        int MaxProfitSlippageVolume, 
                        int GapLevel, 
                        int GapSafeLevel, 
                        int GapTickCounter, 
                        int GapPendingsCancel, 
                        int GapTakeProfitSlide, 
                        int GapStopLossSlide, 
                        int NewsStopFreezes, 
                        int AllowPedningsOnNews) {
                dtVirtualDealerRow rowdtVirtualDealerRow = ((dtVirtualDealerRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        VirtualDealerID,
                        Delay,
                        VirtualManagerAccount,
                        Groups,
                        Symbols,
                        MaxVolume,
                        MaxLosingSlippage,
                        MaxProfitSlippage,
                        MaxProfitSlippageVolume,
                        GapLevel,
                        GapSafeLevel,
                        GapTickCounter,
                        GapPendingsCancel,
                        GapTakeProfitSlide,
                        GapStopLossSlide,
                        NewsStopFreezes,
                        AllowPedningsOnNews};
                rowdtVirtualDealerRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtVirtualDealerRow);
                return rowdtVirtualDealerRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRow FindByVirtualDealerID(int VirtualDealerID) {
                return ((dtVirtualDealerRow)(this.Rows.Find(new object[] {
                            VirtualDealerID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                dtVirtualDealerDataTable cln = ((dtVirtualDealerDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtVirtualDealerDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnVirtualDealerID = base.Columns["VirtualDealerID"];
                this.columnDelay = base.Columns["Delay"];
                this.columnVirtualManagerAccount = base.Columns["VirtualManagerAccount"];
                this.columnGroups = base.Columns["Groups"];
                this.columnSymbols = base.Columns["Symbols"];
                this.columnMaxVolume = base.Columns["MaxVolume"];
                this.columnMaxLosingSlippage = base.Columns["MaxLosingSlippage"];
                this.columnMaxProfitSlippage = base.Columns["MaxProfitSlippage"];
                this.columnMaxProfitSlippageVolume = base.Columns["MaxProfitSlippageVolume"];
                this.columnGapLevel = base.Columns["GapLevel"];
                this.columnGapSafeLevel = base.Columns["GapSafeLevel"];
                this.columnGapTickCounter = base.Columns["GapTickCounter"];
                this.columnGapPendingsCancel = base.Columns["GapPendingsCancel"];
                this.columnGapTakeProfitSlide = base.Columns["GapTakeProfitSlide"];
                this.columnGapStopLossSlide = base.Columns["GapStopLossSlide"];
                this.columnNewsStopFreezes = base.Columns["NewsStopFreezes"];
                this.columnAllowPedningsOnNews = base.Columns["AllowPedningsOnNews"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnVirtualDealerID = new global::System.Data.DataColumn("VirtualDealerID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVirtualDealerID);
                this.columnDelay = new global::System.Data.DataColumn("Delay", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDelay);
                this.columnVirtualManagerAccount = new global::System.Data.DataColumn("VirtualManagerAccount", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVirtualManagerAccount);
                this.columnGroups = new global::System.Data.DataColumn("Groups", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGroups);
                this.columnSymbols = new global::System.Data.DataColumn("Symbols", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSymbols);
                this.columnMaxVolume = new global::System.Data.DataColumn("MaxVolume", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxVolume);
                this.columnMaxLosingSlippage = new global::System.Data.DataColumn("MaxLosingSlippage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxLosingSlippage);
                this.columnMaxProfitSlippage = new global::System.Data.DataColumn("MaxProfitSlippage", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxProfitSlippage);
                this.columnMaxProfitSlippageVolume = new global::System.Data.DataColumn("MaxProfitSlippageVolume", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMaxProfitSlippageVolume);
                this.columnGapLevel = new global::System.Data.DataColumn("GapLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapLevel);
                this.columnGapSafeLevel = new global::System.Data.DataColumn("GapSafeLevel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapSafeLevel);
                this.columnGapTickCounter = new global::System.Data.DataColumn("GapTickCounter", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapTickCounter);
                this.columnGapPendingsCancel = new global::System.Data.DataColumn("GapPendingsCancel", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapPendingsCancel);
                this.columnGapTakeProfitSlide = new global::System.Data.DataColumn("GapTakeProfitSlide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapTakeProfitSlide);
                this.columnGapStopLossSlide = new global::System.Data.DataColumn("GapStopLossSlide", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGapStopLossSlide);
                this.columnNewsStopFreezes = new global::System.Data.DataColumn("NewsStopFreezes", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnNewsStopFreezes);
                this.columnAllowPedningsOnNews = new global::System.Data.DataColumn("AllowPedningsOnNews", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAllowPedningsOnNews);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnVirtualDealerID}, true));
                this.columnVirtualDealerID.AllowDBNull = false;
                this.columnVirtualDealerID.Unique = true;
                this.columnVirtualDealerID.DefaultValue = ((int)(0));
                this.columnDelay.DefaultValue = ((int)(0));
                this.columnVirtualManagerAccount.DefaultValue = ((string)(""));
                this.columnGroups.DefaultValue = ((string)(""));
                this.columnSymbols.DefaultValue = ((string)(""));
                this.columnMaxVolume.DefaultValue = ((decimal)(0m));
                this.columnMaxLosingSlippage.DefaultValue = ((int)(0));
                this.columnMaxProfitSlippage.DefaultValue = ((int)(0));
                this.columnMaxProfitSlippageVolume.DefaultValue = ((int)(0));
                this.columnGapLevel.DefaultValue = ((int)(0));
                this.columnGapSafeLevel.DefaultValue = ((int)(0));
                this.columnGapTickCounter.DefaultValue = ((int)(0));
                this.columnGapPendingsCancel.DefaultValue = ((int)(0));
                this.columnGapTakeProfitSlide.DefaultValue = ((int)(0));
                this.columnGapStopLossSlide.DefaultValue = ((int)(0));
                this.columnNewsStopFreezes.DefaultValue = ((int)(0));
                this.columnAllowPedningsOnNews.DefaultValue = ((int)(0));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRow NewdtVirtualDealerRow() {
                return ((dtVirtualDealerRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtVirtualDealerRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(dtVirtualDealerRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtVirtualDealerRowChanged != null)) {
                    this.dtVirtualDealerRowChanged(this, new dtVirtualDealerRowChangeEvent(((dtVirtualDealerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtVirtualDealerRowChanging != null)) {
                    this.dtVirtualDealerRowChanging(this, new dtVirtualDealerRowChangeEvent(((dtVirtualDealerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtVirtualDealerRowDeleted != null)) {
                    this.dtVirtualDealerRowDeleted(this, new dtVirtualDealerRowChangeEvent(((dtVirtualDealerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtVirtualDealerRowDeleting != null)) {
                    this.dtVirtualDealerRowDeleting(this, new dtVirtualDealerRowChangeEvent(((dtVirtualDealerRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemovedtVirtualDealerRow(dtVirtualDealerRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DS4VirtualDealer ds = new DS4VirtualDealer();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtVirtualDealerDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class dtVirtualDealerRow : global::System.Data.DataRow {
            
            private dtVirtualDealerDataTable tabledtVirtualDealer;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal dtVirtualDealerRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtVirtualDealer = ((dtVirtualDealerDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int VirtualDealerID {
                get {
                    return ((int)(this[this.tabledtVirtualDealer.VirtualDealerIDColumn]));
                }
                set {
                    this[this.tabledtVirtualDealer.VirtualDealerIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Delay {
                get {
                    if (this.IsDelayNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.DelayColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.DelayColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VirtualManagerAccount {
                get {
                    if (this.IsVirtualManagerAccountNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtVirtualDealer.VirtualManagerAccountColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.VirtualManagerAccountColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Groups {
                get {
                    if (this.IsGroupsNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtVirtualDealer.GroupsColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GroupsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Symbols {
                get {
                    if (this.IsSymbolsNull()) {
                        return string.Empty;
                    }
                    else {
                        return ((string)(this[this.tabledtVirtualDealer.SymbolsColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.SymbolsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MaxVolume {
                get {
                    if (this.IsMaxVolumeNull()) {
                        return 0m;
                    }
                    else {
                        return ((decimal)(this[this.tabledtVirtualDealer.MaxVolumeColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.MaxVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxLosingSlippage {
                get {
                    if (this.IsMaxLosingSlippageNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.MaxLosingSlippageColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.MaxLosingSlippageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxProfitSlippage {
                get {
                    if (this.IsMaxProfitSlippageNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.MaxProfitSlippageColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.MaxProfitSlippageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int MaxProfitSlippageVolume {
                get {
                    if (this.IsMaxProfitSlippageVolumeNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.MaxProfitSlippageVolumeColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.MaxProfitSlippageVolumeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapLevel {
                get {
                    if (this.IsGapLevelNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapLevelColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapSafeLevel {
                get {
                    if (this.IsGapSafeLevelNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapSafeLevelColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapSafeLevelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapTickCounter {
                get {
                    if (this.IsGapTickCounterNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapTickCounterColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapTickCounterColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapPendingsCancel {
                get {
                    if (this.IsGapPendingsCancelNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapPendingsCancelColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapPendingsCancelColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapTakeProfitSlide {
                get {
                    if (this.IsGapTakeProfitSlideNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapTakeProfitSlideColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapTakeProfitSlideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int GapStopLossSlide {
                get {
                    if (this.IsGapStopLossSlideNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.GapStopLossSlideColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.GapStopLossSlideColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int NewsStopFreezes {
                get {
                    if (this.IsNewsStopFreezesNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.NewsStopFreezesColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.NewsStopFreezesColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AllowPedningsOnNews {
                get {
                    if (this.IsAllowPedningsOnNewsNull()) {
                        return 0;
                    }
                    else {
                        return ((int)(this[this.tabledtVirtualDealer.AllowPedningsOnNewsColumn]));
                    }
                }
                set {
                    this[this.tabledtVirtualDealer.AllowPedningsOnNewsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDelayNull() {
                return this.IsNull(this.tabledtVirtualDealer.DelayColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDelayNull() {
                this[this.tabledtVirtualDealer.DelayColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVirtualManagerAccountNull() {
                return this.IsNull(this.tabledtVirtualDealer.VirtualManagerAccountColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVirtualManagerAccountNull() {
                this[this.tabledtVirtualDealer.VirtualManagerAccountColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGroupsNull() {
                return this.IsNull(this.tabledtVirtualDealer.GroupsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGroupsNull() {
                this[this.tabledtVirtualDealer.GroupsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSymbolsNull() {
                return this.IsNull(this.tabledtVirtualDealer.SymbolsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSymbolsNull() {
                this[this.tabledtVirtualDealer.SymbolsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxVolumeNull() {
                return this.IsNull(this.tabledtVirtualDealer.MaxVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxVolumeNull() {
                this[this.tabledtVirtualDealer.MaxVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxLosingSlippageNull() {
                return this.IsNull(this.tabledtVirtualDealer.MaxLosingSlippageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxLosingSlippageNull() {
                this[this.tabledtVirtualDealer.MaxLosingSlippageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxProfitSlippageNull() {
                return this.IsNull(this.tabledtVirtualDealer.MaxProfitSlippageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxProfitSlippageNull() {
                this[this.tabledtVirtualDealer.MaxProfitSlippageColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMaxProfitSlippageVolumeNull() {
                return this.IsNull(this.tabledtVirtualDealer.MaxProfitSlippageVolumeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMaxProfitSlippageVolumeNull() {
                this[this.tabledtVirtualDealer.MaxProfitSlippageVolumeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapLevelNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapLevelNull() {
                this[this.tabledtVirtualDealer.GapLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapSafeLevelNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapSafeLevelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapSafeLevelNull() {
                this[this.tabledtVirtualDealer.GapSafeLevelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapTickCounterNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapTickCounterColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapTickCounterNull() {
                this[this.tabledtVirtualDealer.GapTickCounterColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapPendingsCancelNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapPendingsCancelColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapPendingsCancelNull() {
                this[this.tabledtVirtualDealer.GapPendingsCancelColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapTakeProfitSlideNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapTakeProfitSlideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapTakeProfitSlideNull() {
                this[this.tabledtVirtualDealer.GapTakeProfitSlideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGapStopLossSlideNull() {
                return this.IsNull(this.tabledtVirtualDealer.GapStopLossSlideColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGapStopLossSlideNull() {
                this[this.tabledtVirtualDealer.GapStopLossSlideColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsNewsStopFreezesNull() {
                return this.IsNull(this.tabledtVirtualDealer.NewsStopFreezesColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetNewsStopFreezesNull() {
                this[this.tabledtVirtualDealer.NewsStopFreezesColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAllowPedningsOnNewsNull() {
                return this.IsNull(this.tabledtVirtualDealer.AllowPedningsOnNewsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAllowPedningsOnNewsNull() {
                this[this.tabledtVirtualDealer.AllowPedningsOnNewsColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class dtVirtualDealerRowChangeEvent : global::System.EventArgs {
            
            private dtVirtualDealerRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRowChangeEvent(dtVirtualDealerRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public dtVirtualDealerRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591